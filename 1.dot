digraph G {
  riscv_f16ToI64;
  F_UN_RM_TYPE_S____FCVT_S_W;
  RISCV_REV8;
  illegal_indexed_store;
  WXTYPE;
  wV_bits;
  riscv_f64Mul;
  vpns_of_va;
  AES64DS;
  f_is_neg_subnorm_H;
  f_is_pos_zero_S;
  lift_sstatus;
  VMSBF_M;
  init_masked_result_carry;
  f_is_neg_norm;
  RTYPE;
  get_config_print_reg;
  legalize_sstatus;
  VFMERGE;
  riscv_ui64ToF16;
  flush_TLB_Entry;
  RIVVTYPE;
  F_BIN_TYPE_H____FMAX_H;
  riscv_ui32ToF32;
  read_seed_csr;
  legalize_misa;
  C_ZEXT_W;
  wF_bits;
  ext_veto_disable_C;
  SFENCE_INVAL_IR;
  RISCV_XPERM4;
  f_is_QNaN_S;
  report_invalid_width;
  extStatus_of_bits;
  C_AND;
  msbs_of_PTE;
  AES32DSI;
  riscv_f64roundToInt;
  riscv_f16roundToInt;
  prepare_xret_target;
  fp_add;
  RISCV_RORI;
  pmpWriteCfgReg;
  RISCV_JALR;
  phys_mem_write;
  regval_from_reg;
  VMSIF_M;
  init_masked_result_cmp;
  assert_vstart;
  process_fload32;
  riscv_f64ToUi32;
  mmio_read;
  VLSSEGTYPE;
  aes_sbox_inv;
  lowest_supported_privLevel;
  SHA512SIG1H;
  aes_rv64_shiftrows_inv;
  riscv_f16ToUi64;
  f_is_pos_zero_H;
  f_is_pos_norm;
  riscv_f16ToI16;
  F_UN_RM_TYPE_H____FCVT_H_W;
  RISCV_FLTQ_S;
  F_UN_TYPE_S____FMV_W_X;
  PPNs_of_PTE;
  VXSG;
  riscv_f32Le;
  VXCMPTYPE;
  accessToFault;
  bool_to_bits;
  C_LHU;
  RISCV_JAL;
  get_sew;
  rF_D;
  ECALL;
  write_vreg;
  valid_rd_mask;
  F_BIN_TYPE_S____FSGNJN_S;
  C_FSWSP;
  aes_decode_rcon;
  riscv_f64Eq;
  F_BIN_TYPE_H____FMIN_H;
  write_seed_csr;
  process_vsxseg;
  VMVXS;
  riscv_f32Lt_quiet;
  get_fixed_rounding_incr;
  F_UN_RM_TYPE_D____FCVT_L_D;
  set_mstatus_UXL;
  illegal_store;
  fp_div;
  wF_H;
  C_FLD;
  get_next_pc;
  rvfi_trap;
  SHIFTIWOP;
  riscv_ui64ToF64;
  get_mstatus_UXL;
  riscv_f64Le_quiet;
  SHA512SIG1;
  rX;
  read_vmask_carry;
  F_UN_RM_TYPE_H____FCVT_D_H;
  fp_gt;
  riscv_f64Rsqrte7;
  NITYPE;
  fle_D;
  F_UN_RM_TYPE_S____FSQRT_S;
  mem_read;
  __ReadRAM_Meta;
  negate_H;
  WFI;
  ext_check_xret_priv;
  VVMTYPE;
  MVXMATYPE;
  RISCV_FLI_D;
  ofFlag;
  MASKTYPEX;
  fp_ge;
  f_is_NaN;
  RISCV_FROUNDNX_D;
  RISCV_FROUND_D;
  checked_mem_write;
  VSETIVLI;
  aes_rv64_shiftrows_fwd;
  legalize_satp;
  pc_alignment_mask;
  get_shift_amount;
  F_UN_RM_TYPE_S____FCVT_LU_S;
  fsplit_S;
  process_vlsegff;
  aes_mixcolumn_byte_fwd;
  RISCV_FMAXM_D;
  f_is_pos_inf_D;
  C_SD;
  pmpTORLocked;
  get_vlen_pow;
  riscv_ui32ToF16;
  creg2reg_idx;
  clint_dispatch;
  riscv_f16Mul;
  ZBKB_PACKW;
  F_BIN_TYPE_D____FLE_D;
  riscv_f64Div;
  FVVMTYPE;
  VMVSX;
  canonical_NaN_D;
  aes_sbox_fwd;
  num_of_ExceptionType;
  riscv_f64Le;
  ext_write_CSR;
  RISCV_ORCB;
  read_single_vreg;
  pte_is_ptr;
  C_MUL;
  ext_fail_xret_priv;
  fp_nmulsub;
  SM3P1;
  RISCV_CLMUL;
  get_sew_bytes;
  RISCV_FLEQ_S;
  WVXTYPE;
  RISCV_FMAXM_S;
  C_ILLEGAL;
  fp_muladd;
  read_ram;
  process_vlsseg;
  legalize_mip;
  NXSTYPE;
  VSOXSEGTYPE;
  F_UN_RM_TYPE_S____FCVT_S_L;
  VXMCTYPE;
  MMTYPE;
  check_CSR_access;
  f_is_pos_subnorm_D;
  rotatel;
  pmpReadCfgReg;
  riscv_f64ToI32;
  rF_or_X_D;
  NVTYPE;
  mmio_write;
  f_is_neg_norm_H;
  riscv_f32Lt;
  zeros_implicit;
  AES64KS2;
  F_UN_RM_TYPE_H____FCVT_L_H;
  RegStr;
  flush_TLB;
  ext_translate_exception;
  prepare_trap_vector;
  ZICOND_RTYPE____RISCV_CZERO_EQZ;
  F_BIN_TYPE_S____FEQ_S;
  legalize_satp32;
  pmpReadAddrReg;
  F_UN_RM_TYPE_H____FCVT_H_WU;
  F_UN_RM_TYPE_D____FCVT_D_W;
  rsqrt7;
  is_aligned;
  shift_right_arith32;
  riscv_f16ToF32;
  AES32ESMI;
  F_UN_RM_TYPE_H____FCVT_H_LU;
  canonical_NaN_H;
  riscv_f32roundToInt;
  F_UN_RM_TYPE_H____FCVT_H_S;
  ext_check_phys_mem_write;
  write_vmask;
  F_UN_TYPE_H____FMV_X_H;
  F_MADD_TYPE_H;
  rF;
  aes_mixcolumn_byte_inv;
  RISCV_FROUNDNX_H;
  MOVETYPEI;
  is_CSR_defined;
  RISCV_FLTQ_H;
  lift_sip;
  C_LW;
  handle_illegal_vtype;
  get_stvec;
  C_LWSP;
  C_ADDI16SP;
  SHA512SIG0L;
  riscv_f32Mul;
  rF_or_X_H;
  F_UN_RM_TYPE_D____FCVT_D_WU;
  privLevel_to_str;
  get_config_print_platform;
  SM3P0;
  aes_apply_fwd_sbox_to_each_byte;
  f_is_NaN_D;
  F_UN_RM_TYPE_D____FCVT_D_L;
  fle_S;
  illegal_reduction;
  SM4ED;
  RISCV_FMINM_D;
  f_is_neg_inf_H;
  rF_H;
  AES64IM;
  riscv_f64Lt_quiet;
  VLRETYPE;
  VFMVFS;
  riscv_f64Add;
  legalize_mcountinhibit;
  exceptionType_to_bits;
  extensionEnabled;
  fp_min;
  nan_box_H;
  RISCV_CTZ;
  f_is_neg_zero_S;
  RISCV_FMVH_X_D;
  RISCV_SLLIUW;
  zero_extend;
  select_instr_or_fcsr_rm;
  check_CSR;
  within_htif_writable;
  get_vtype_vta;
  RISCV_FMINM_S;
  riscv_f16ToUi32;
  ZBA_RTYPEUW;
  clint_store;
  wV;
  F_BIN_RM_TYPE_D;
  riscv_f32ToUi64;
  F_MADD_TYPE_S;
  internal_error;
  write_single_vreg;
  trapVectorMode_of_bits;
  SHA512SUM1;
  process_vm;
  aes_apply_inv_sbox_to_each_byte;
  rotater;
  nvFlag;
  C_LDSP;
  tvec_addr;
  RISCV_CPOP;
  F_UN_RM_TYPE_H____FCVT_H_D;
  riscv_f16Lt_quiet;
  legalize_mstatus;
  riscv_f16Rsqrte7;
  write_TLB;
  FWFTYPE;
  FWVTYPE;
  recip7;
  ZBB_RTYPE;
  legalize_medeleg;
  SM4KS;
  RISCV_RORIW;
  check_seed_CSR;
  arch_to_bits;
  NXTYPE;
  check_TVM_SATP;
  process_vlre;
  effective_fence_set;
  update_PTE_Bits;
  C_ADDIW;
  C_LD;
  valid_eew_emul;
  RISCV_CTZW;
  phys_access_check;
  translate_TLB_hit;
  get_lmul_pow;
  RISCV_XPERM8;
  ITYPE;
  pmpAddrMatchType_to_bits;
  riscv_f64Sqrt;
  mem_write_value;
  legalize_mie;
  F_BIN_TYPE_D____FMIN_D;
  vpn_j_of_va;
  negate_D;
  ext_exc_type_to_bits;
  VID_V;
  FENCE;
  f_is_pos_norm_D;
  C_FLWSP;
  exception_handler;
  STORE;
  F_BIN_TYPE_D____FMAX_D;
  VSSEGTYPE;
  F_UN_RM_TYPE_D____FCVT_LU_D;
  illegal_indexed_load;
  valid_segment;
  tlb_hash;
  handle_illegal;
  pte_is_invalid;
  C_FSDSP;
  wF_or_X_D;
  SRET;
  rX_bits;
  F_UN_RM_TYPE_D____FSQRT_D;
  handle_trap_extension;
  process_vsre;
  privLevel_to_bits;
  STORE_FP;
  C_JALR;
  f_is_pos_zero;
  accrue_fflags;
  translateAddr;
  pmpMatchEntry;
  SHA512SIG0;
  RISCV_FLI_S;
  C_SB;
  ZBB_RTYPEW;
  htif_load;
  C_FLDSP;
  bit_str;
  calculate_new_vl;
  F_UN_RM_TYPE_S____FCVT_WU_S;
  check_Counteren;
  dzFlag;
  f_is_pos_zero_D;
  to_bits;
  is_valid_vAddr;
  RISCV_FCVTMOD_W_D;
  riscv_f64ToF16;
  wF;
  RFVVTYPE;
  satp_to_asid;
  SHA512SIG0H;
  f_is_NaN_H;
  fregval_from_freg;
  extStatus_to_bits;
  AMO;
  riscv_f16Add;
  LOAD_FP;
  set_mtvec;
  VVMSTYPE;
  FVVMATYPE;
  F_UN_RM_TYPE_D____FCVT_D_LU;
  VEXT2TYPE;
  f_is_pos_subnorm_S;
  sign_extend;
  count_leadingzeros;
  f_is_neg_inf_S;
  set_stvec;
  EBREAK;
  legalize_sip;
  pmpMatchAddr;
  C_LUI;
  csrPriv;
  process_rfvv_single;
  F_BIN_TYPE_S____FSGNJ_S;
  riscv_f32ToUi32;
  add_to_TLB;
  F_MADD_TYPE_D;
  C_ZEXT_H;
  SHA512SIG1L;
  F_UN_RM_TYPE_S____FCVT_S_LU;
  VLSEGTYPE;
  SHA256SIG0;
  nan_box_S;
  signed_saturation;
  F_BIN_TYPE_H____FEQ_H;
  F_BIN_TYPE_S____FMAX_S;
  f_is_SNaN_S;
  within_mmio_writable;
  translate;
  riscv_f32Rsqrte7;
  read_vreg_seg;
  wF_or_X_H;
  C_ADDI4SPN;
  F_UN_TYPE_H____FMV_H_X;
  pmpAddrMatchType_of_bits;
  fp_lt;
  log2;
  VVTYPE;
  f_is_neg_norm_S;
  not;
  extend_value;
  ext_check_CSR_fail;
  lookup_TLB;
  RISCV_FLEQ_H;
  bool_to_bit;
  VICMPTYPE;
  C_FLW;
  C_SWSP;
  RISCV_FLTQ_D;
  AES64ES;
  wF_or_X_S;
  DIV;
  illegal_load;
  fp_mulsub;
  f_is_QNaN_D;
  C_LH;
  riscv_f16Eq;
  f_is_neg_inf_D;
  VFIRST_M;
  MVVMATYPE;
  get_start_element;
  C_ADDI;
  ones;
  VLOXSEGTYPE;
  pmpWriteAddr;
  valid_reg_overlap;
  illegal_fp_reduction;
  MUL;
  regval_into_reg;
  F_BIN_TYPE_H____FLE_H;
  riscv_i32ToF32;
  VMSOF_M;
  RISCV_FLEQ_D;
  fp_eq;
  decode_agtype;
  riscv_f64Sub;
  pmpCheck;
  VSSSEGTYPE;
  VXTYPE;
  BTYPE;
  illegal_reduction_widen;
  F_BIN_TYPE_S____FSGNJX_S;
  LOAD;
  checked_mem_read;
  ext_handle_data_check_error;
  xt2;
  FRegStr;
  ext_data_get_addr;
  cur_Architecture;
  VIOTA_M;
  get_sew_pow;
  illegal_fp_vd_unmasked;
  riscv_ui64ToF32;
  illegal_vd_masked;
  nan_unbox_H;
  RISCV_CLMULR;
  riscv_f16Recip7;
  within_phys_mem;
  plat_htif_tohost;
  translationException;
  VXMSTYPE;
  RISCV_CLZ;
  UTYPE;
  F_UN_RM_TYPE_H____FCVT_W_H;
  RISCV_CLMULH;
  mem_read_priv_meta;
  write_pte;
  RISCV_FLI_H;
  pmpCheckPerms;
  F_BIN_RM_TYPE_H;
  shift_right_arith64;
  VSETVLI;
  accessType_to_str;
  C_SEXT_B;
  F_UN_RM_TYPE_D____FCVT_S_D;
  VLUXSEGTYPE;
  SHA512SUM1R;
  legalize_senvcfg;
  VITYPE;
  f_is_neg_zero_H;
  STORECON;
  valid_vtype;
  VMVRTYPE;
  dirty_fd_context_if_present;
  ZBKB_RTYPE;
  f_is_SNaN_D;
  F_UN_TYPE_S____FMV_X_W;
  riscv_f32Sub;
  is_fiom_active;
  riscv_f16ToUi8;
  get_vtype_vma;
  VISG;
  f_is_NaN_S;
  aes_mixcolumn_fwd;
  process_fload64;
  riscv_f32ToUi16;
  have_privLevel;
  f_is_SNaN_H;
  f_is_neg_zero;
  get_end_element;
  fp_sub;
  C_ADD;
  FVFTYPE;
  F_BIN_TYPE_H____FSGNJN_H;
  riscv_f32ToF64;
  mem_write_value_priv_meta;
  F_BIN_TYPE_S____FLE_S;
  lower_mie;
  riscv_f64ToI64;
  legalize_mideleg;
  MemoryOpResult_add_meta;
  bit_to_bool;
  csr_name;
  riscv_f16Sub;
  f_is_pos_inf;
  init_masked_result;
  F_UN_TYPE_D____FMV_D_X;
  riscv_f32Sqrt;
  riscv_f32Eq;
  rF_S;
  F_BIN_TYPE_D____FSGNJX_D;
  process_rfvv_widen;
  MASKTYPEI;
  f_is_QNaN_H;
  platform_wfi;
  FVVTYPE;
  F_UN_TYPE_S____FCLASS_S;
  pmpAddrRange;
  RISCV_CPOPW;
  f_is_pos_inf_S;
  F_UN_RM_TYPE_H____FCVT_WU_H;
  riscv_i64ToF64;
  ext_check_CSR;
  F_UN_RM_TYPE_D____FCVT_D_S;
  rvfi_wX;
  SHA256SUM1;
  VSUXSEGTYPE;
  canonical_NaN;
  writeCSR;
  riscv_f32ToI16;
  pmpCheckRWX;
  write_single_element;
  rV_bits;
  f_is_neg_norm_D;
  F_BIN_TYPE_S____FMIN_S;
  f_is_neg_subnorm_D;
  VIMCTYPE;
  VIMSTYPE;
  MASKTYPEV;
  legalize_menvcfg;
  process_fload16;
  match_TLB_Entry;
  tval;
  FVFMTYPE;
  reverse_bits_in_byte;
  riscv_i64ToF32;
  ADDIW;
  process_vssseg;
  MRET;
  VLSEGFFTYPE;
  riscv_f64Recip7;
  riscv_i64ToF16;
  C_ANDI;
  pmpLocked;
  get_arch_pc;
  riscv_f16Sqrt;
  trap_handler;
  WVTYPE;
  C_SDSP;
  fp_mul;
  C_SUBW;
  valid_fp_op;
  VEXT4TYPE;
  VSETVL;
  C_SH;
  MVVCOMPRESS;
  get_mstatus_SXL;
  FWVVTYPE;
  sm4_sbox;
  VMTYPE;
  read_vreg;
  mem_write_ea;
  wX_bits;
  fp_max;
  RISCV_FROUND_H;
  ext_read_CSR;
  F_BIN_TYPE_D____FLT_D;
  C_JAL;
  SFENCE_VMA;
  read_vmask;
  rvfi_read;
  fp_widen;
  rV;
  riscv_f16Lt;
  legalize_mcounteren;
  read_single_element;
  get_elen_pow;
  NVSTYPE;
  F_UN_RM_TYPE_D____FCVT_WU_D;
  rvfi_write;
  f_is_pos_norm_S;
  num_of_ext_exc_type;
  riscv_f32ToI32;
  process_vlxseg;
  MemoryOpResult_drop_meta;
  riscv_i32ToF16;
  fle_H;
  RISCV_FROUND_S;
  F_UN_RM_TYPE_D____FCVT_W_D;
  NISTYPE;
  C_SLLI;
  lift_sie;
  effectivePrivilege;
  ext_handle_control_check_error;
  VXMTYPE;
  ZICOND_RTYPE____RISCV_CZERO_NEZ;
  riscv_f64ToUi64;
  get_xret_target;
  F_UN_RM_TYPE_H____FSQRT_H;
  VFMVSF;
  VEXT8TYPE;
  getbyte;
  C_OR;
  write_kind_of_flags;
  FWVFMATYPE;
  fp_nmuladd;
  riscv_f64MulAdd;
  set_sstatus_UXL;
  dirty_fd_context;
  within_mmio_readable;
  SHIFTIOP;
  DIVW;
  within_htif_readable;
  illegal_fp_variable_width;
  f_is_neg_subnorm;
  C_ZEXT_B;
  C_MV;
  reset_htif;
  VIMTYPE;
  LOADRES;
  nan_unbox_S;
  phys_mem_read;
  F_UN_TYPE_H____FCLASS_H;
  C_J;
  wF_D;
  fp_le;
  AES32ESI;
  C_BEQZ;
  set_next_pc;
  ext_exc_type_to_str;
  SHA512SUM0;
  rF_or_X_S;
  within_clint;
  aes_subword_fwd;
  SHA512SUM0R;
  riscv_f32Add;
  readCSR;
  REMW;
  VFMV;
  C_SEXT_H;
  canonical_NaN_S;
  csrAccess;
  ext_control_check_addr;
  riscv_f16ToI32;
  set_xret_target;
  mem_read_priv;
  privLevel_of_bits;
  fp_class;
  WMVXTYPE;
  exceptionType_to_str;
  C_FSW;
  f_is_neg_subnorm_S;
  lower_mstatus;
  get_scalar_fp;
  F_UN_RM_TYPE_S____FCVT_S_WU;
  C_SW;
  ZBS_RTYPE;
  write_ram_ea;
  fmake_S;
  pmpWriteAddrReg;
  illegal_fp_normal;
  set_mstatus_SXL;
  C_SUB;
  VFUNARY0;
  ext_is_CSR_defined;
  process_vlseg;
  RISCV_FROUNDNX_S;
  riscv_f16ToI8;
  SFENCE_W_INVAL;
  C_JR;
  gfmul;
  C_NOT;
  ZBB_EXTOP;
  MVVTYPE;
  F_UN_RM_TYPE_S____FCVT_L_S;
  valid_rounding_mode;
  FVFMATYPE;
  illegal_normal;
  nxFlag;
  RISCV_FMAXM_H;
  get_num_elem;
  SHA256SUM0;
  ext_get_ptw_error;
  init_masked_source;
  ZBS_IOP;
  process_fstore;
  legalize_sie;
  C_XOR;
  F_BIN_TYPE_D____FSGNJN_D;
  F_UN_RM_TYPE_S____FCVT_W_S;
  F_UN_TYPE_D____FCLASS_D;
  RISCV_FMINM_H;
  mem_write_value_priv;
  VVMCTYPE;
  F_BIN_RM_TYPE_S;
  rotate_bits_right;
  SINVAL_VMA;
  F_BIN_TYPE_S____FLT_S;
  negate_fp;
  MOVETYPEX;
  __WriteRAM_Meta;
  unsigned_saturation;
  F_UN_RM_TYPE_H____FCVT_H_L;
  F_UN_RM_TYPE_H____FCVT_S_H;
  C_BNEZ;
  FWVVMATYPE;
  AES64KS1I;
  legalize_satp64;
  xt3;
  riscv_f32ToF16;
  riscv_f64ToF32;
  legalize_sedeleg;
  translate_TLB_miss;
  exception_delegatee;
  RMVVTYPE;
  handle_mem_exception;
  f_is_pos_subnorm_H;
  RISCV_CLZW;
  REM;
  AES64ESM;
  f_is_pos_inf_H;
  f_is_neg_inf;
  ext_check_phys_mem_read;
  write_ram;
  VFNUNARY0;
  lower_mip;
  VFWUNARY0;
  MOVETYPEV;
  f_is_pos_norm_H;
  F_BIN_TYPE_H____FLT_H;
  VFUNARY1;
  FWVFTYPE;
  ZBA_RTYPE;
  C_SRLI;
  get_mtvec;
  VSRETYPE;
  riscv_f16MulAdd;
  legalize_scounteren;
  fmake_D;
  get_config_print_mem;
  F_UN_RM_TYPE_H____FCVT_LU_H;
  riscv_f32MulAdd;
  WVVTYPE;
  illegal_variable_width;
  legalize_tvec;
  AES64DSM;
  F_BIN_TYPE_H____FSGNJX_H;
  get_scalar;
  mem_write_value_meta;
  URET;
  is_aligned_addr;
  illegal_fp_vd_masked;
  riscv_i32ToF64;
  C_LI;
  illegal_fp_reduction_widen;
  fregval_into_freg;
  CSR;
  read_kind_of_flags;
  wX;
  negate_S;
  C_SRAI;
  f_is_pos_subnorm;
  RISCV_FMVP_D_X;
  C_LBU;
  fsplit_D;
  RTYPEW;
  offset_of_va;
  riscv_f16Le_quiet;
  fsplit_H;
  riscv_f16Div;
  ext_control_check_pc;
  wF_S;
  WMVVTYPE;
  dirty_v_context;
  MULW;
  f_is_SNaN;
  VVCMPTYPE;
  riscv_f32Recip7;
  ILLEGAL;
  riscv_f64Lt;
  check_misaligned;
  riscv_f32Le_quiet;
  riscv_ui32ToF64;
  legalize_xepc;
  htif_store;
  RISCV_BREV8;
  riscv_f16Le;
  rF_bits;
  check_PTE_permission;
  architecture;
  AES32DSMI;
  clint_load;
  riscv_f32ToI64;
  rotate_bits_left;
  C_FSD;
  process_vsseg;
  F_BIN_TYPE_D____FSGNJ_D;
  pmpWriteCfg;
  C_ADDW;
  satp_to_PT_base;
  aes_mixcolumn_inv;
  pt_walk;
  F_UN_TYPE_D____FMV_X_D;
  VCPOP_M;
  translationMode;
  riscv_f16ToUi16;
  F_BIN_TYPE_D____FEQ_D;
  fmake_H;
  riscv_f32Div;
  satp64Mode_of_bits;
  SHA256SIG1;
  f_is_neg_zero_D;
  MVXTYPE;
  sbox_lookup;
  fcvtmod_helper;
  f_is_QNaN;
  illegal_vd_unmasked;
  riscv_f16ToF64;
  F_BIN_TYPE_H____FSGNJ_H;
  
  
  riscv_f16ToI64 -> F_UN_RM_TYPE_H____FCVT_L_H;
  illegal_indexed_store -> VSOXSEGTYPE;
  illegal_indexed_store -> VSUXSEGTYPE;
  wV_bits -> write_single_element;
  wV_bits -> write_single_vreg;
  wV_bits -> write_vmask;
  riscv_f64Mul -> F_BIN_RM_TYPE_D;
  riscv_f64Mul -> fp_mul;
  vpns_of_va -> pt_walk;
  f_is_neg_subnorm_H -> F_UN_TYPE_H____FCLASS_H;
  f_is_neg_subnorm_H -> f_is_neg_subnorm;
  f_is_pos_zero_S -> F_BIN_TYPE_S____FMAX_S;
  f_is_pos_zero_S -> F_BIN_TYPE_S____FMAX_S;
  f_is_pos_zero_S -> F_BIN_TYPE_S____FMIN_S;
  f_is_pos_zero_S -> F_BIN_TYPE_S____FMIN_S;
  f_is_pos_zero_S -> F_UN_TYPE_S____FCLASS_S;
  f_is_pos_zero_S -> RISCV_FMAXM_S;
  f_is_pos_zero_S -> RISCV_FMAXM_S;
  f_is_pos_zero_S -> RISCV_FMINM_S;
  f_is_pos_zero_S -> RISCV_FMINM_S;
  f_is_pos_zero_S -> f_is_pos_zero;
  f_is_pos_zero_S -> fle_S;
  f_is_pos_zero_S -> fle_S;
  lift_sstatus -> legalize_sstatus;
  init_masked_result_carry -> MMTYPE;
  init_masked_result_carry -> VIMCTYPE;
  init_masked_result_carry -> VIMTYPE;
  init_masked_result_carry -> VVMCTYPE;
  init_masked_result_carry -> VVMTYPE;
  init_masked_result_carry -> VXMCTYPE;
  init_masked_result_carry -> VXMTYPE;
  f_is_neg_norm -> fp_class;
  RTYPE -> C_ADD;
  RTYPE -> C_AND;
  RTYPE -> C_MV;
  RTYPE -> C_OR;
  RTYPE -> C_SUB;
  RTYPE -> C_XOR;
  get_config_print_reg -> exception_handler;
  get_config_print_reg -> readCSR;
  get_config_print_reg -> trap_handler;
  get_config_print_reg -> wF;
  get_config_print_reg -> wV;
  get_config_print_reg -> wX;
  get_config_print_reg -> writeCSR;
  legalize_sstatus -> writeCSR;
  riscv_ui64ToF16 -> F_UN_RM_TYPE_H____FCVT_H_LU;
  flush_TLB_Entry -> flush_TLB;
  riscv_ui32ToF32 -> F_UN_RM_TYPE_S____FCVT_S_WU;
  riscv_ui32ToF32 -> VFUNARY0;
  riscv_ui32ToF32 -> VFWUNARY0;
  read_seed_csr -> readCSR;
  legalize_misa -> writeCSR;
  wF_bits -> F_UN_TYPE_D____FMV_D_X;
  wF_bits -> F_UN_TYPE_H____FMV_H_X;
  wF_bits -> F_UN_TYPE_S____FMV_W_X;
  wF_bits -> process_fload16;
  wF_bits -> process_fload32;
  wF_bits -> process_fload64;
  wF_bits -> wF_D;
  wF_bits -> wF_H;
  wF_bits -> wF_S;
  ext_veto_disable_C -> legalize_misa;
  f_is_QNaN_S -> F_UN_TYPE_S____FCLASS_S;
  f_is_QNaN_S -> f_is_QNaN;
  report_invalid_width -> LOAD_FP;
  report_invalid_width -> STORE_FP;
  extStatus_of_bits -> legalize_mstatus;
  extStatus_of_bits -> lift_sstatus;
  msbs_of_PTE -> pt_walk;
  msbs_of_PTE -> translate_TLB_hit;
  msbs_of_PTE -> translate_TLB_miss;
  riscv_f64roundToInt -> RISCV_FROUNDNX_D;
  riscv_f64roundToInt -> RISCV_FROUND_D;
  riscv_f16roundToInt -> RISCV_FROUNDNX_H;
  riscv_f16roundToInt -> RISCV_FROUND_H;
  prepare_xret_target -> exception_handler;
  prepare_xret_target -> exception_handler;
  prepare_xret_target -> exception_handler;
  fp_add -> FVFTYPE;
  fp_add -> FVVTYPE;
  fp_add -> FWFTYPE;
  fp_add -> FWVFTYPE;
  fp_add -> FWVTYPE;
  fp_add -> FWVVTYPE;
  fp_add -> process_rfvv_single;
  fp_add -> process_rfvv_widen;
  pmpWriteCfgReg -> writeCSR;
  RISCV_JALR -> C_JALR;
  RISCV_JALR -> C_JR;
  phys_mem_write -> checked_mem_write;
  regval_from_reg -> rX;
  init_masked_result_cmp -> FVFMTYPE;
  init_masked_result_cmp -> FVVMTYPE;
  init_masked_result_cmp -> VCPOP_M;
  init_masked_result_cmp -> VFIRST_M;
  init_masked_result_cmp -> VICMPTYPE;
  init_masked_result_cmp -> VMSBF_M;
  init_masked_result_cmp -> VMSIF_M;
  init_masked_result_cmp -> VMSOF_M;
  init_masked_result_cmp -> VVCMPTYPE;
  init_masked_result_cmp -> VXCMPTYPE;
  assert_vstart -> VCPOP_M;
  assert_vstart -> VFIRST_M;
  assert_vstart -> VIOTA_M;
  assert_vstart -> VMSBF_M;
  assert_vstart -> VMSIF_M;
  assert_vstart -> VMSOF_M;
  assert_vstart -> illegal_fp_reduction;
  assert_vstart -> illegal_fp_reduction_widen;
  assert_vstart -> illegal_reduction;
  assert_vstart -> illegal_reduction_widen;
  process_fload32 -> LOAD_FP;
  riscv_f64ToUi32 -> F_UN_RM_TYPE_D____FCVT_WU_D;
  riscv_f64ToUi32 -> VFNUNARY0;
  riscv_f64ToUi32 -> VFNUNARY0;
  mmio_read -> checked_mem_read;
  aes_sbox_inv -> AES32DSI;
  aes_sbox_inv -> AES32DSMI;
  aes_sbox_inv -> aes_apply_inv_sbox_to_each_byte;
  lowest_supported_privLevel -> legalize_mstatus;
  aes_rv64_shiftrows_inv -> AES64DS;
  aes_rv64_shiftrows_inv -> AES64DSM;
  riscv_f16ToUi64 -> F_UN_RM_TYPE_H____FCVT_LU_H;
  f_is_pos_zero_H -> F_BIN_TYPE_H____FMAX_H;
  f_is_pos_zero_H -> F_BIN_TYPE_H____FMAX_H;
  f_is_pos_zero_H -> F_BIN_TYPE_H____FMIN_H;
  f_is_pos_zero_H -> F_BIN_TYPE_H____FMIN_H;
  f_is_pos_zero_H -> F_UN_TYPE_H____FCLASS_H;
  f_is_pos_zero_H -> RISCV_FMAXM_H;
  f_is_pos_zero_H -> RISCV_FMAXM_H;
  f_is_pos_zero_H -> RISCV_FMINM_H;
  f_is_pos_zero_H -> RISCV_FMINM_H;
  f_is_pos_zero_H -> f_is_pos_zero;
  f_is_pos_zero_H -> fle_H;
  f_is_pos_zero_H -> fle_H;
  f_is_pos_norm -> fp_class;
  riscv_f16ToI16 -> VFUNARY0;
  riscv_f16ToI16 -> VFUNARY0;
  PPNs_of_PTE -> pt_walk;
  riscv_f32Le -> F_BIN_TYPE_S____FLE_S;
  riscv_f32Le -> fp_gt;
  riscv_f32Le -> fp_le;
  accessToFault -> pmpCheck;
  bool_to_bits -> F_BIN_TYPE_D____FEQ_D;
  bool_to_bits -> F_BIN_TYPE_D____FLE_D;
  bool_to_bits -> F_BIN_TYPE_D____FLT_D;
  bool_to_bits -> F_BIN_TYPE_H____FEQ_H;
  bool_to_bits -> F_BIN_TYPE_H____FLE_H;
  bool_to_bits -> F_BIN_TYPE_H____FLT_H;
  bool_to_bits -> F_BIN_TYPE_S____FEQ_S;
  bool_to_bits -> F_BIN_TYPE_S____FLE_S;
  bool_to_bits -> F_BIN_TYPE_S____FLT_S;
  bool_to_bits -> ITYPE;
  bool_to_bits -> RISCV_FLEQ_D;
  bool_to_bits -> RISCV_FLEQ_H;
  bool_to_bits -> RISCV_FLEQ_S;
  bool_to_bits -> RISCV_FLTQ_D;
  bool_to_bits -> RISCV_FLTQ_H;
  bool_to_bits -> RISCV_FLTQ_S;
  bool_to_bits -> RTYPE;
  bool_to_bits -> VIMSTYPE;
  bool_to_bits -> VIMTYPE;
  bool_to_bits -> VVMSTYPE;
  bool_to_bits -> VVMTYPE;
  bool_to_bits -> VXMSTYPE;
  bool_to_bits -> VXMTYPE;
  bool_to_bits -> ZBS_IOP;
  bool_to_bits -> ZBS_RTYPE;
  bool_to_bits -> get_fixed_rounding_incr;
  bool_to_bits -> legalize_mstatus;
  bool_to_bits -> lift_sstatus;
  bool_to_bits -> trap_handler;
  RISCV_JAL -> C_J;
  RISCV_JAL -> C_JAL;
  get_sew -> FVFMATYPE;
  get_sew -> FVFMTYPE;
  get_sew -> FVFTYPE;
  get_sew -> FVVMATYPE;
  get_sew -> FVVMTYPE;
  get_sew -> FVVTYPE;
  get_sew -> FWFTYPE;
  get_sew -> FWVFMATYPE;
  get_sew -> FWVFTYPE;
  get_sew -> FWVTYPE;
  get_sew -> FWVVMATYPE;
  get_sew -> FWVVTYPE;
  get_sew -> MASKTYPEI;
  get_sew -> MASKTYPEV;
  get_sew -> MASKTYPEX;
  get_sew -> MMTYPE;
  get_sew -> MOVETYPEI;
  get_sew -> MOVETYPEV;
  get_sew -> MOVETYPEX;
  get_sew -> MVVCOMPRESS;
  get_sew -> MVVMATYPE;
  get_sew -> MVVTYPE;
  get_sew -> MVXMATYPE;
  get_sew -> MVXTYPE;
  get_sew -> NISTYPE;
  get_sew -> NITYPE;
  get_sew -> NVSTYPE;
  get_sew -> NVTYPE;
  get_sew -> NXSTYPE;
  get_sew -> NXTYPE;
  get_sew -> RFVVTYPE;
  get_sew -> RIVVTYPE;
  get_sew -> RMVVTYPE;
  get_sew -> VCPOP_M;
  get_sew -> VEXT2TYPE;
  get_sew -> VEXT4TYPE;
  get_sew -> VEXT8TYPE;
  get_sew -> VFIRST_M;
  get_sew -> VFMERGE;
  get_sew -> VFMV;
  get_sew -> VFMVFS;
  get_sew -> VFMVSF;
  get_sew -> VFNUNARY0;
  get_sew -> VFUNARY0;
  get_sew -> VFUNARY1;
  get_sew -> VFWUNARY0;
  get_sew -> VICMPTYPE;
  get_sew -> VID_V;
  get_sew -> VIMCTYPE;
  get_sew -> VIMSTYPE;
  get_sew -> VIMTYPE;
  get_sew -> VIOTA_M;
  get_sew -> VISG;
  get_sew -> VITYPE;
  get_sew -> VMSBF_M;
  get_sew -> VMSIF_M;
  get_sew -> VMSOF_M;
  get_sew -> VMVRTYPE;
  get_sew -> VMVSX;
  get_sew -> VMVXS;
  get_sew -> VVCMPTYPE;
  get_sew -> VVMCTYPE;
  get_sew -> VVMSTYPE;
  get_sew -> VVMTYPE;
  get_sew -> VVTYPE;
  get_sew -> VXCMPTYPE;
  get_sew -> VXMCTYPE;
  get_sew -> VXMSTYPE;
  get_sew -> VXMTYPE;
  get_sew -> VXSG;
  get_sew -> VXTYPE;
  get_sew -> WMVVTYPE;
  get_sew -> WMVXTYPE;
  get_sew -> WVTYPE;
  get_sew -> WVVTYPE;
  get_sew -> WVXTYPE;
  get_sew -> WXTYPE;
  rF_D -> RISCV_FCVTMOD_W_D;
  rF_D -> RISCV_FLEQ_D;
  rF_D -> RISCV_FLEQ_D;
  rF_D -> RISCV_FLTQ_D;
  rF_D -> RISCV_FLTQ_D;
  rF_D -> RISCV_FMAXM_D;
  rF_D -> RISCV_FMAXM_D;
  rF_D -> RISCV_FMINM_D;
  rF_D -> RISCV_FMINM_D;
  rF_D -> RISCV_FMVH_X_D;
  rF_D -> RISCV_FROUNDNX_D;
  rF_D -> RISCV_FROUND_D;
  rF_D -> get_scalar_fp;
  rF_D -> rF_or_X_D;
  write_vreg -> FVFMATYPE;
  write_vreg -> FVFTYPE;
  write_vreg -> FVVMATYPE;
  write_vreg -> FVVTYPE;
  write_vreg -> FWFTYPE;
  write_vreg -> FWVFMATYPE;
  write_vreg -> FWVFTYPE;
  write_vreg -> FWVTYPE;
  write_vreg -> FWVVMATYPE;
  write_vreg -> FWVVTYPE;
  write_vreg -> MASKTYPEI;
  write_vreg -> MASKTYPEV;
  write_vreg -> MASKTYPEX;
  write_vreg -> MOVETYPEI;
  write_vreg -> MOVETYPEV;
  write_vreg -> MOVETYPEX;
  write_vreg -> MVVCOMPRESS;
  write_vreg -> MVVMATYPE;
  write_vreg -> MVVTYPE;
  write_vreg -> MVXMATYPE;
  write_vreg -> MVXTYPE;
  write_vreg -> NISTYPE;
  write_vreg -> NITYPE;
  write_vreg -> NVSTYPE;
  write_vreg -> NVTYPE;
  write_vreg -> NXSTYPE;
  write_vreg -> NXTYPE;
  write_vreg -> VEXT2TYPE;
  write_vreg -> VEXT4TYPE;
  write_vreg -> VEXT8TYPE;
  write_vreg -> VFMERGE;
  write_vreg -> VFMV;
  write_vreg -> VFMVSF;
  write_vreg -> VFNUNARY0;
  write_vreg -> VFUNARY0;
  write_vreg -> VFUNARY1;
  write_vreg -> VFWUNARY0;
  write_vreg -> VID_V;
  write_vreg -> VIMSTYPE;
  write_vreg -> VIOTA_M;
  write_vreg -> VISG;
  write_vreg -> VITYPE;
  write_vreg -> VMVRTYPE;
  write_vreg -> VMVSX;
  write_vreg -> VVMSTYPE;
  write_vreg -> VVTYPE;
  write_vreg -> VXMSTYPE;
  write_vreg -> VXSG;
  write_vreg -> VXTYPE;
  write_vreg -> WMVVTYPE;
  write_vreg -> WMVXTYPE;
  write_vreg -> WVTYPE;
  write_vreg -> WVVTYPE;
  write_vreg -> WVXTYPE;
  write_vreg -> WXTYPE;
  valid_rd_mask -> illegal_fp_normal;
  valid_rd_mask -> illegal_fp_variable_width;
  valid_rd_mask -> illegal_indexed_load;
  valid_rd_mask -> illegal_load;
  valid_rd_mask -> illegal_normal;
  valid_rd_mask -> illegal_variable_width;
  aes_decode_rcon -> AES64KS1I;
  riscv_f64Eq -> F_BIN_TYPE_D____FEQ_D;
  riscv_f64Eq -> fp_eq;
  write_seed_csr -> writeCSR;
  process_vsxseg -> VSOXSEGTYPE;
  process_vsxseg -> VSUXSEGTYPE;
  riscv_f32Lt_quiet -> RISCV_FLTQ_S;
  riscv_f32Lt_quiet -> fp_max;
  riscv_f32Lt_quiet -> fp_min;
  get_fixed_rounding_incr -> MVVTYPE;
  get_fixed_rounding_incr -> MVVTYPE;
  get_fixed_rounding_incr -> MVXTYPE;
  get_fixed_rounding_incr -> MVXTYPE;
  get_fixed_rounding_incr -> NITYPE;
  get_fixed_rounding_incr -> NVTYPE;
  get_fixed_rounding_incr -> NXTYPE;
  get_fixed_rounding_incr -> VITYPE;
  get_fixed_rounding_incr -> VVTYPE;
  get_fixed_rounding_incr -> VVTYPE;
  get_fixed_rounding_incr -> VXTYPE;
  get_fixed_rounding_incr -> VXTYPE;
  set_mstatus_UXL -> legalize_mstatus;
  set_mstatus_UXL -> set_sstatus_UXL;
  illegal_store -> VSSEGTYPE;
  illegal_store -> VSSSEGTYPE;
  fp_div -> FVFTYPE;
  fp_div -> FVFTYPE;
  fp_div -> FVVTYPE;
  wF_H -> RISCV_FLI_H;
  wF_H -> RISCV_FMAXM_H;
  wF_H -> RISCV_FMINM_H;
  wF_H -> RISCV_FROUNDNX_H;
  wF_H -> RISCV_FROUND_H;
  wF_H -> VFMVFS;
  wF_H -> wF_or_X_H;
  get_next_pc -> RISCV_JAL;
  get_next_pc -> RISCV_JALR;
  rvfi_trap -> trap_handler;
  riscv_ui64ToF64 -> F_UN_RM_TYPE_D____FCVT_D_LU;
  riscv_ui64ToF64 -> VFUNARY0;
  get_mstatus_UXL -> cur_Architecture;
  get_mstatus_UXL -> legalize_mstatus;
  get_mstatus_UXL -> lower_mstatus;
  riscv_f64Le_quiet -> RISCV_FLEQ_D;
  rX -> rX_bits;
  read_vmask_carry -> VIMSTYPE;
  read_vmask_carry -> VIMTYPE;
  read_vmask_carry -> VVMSTYPE;
  read_vmask_carry -> VVMTYPE;
  read_vmask_carry -> VXMSTYPE;
  read_vmask_carry -> VXMTYPE;
  fp_gt -> FVFMTYPE;
  riscv_f64Rsqrte7 -> VFUNARY1;
  fle_D -> F_BIN_TYPE_D____FMAX_D;
  fle_D -> F_BIN_TYPE_D____FMIN_D;
  fle_D -> RISCV_FMAXM_D;
  fle_D -> RISCV_FMINM_D;
  mem_read -> AMO;
  mem_read -> LOAD;
  mem_read -> LOADRES;
  mem_read -> LOAD_FP;
  mem_read -> LOAD_FP;
  mem_read -> LOAD_FP;
  mem_read -> process_vlre;
  mem_read -> process_vlseg;
  mem_read -> process_vlsegff;
  mem_read -> process_vlsseg;
  mem_read -> process_vlxseg;
  mem_read -> process_vm;
  __ReadRAM_Meta -> read_ram;
  negate_H -> F_MADD_TYPE_H;
  negate_H -> F_MADD_TYPE_H;
  negate_H -> negate_fp;
  ext_check_xret_priv -> MRET;
  ext_check_xret_priv -> SRET;
  ext_check_xret_priv -> URET;
  ofFlag -> riscv_f16Recip7;
  ofFlag -> riscv_f32Recip7;
  ofFlag -> riscv_f64Recip7;
  fp_ge -> FVFMTYPE;
  f_is_NaN -> fp_max;
  f_is_NaN -> fp_max;
  f_is_NaN -> fp_min;
  f_is_NaN -> fp_min;
  checked_mem_write -> mem_write_value_priv_meta;
  aes_rv64_shiftrows_fwd -> AES64ES;
  aes_rv64_shiftrows_fwd -> AES64ESM;
  legalize_satp -> writeCSR;
  pc_alignment_mask -> exception_handler;
  pc_alignment_mask -> readCSR;
  get_shift_amount -> NISTYPE;
  get_shift_amount -> NITYPE;
  get_shift_amount -> NVSTYPE;
  get_shift_amount -> NVTYPE;
  get_shift_amount -> NXSTYPE;
  get_shift_amount -> NXTYPE;
  get_shift_amount -> VITYPE;
  get_shift_amount -> VVTYPE;
  get_shift_amount -> VXTYPE;
  fsplit_S -> F_BIN_TYPE_S____FSGNJN_S;
  fsplit_S -> F_BIN_TYPE_S____FSGNJN_S;
  fsplit_S -> F_BIN_TYPE_S____FSGNJX_S;
  fsplit_S -> F_BIN_TYPE_S____FSGNJX_S;
  fsplit_S -> F_BIN_TYPE_S____FSGNJ_S;
  fsplit_S -> F_BIN_TYPE_S____FSGNJ_S;
  fsplit_S -> f_is_NaN_S;
  fsplit_S -> f_is_QNaN_S;
  fsplit_S -> f_is_SNaN_S;
  fsplit_S -> f_is_neg_inf_S;
  fsplit_S -> f_is_neg_norm_S;
  fsplit_S -> f_is_neg_subnorm_S;
  fsplit_S -> f_is_neg_zero_S;
  fsplit_S -> f_is_pos_inf_S;
  fsplit_S -> f_is_pos_norm_S;
  fsplit_S -> f_is_pos_subnorm_S;
  fsplit_S -> f_is_pos_zero_S;
  fsplit_S -> fle_S;
  fsplit_S -> fle_S;
  fsplit_S -> negate_S;
  process_vlsegff -> VLSEGFFTYPE;
  aes_mixcolumn_byte_fwd -> AES32ESMI;
  f_is_pos_inf_D -> F_UN_TYPE_D____FCLASS_D;
  f_is_pos_inf_D -> f_is_pos_inf;
  pmpTORLocked -> pmpWriteAddrReg;
  get_vlen_pow -> VISG;
  get_vlen_pow -> VSETIVLI;
  get_vlen_pow -> VSETVL;
  get_vlen_pow -> VSETVLI;
  get_vlen_pow -> VVTYPE;
  get_vlen_pow -> VXSG;
  get_vlen_pow -> get_start_element;
  get_vlen_pow -> writeCSR;
  riscv_ui32ToF16 -> F_UN_RM_TYPE_H____FCVT_H_WU;
  riscv_ui32ToF16 -> VFNUNARY0;
  riscv_ui32ToF16 -> VFUNARY0;
  riscv_ui32ToF16 -> VFWUNARY0;
  creg2reg_idx -> C_ADDI4SPN;
  creg2reg_idx -> C_ADDW;
  creg2reg_idx -> C_ADDW;
  creg2reg_idx -> C_AND;
  creg2reg_idx -> C_AND;
  creg2reg_idx -> C_ANDI;
  creg2reg_idx -> C_BEQZ;
  creg2reg_idx -> C_BNEZ;
  creg2reg_idx -> C_FLD;
  creg2reg_idx -> C_FLD;
  creg2reg_idx -> C_FLW;
  creg2reg_idx -> C_FLW;
  creg2reg_idx -> C_FSD;
  creg2reg_idx -> C_FSD;
  creg2reg_idx -> C_FSW;
  creg2reg_idx -> C_FSW;
  creg2reg_idx -> C_LBU;
  creg2reg_idx -> C_LBU;
  creg2reg_idx -> C_LD;
  creg2reg_idx -> C_LD;
  creg2reg_idx -> C_LH;
  creg2reg_idx -> C_LH;
  creg2reg_idx -> C_LHU;
  creg2reg_idx -> C_LHU;
  creg2reg_idx -> C_LW;
  creg2reg_idx -> C_LW;
  creg2reg_idx -> C_MUL;
  creg2reg_idx -> C_MUL;
  creg2reg_idx -> C_NOT;
  creg2reg_idx -> C_OR;
  creg2reg_idx -> C_OR;
  creg2reg_idx -> C_SB;
  creg2reg_idx -> C_SB;
  creg2reg_idx -> C_SD;
  creg2reg_idx -> C_SD;
  creg2reg_idx -> C_SEXT_B;
  creg2reg_idx -> C_SEXT_H;
  creg2reg_idx -> C_SH;
  creg2reg_idx -> C_SH;
  creg2reg_idx -> C_SRAI;
  creg2reg_idx -> C_SRLI;
  creg2reg_idx -> C_SUB;
  creg2reg_idx -> C_SUB;
  creg2reg_idx -> C_SUBW;
  creg2reg_idx -> C_SUBW;
  creg2reg_idx -> C_SW;
  creg2reg_idx -> C_SW;
  creg2reg_idx -> C_XOR;
  creg2reg_idx -> C_XOR;
  creg2reg_idx -> C_ZEXT_B;
  creg2reg_idx -> C_ZEXT_H;
  creg2reg_idx -> C_ZEXT_W;
  clint_dispatch -> clint_store;
  riscv_f16Mul -> F_BIN_RM_TYPE_H;
  riscv_f16Mul -> fp_mul;
  riscv_f64Div -> F_BIN_RM_TYPE_D;
  riscv_f64Div -> fp_div;
  canonical_NaN_D -> F_BIN_TYPE_D____FMAX_D;
  canonical_NaN_D -> F_BIN_TYPE_D____FMIN_D;
  canonical_NaN_D -> RISCV_FLI_D;
  canonical_NaN_D -> RISCV_FMAXM_D;
  canonical_NaN_D -> RISCV_FMINM_D;
  canonical_NaN_D -> canonical_NaN;
  aes_sbox_fwd -> AES32ESI;
  aes_sbox_fwd -> AES32ESMI;
  aes_sbox_fwd -> aes_apply_fwd_sbox_to_each_byte;
  aes_sbox_fwd -> aes_subword_fwd;
  num_of_ExceptionType -> exception_delegatee;
  riscv_f64Le -> F_BIN_TYPE_D____FLE_D;
  riscv_f64Le -> fp_gt;
  riscv_f64Le -> fp_le;
  ext_write_CSR -> writeCSR;
  read_single_vreg -> read_single_element;
  read_single_vreg -> read_vreg;
  read_single_vreg -> read_vreg;
  read_single_vreg -> write_single_element;
  pte_is_ptr -> pt_walk;
  ext_fail_xret_priv -> MRET;
  ext_fail_xret_priv -> SRET;
  ext_fail_xret_priv -> URET;
  fp_nmulsub -> FVFMATYPE;
  fp_nmulsub -> FVVMATYPE;
  fp_nmulsub -> FWVFMATYPE;
  fp_nmulsub -> FWVVMATYPE;
  get_sew_bytes -> VLOXSEGTYPE;
  get_sew_bytes -> VLUXSEGTYPE;
  get_sew_bytes -> VSOXSEGTYPE;
  get_sew_bytes -> VSUXSEGTYPE;
  fp_muladd -> FVFMATYPE;
  fp_muladd -> FVVMATYPE;
  fp_muladd -> FWVFMATYPE;
  fp_muladd -> FWVVMATYPE;
  read_ram -> phys_mem_read;
  process_vlsseg -> VLSSEGTYPE;
  legalize_mip -> writeCSR;
  check_CSR_access -> check_CSR;
  f_is_pos_subnorm_D -> F_UN_TYPE_D____FCLASS_D;
  f_is_pos_subnorm_D -> f_is_pos_subnorm;
  rotatel -> SM3P0;
  rotatel -> SM3P0;
  rotatel -> SM3P1;
  rotatel -> SM3P1;
  pmpReadCfgReg -> readCSR;
  pmpReadCfgReg -> writeCSR;
  riscv_f64ToI32 -> F_UN_RM_TYPE_D____FCVT_W_D;
  riscv_f64ToI32 -> VFNUNARY0;
  riscv_f64ToI32 -> VFNUNARY0;
  rF_or_X_D -> F_BIN_RM_TYPE_D;
  rF_or_X_D -> F_BIN_RM_TYPE_D;
  rF_or_X_D -> F_BIN_TYPE_D____FEQ_D;
  rF_or_X_D -> F_BIN_TYPE_D____FEQ_D;
  rF_or_X_D -> F_BIN_TYPE_D____FLE_D;
  rF_or_X_D -> F_BIN_TYPE_D____FLE_D;
  rF_or_X_D -> F_BIN_TYPE_D____FLT_D;
  rF_or_X_D -> F_BIN_TYPE_D____FLT_D;
  rF_or_X_D -> F_BIN_TYPE_D____FMAX_D;
  rF_or_X_D -> F_BIN_TYPE_D____FMAX_D;
  rF_or_X_D -> F_BIN_TYPE_D____FMIN_D;
  rF_or_X_D -> F_BIN_TYPE_D____FMIN_D;
  rF_or_X_D -> F_BIN_TYPE_D____FSGNJN_D;
  rF_or_X_D -> F_BIN_TYPE_D____FSGNJN_D;
  rF_or_X_D -> F_BIN_TYPE_D____FSGNJX_D;
  rF_or_X_D -> F_BIN_TYPE_D____FSGNJX_D;
  rF_or_X_D -> F_BIN_TYPE_D____FSGNJ_D;
  rF_or_X_D -> F_BIN_TYPE_D____FSGNJ_D;
  rF_or_X_D -> F_MADD_TYPE_D;
  rF_or_X_D -> F_MADD_TYPE_D;
  rF_or_X_D -> F_MADD_TYPE_D;
  rF_or_X_D -> F_UN_RM_TYPE_D____FCVT_LU_D;
  rF_or_X_D -> F_UN_RM_TYPE_D____FCVT_L_D;
  rF_or_X_D -> F_UN_RM_TYPE_D____FCVT_S_D;
  rF_or_X_D -> F_UN_RM_TYPE_D____FCVT_WU_D;
  rF_or_X_D -> F_UN_RM_TYPE_D____FCVT_W_D;
  rF_or_X_D -> F_UN_RM_TYPE_D____FSQRT_D;
  rF_or_X_D -> F_UN_RM_TYPE_H____FCVT_H_D;
  rF_or_X_D -> F_UN_TYPE_D____FCLASS_D;
  mmio_write -> checked_mem_write;
  f_is_neg_norm_H -> F_UN_TYPE_H____FCLASS_H;
  f_is_neg_norm_H -> f_is_neg_norm;
  riscv_f32Lt -> F_BIN_TYPE_S____FLT_S;
  riscv_f32Lt -> fp_ge;
  riscv_f32Lt -> fp_lt;
  zeros_implicit -> AMO;
  zeros_implicit -> FVFMATYPE;
  zeros_implicit -> FVFMTYPE;
  zeros_implicit -> FVFTYPE;
  zeros_implicit -> FVVMATYPE;
  zeros_implicit -> FVVMTYPE;
  zeros_implicit -> FVVTYPE;
  zeros_implicit -> FWFTYPE;
  zeros_implicit -> FWVFMATYPE;
  zeros_implicit -> FWVFTYPE;
  zeros_implicit -> FWVTYPE;
  zeros_implicit -> FWVVMATYPE;
  zeros_implicit -> FWVVTYPE;
  zeros_implicit -> F_UN_TYPE_D____FCLASS_D;
  zeros_implicit -> F_UN_TYPE_H____FCLASS_H;
  zeros_implicit -> F_UN_TYPE_S____FCLASS_S;
  zeros_implicit -> LOADRES;
  zeros_implicit -> MASKTYPEI;
  zeros_implicit -> MASKTYPEV;
  zeros_implicit -> MASKTYPEX;
  zeros_implicit -> MMTYPE;
  zeros_implicit -> MOVETYPEI;
  zeros_implicit -> MOVETYPEV;
  zeros_implicit -> MOVETYPEX;
  zeros_implicit -> MVVCOMPRESS;
  zeros_implicit -> MVVMATYPE;
  zeros_implicit -> MVVTYPE;
  zeros_implicit -> MVXMATYPE;
  zeros_implicit -> MVXTYPE;
  zeros_implicit -> NISTYPE;
  zeros_implicit -> NITYPE;
  zeros_implicit -> NVSTYPE;
  zeros_implicit -> NVTYPE;
  zeros_implicit -> NXSTYPE;
  zeros_implicit -> NXTYPE;
  zeros_implicit -> RISCV_BREV8;
  zeros_implicit -> RISCV_CLMUL;
  zeros_implicit -> RISCV_CLMULH;
  zeros_implicit -> RISCV_CLMULR;
  zeros_implicit -> RISCV_ORCB;
  zeros_implicit -> RISCV_ORCB;
  zeros_implicit -> RISCV_REV8;
  zeros_implicit -> RISCV_XPERM4;
  zeros_implicit -> RISCV_XPERM4;
  zeros_implicit -> RISCV_XPERM8;
  zeros_implicit -> RISCV_XPERM8;
  zeros_implicit -> RIVVTYPE;
  zeros_implicit -> RMVVTYPE;
  zeros_implicit -> STORECON;
  zeros_implicit -> VCPOP_M;
  zeros_implicit -> VEXT2TYPE;
  zeros_implicit -> VEXT4TYPE;
  zeros_implicit -> VEXT8TYPE;
  zeros_implicit -> VFIRST_M;
  zeros_implicit -> VFMERGE;
  zeros_implicit -> VFMV;
  zeros_implicit -> VFMVFS;
  zeros_implicit -> VFMVSF;
  zeros_implicit -> VFNUNARY0;
  zeros_implicit -> VFUNARY0;
  zeros_implicit -> VFUNARY1;
  zeros_implicit -> VFWUNARY0;
  zeros_implicit -> VICMPTYPE;
  zeros_implicit -> VID_V;
  zeros_implicit -> VIMCTYPE;
  zeros_implicit -> VIMSTYPE;
  zeros_implicit -> VIMTYPE;
  zeros_implicit -> VIOTA_M;
  zeros_implicit -> VISG;
  zeros_implicit -> VISG;
  zeros_implicit -> VITYPE;
  zeros_implicit -> VMSBF_M;
  zeros_implicit -> VMSIF_M;
  zeros_implicit -> VMSOF_M;
  zeros_implicit -> VMVRTYPE;
  zeros_implicit -> VMVSX;
  zeros_implicit -> VMVXS;
  zeros_implicit -> VSETIVLI;
  zeros_implicit -> VSETIVLI;
  zeros_implicit -> VSETVL;
  zeros_implicit -> VSETVLI;
  zeros_implicit -> VSETVLI;
  zeros_implicit -> VVCMPTYPE;
  zeros_implicit -> VVMCTYPE;
  zeros_implicit -> VVMSTYPE;
  zeros_implicit -> VVMTYPE;
  zeros_implicit -> VVTYPE;
  zeros_implicit -> VVTYPE;
  zeros_implicit -> VXCMPTYPE;
  zeros_implicit -> VXMCTYPE;
  zeros_implicit -> VXMSTYPE;
  zeros_implicit -> VXMTYPE;
  zeros_implicit -> VXSG;
  zeros_implicit -> VXSG;
  zeros_implicit -> VXTYPE;
  zeros_implicit -> VXTYPE;
  zeros_implicit -> WMVVTYPE;
  zeros_implicit -> WMVXTYPE;
  zeros_implicit -> WVTYPE;
  zeros_implicit -> WVVTYPE;
  zeros_implicit -> WVXTYPE;
  zeros_implicit -> WXTYPE;
  zeros_implicit -> ZBS_IOP;
  zeros_implicit -> ZBS_RTYPE;
  zeros_implicit -> ZICOND_RTYPE____RISCV_CZERO_EQZ;
  zeros_implicit -> ZICOND_RTYPE____RISCV_CZERO_NEZ;
  zeros_implicit -> f_is_NaN_D;
  zeros_implicit -> f_is_NaN_H;
  zeros_implicit -> f_is_NaN_S;
  zeros_implicit -> f_is_SNaN_D;
  zeros_implicit -> f_is_SNaN_H;
  zeros_implicit -> f_is_SNaN_S;
  zeros_implicit -> f_is_neg_inf_D;
  zeros_implicit -> f_is_neg_inf_H;
  zeros_implicit -> f_is_neg_inf_S;
  zeros_implicit -> f_is_neg_norm_D;
  zeros_implicit -> f_is_neg_norm_H;
  zeros_implicit -> f_is_neg_norm_S;
  zeros_implicit -> f_is_neg_subnorm_D;
  zeros_implicit -> f_is_neg_subnorm_D;
  zeros_implicit -> f_is_neg_subnorm_H;
  zeros_implicit -> f_is_neg_subnorm_H;
  zeros_implicit -> f_is_neg_subnorm_S;
  zeros_implicit -> f_is_neg_subnorm_S;
  zeros_implicit -> f_is_neg_zero_D;
  zeros_implicit -> f_is_neg_zero_D;
  zeros_implicit -> f_is_neg_zero_H;
  zeros_implicit -> f_is_neg_zero_H;
  zeros_implicit -> f_is_neg_zero_S;
  zeros_implicit -> f_is_neg_zero_S;
  zeros_implicit -> f_is_pos_inf_D;
  zeros_implicit -> f_is_pos_inf_D;
  zeros_implicit -> f_is_pos_inf_H;
  zeros_implicit -> f_is_pos_inf_H;
  zeros_implicit -> f_is_pos_inf_S;
  zeros_implicit -> f_is_pos_inf_S;
  zeros_implicit -> f_is_pos_norm_D;
  zeros_implicit -> f_is_pos_norm_D;
  zeros_implicit -> f_is_pos_norm_H;
  zeros_implicit -> f_is_pos_norm_H;
  zeros_implicit -> f_is_pos_norm_S;
  zeros_implicit -> f_is_pos_norm_S;
  zeros_implicit -> f_is_pos_subnorm_D;
  zeros_implicit -> f_is_pos_subnorm_D;
  zeros_implicit -> f_is_pos_subnorm_D;
  zeros_implicit -> f_is_pos_subnorm_H;
  zeros_implicit -> f_is_pos_subnorm_H;
  zeros_implicit -> f_is_pos_subnorm_H;
  zeros_implicit -> f_is_pos_subnorm_S;
  zeros_implicit -> f_is_pos_subnorm_S;
  zeros_implicit -> f_is_pos_subnorm_S;
  zeros_implicit -> f_is_pos_zero_D;
  zeros_implicit -> f_is_pos_zero_D;
  zeros_implicit -> f_is_pos_zero_D;
  zeros_implicit -> f_is_pos_zero_H;
  zeros_implicit -> f_is_pos_zero_H;
  zeros_implicit -> f_is_pos_zero_H;
  zeros_implicit -> f_is_pos_zero_S;
  zeros_implicit -> f_is_pos_zero_S;
  zeros_implicit -> f_is_pos_zero_S;
  zeros_implicit -> fcvtmod_helper;
  zeros_implicit -> fcvtmod_helper;
  zeros_implicit -> fcvtmod_helper;
  zeros_implicit -> fcvtmod_helper;
  zeros_implicit -> fcvtmod_helper;
  zeros_implicit -> fle_D;
  zeros_implicit -> fle_H;
  zeros_implicit -> fle_S;
  zeros_implicit -> fp_class;
  zeros_implicit -> get_fixed_rounding_incr;
  zeros_implicit -> get_fixed_rounding_incr;
  zeros_implicit -> handle_illegal_vtype;
  zeros_implicit -> handle_illegal_vtype;
  zeros_implicit -> is_aligned;
  zeros_implicit -> pmpCheck;
  zeros_implicit -> process_rfvv_single;
  zeros_implicit -> process_rfvv_widen;
  zeros_implicit -> process_vlre;
  zeros_implicit -> process_vlseg;
  zeros_implicit -> process_vlsegff;
  zeros_implicit -> process_vlsseg;
  zeros_implicit -> process_vlxseg;
  zeros_implicit -> process_vm;
  zeros_implicit -> process_vsre;
  zeros_implicit -> process_vsseg;
  zeros_implicit -> process_vssseg;
  zeros_implicit -> process_vsxseg;
  zeros_implicit -> rF_or_X_D;
  zeros_implicit -> rF_or_X_D;
  zeros_implicit -> rV;
  zeros_implicit -> read_vreg_seg;
  zeros_implicit -> recip7;
  zeros_implicit -> recip7;
  zeros_implicit -> recip7;
  zeros_implicit -> reverse_bits_in_byte;
  zeros_implicit -> riscv_f16Recip7;
  zeros_implicit -> riscv_f16Rsqrte7;
  zeros_implicit -> riscv_f16ToI16;
  zeros_implicit -> riscv_f16ToI16;
  zeros_implicit -> riscv_f16ToI8;
  zeros_implicit -> riscv_f16ToI8;
  zeros_implicit -> riscv_f16ToUi16;
  zeros_implicit -> riscv_f16ToUi8;
  zeros_implicit -> riscv_f32Recip7;
  zeros_implicit -> riscv_f32Rsqrte7;
  zeros_implicit -> riscv_f32ToI16;
  zeros_implicit -> riscv_f32ToI16;
  zeros_implicit -> riscv_f32ToUi16;
  zeros_implicit -> riscv_f64Recip7;
  zeros_implicit -> riscv_f64Rsqrte7;
  zeros_implicit -> riscv_f64Rsqrte7;
  zeros_implicit -> signed_saturation;
  zeros_implicit -> wF_or_X_D;
  zeros_implicit -> write_single_element;
  zeros_implicit -> write_single_vreg;
  RegStr -> wX;
  flush_TLB -> SFENCE_VMA;
  ext_translate_exception -> translationException;
  prepare_trap_vector -> trap_handler;
  prepare_trap_vector -> trap_handler;
  prepare_trap_vector -> trap_handler;
  legalize_satp32 -> legalize_satp;
  pmpReadAddrReg -> pmpCheck;
  pmpReadAddrReg -> pmpCheck;
  pmpReadAddrReg -> readCSR;
  pmpReadAddrReg -> writeCSR;
  rsqrt7 -> riscv_f16Rsqrte7;
  rsqrt7 -> riscv_f16Rsqrte7;
  rsqrt7 -> riscv_f32Rsqrte7;
  rsqrt7 -> riscv_f32Rsqrte7;
  rsqrt7 -> riscv_f64Rsqrte7;
  rsqrt7 -> riscv_f64Rsqrte7;
  is_aligned -> AMO;
  is_aligned -> LOADRES;
  is_aligned -> STORECON;
  is_aligned -> check_misaligned;
  shift_right_arith32 -> RTYPE;
  shift_right_arith32 -> RTYPEW;
  shift_right_arith32 -> SHIFTIOP;
  shift_right_arith32 -> SHIFTIWOP;
  riscv_f16ToF32 -> F_UN_RM_TYPE_H____FCVT_S_H;
  riscv_f16ToF32 -> VFWUNARY0;
  riscv_f16ToF32 -> fp_widen;
  canonical_NaN_H -> F_BIN_TYPE_H____FMAX_H;
  canonical_NaN_H -> F_BIN_TYPE_H____FMIN_H;
  canonical_NaN_H -> RISCV_FLI_H;
  canonical_NaN_H -> RISCV_FMAXM_H;
  canonical_NaN_H -> RISCV_FMINM_H;
  canonical_NaN_H -> canonical_NaN;
  canonical_NaN_H -> nan_unbox_H;
  riscv_f32roundToInt -> RISCV_FROUNDNX_S;
  riscv_f32roundToInt -> RISCV_FROUND_S;
  ext_check_phys_mem_write -> checked_mem_write;
  write_vmask -> FVFMTYPE;
  write_vmask -> FVVMTYPE;
  write_vmask -> MMTYPE;
  write_vmask -> VICMPTYPE;
  write_vmask -> VIMCTYPE;
  write_vmask -> VIMTYPE;
  write_vmask -> VMSBF_M;
  write_vmask -> VMSIF_M;
  write_vmask -> VMSOF_M;
  write_vmask -> VVCMPTYPE;
  write_vmask -> VVMCTYPE;
  write_vmask -> VVMTYPE;
  write_vmask -> VXCMPTYPE;
  write_vmask -> VXMCTYPE;
  write_vmask -> VXMTYPE;
  rF -> rF_bits;
  aes_mixcolumn_byte_inv -> AES32DSMI;
  is_CSR_defined -> check_CSR;
  lift_sip -> legalize_sip;
  handle_illegal_vtype -> VSETIVLI;
  handle_illegal_vtype -> VSETVL;
  handle_illegal_vtype -> VSETVLI;
  get_stvec -> readCSR;
  riscv_f32Mul -> F_BIN_RM_TYPE_S;
  riscv_f32Mul -> fp_mul;
  rF_or_X_H -> F_BIN_RM_TYPE_H;
  rF_or_X_H -> F_BIN_RM_TYPE_H;
  rF_or_X_H -> F_BIN_TYPE_H____FEQ_H;
  rF_or_X_H -> F_BIN_TYPE_H____FEQ_H;
  rF_or_X_H -> F_BIN_TYPE_H____FLE_H;
  rF_or_X_H -> F_BIN_TYPE_H____FLE_H;
  rF_or_X_H -> F_BIN_TYPE_H____FLT_H;
  rF_or_X_H -> F_BIN_TYPE_H____FLT_H;
  rF_or_X_H -> F_BIN_TYPE_H____FMAX_H;
  rF_or_X_H -> F_BIN_TYPE_H____FMAX_H;
  rF_or_X_H -> F_BIN_TYPE_H____FMIN_H;
  rF_or_X_H -> F_BIN_TYPE_H____FMIN_H;
  rF_or_X_H -> F_BIN_TYPE_H____FSGNJN_H;
  rF_or_X_H -> F_BIN_TYPE_H____FSGNJN_H;
  rF_or_X_H -> F_BIN_TYPE_H____FSGNJX_H;
  rF_or_X_H -> F_BIN_TYPE_H____FSGNJX_H;
  rF_or_X_H -> F_BIN_TYPE_H____FSGNJ_H;
  rF_or_X_H -> F_BIN_TYPE_H____FSGNJ_H;
  rF_or_X_H -> F_MADD_TYPE_H;
  rF_or_X_H -> F_MADD_TYPE_H;
  rF_or_X_H -> F_MADD_TYPE_H;
  rF_or_X_H -> F_UN_RM_TYPE_H____FCVT_D_H;
  rF_or_X_H -> F_UN_RM_TYPE_H____FCVT_LU_H;
  rF_or_X_H -> F_UN_RM_TYPE_H____FCVT_L_H;
  rF_or_X_H -> F_UN_RM_TYPE_H____FCVT_S_H;
  rF_or_X_H -> F_UN_RM_TYPE_H____FCVT_WU_H;
  rF_or_X_H -> F_UN_RM_TYPE_H____FCVT_W_H;
  rF_or_X_H -> F_UN_RM_TYPE_H____FSQRT_H;
  rF_or_X_H -> F_UN_TYPE_H____FCLASS_H;
  privLevel_to_str -> exception_handler;
  privLevel_to_str -> exception_handler;
  privLevel_to_str -> exception_handler;
  privLevel_to_str -> exception_handler;
  privLevel_to_str -> trap_handler;
  get_config_print_platform -> clint_dispatch;
  get_config_print_platform -> clint_load;
  get_config_print_platform -> clint_store;
  get_config_print_platform -> exception_handler;
  get_config_print_platform -> htif_load;
  get_config_print_platform -> htif_store;
  get_config_print_platform -> trap_handler;
  aes_apply_fwd_sbox_to_each_byte -> AES64ES;
  aes_apply_fwd_sbox_to_each_byte -> AES64ESM;
  f_is_NaN_D -> F_BIN_TYPE_D____FMAX_D;
  f_is_NaN_D -> F_BIN_TYPE_D____FMAX_D;
  f_is_NaN_D -> F_BIN_TYPE_D____FMIN_D;
  f_is_NaN_D -> F_BIN_TYPE_D____FMIN_D;
  f_is_NaN_D -> RISCV_FMAXM_D;
  f_is_NaN_D -> RISCV_FMAXM_D;
  f_is_NaN_D -> RISCV_FMINM_D;
  f_is_NaN_D -> RISCV_FMINM_D;
  f_is_NaN_D -> f_is_NaN;
  f_is_NaN_D -> fle_D;
  f_is_NaN_D -> fle_D;
  fle_S -> F_BIN_TYPE_S____FMAX_S;
  fle_S -> F_BIN_TYPE_S____FMIN_S;
  fle_S -> RISCV_FMAXM_S;
  fle_S -> RISCV_FMINM_S;
  illegal_reduction -> RMVVTYPE;
  f_is_neg_inf_H -> F_UN_TYPE_H____FCLASS_H;
  f_is_neg_inf_H -> f_is_neg_inf;
  rF_H -> RISCV_FLEQ_H;
  rF_H -> RISCV_FLEQ_H;
  rF_H -> RISCV_FLTQ_H;
  rF_H -> RISCV_FLTQ_H;
  rF_H -> RISCV_FMAXM_H;
  rF_H -> RISCV_FMAXM_H;
  rF_H -> RISCV_FMINM_H;
  rF_H -> RISCV_FMINM_H;
  rF_H -> RISCV_FROUNDNX_H;
  rF_H -> RISCV_FROUND_H;
  rF_H -> get_scalar_fp;
  rF_H -> rF_or_X_H;
  riscv_f64Lt_quiet -> RISCV_FLTQ_D;
  riscv_f64Lt_quiet -> fp_max;
  riscv_f64Lt_quiet -> fp_min;
  riscv_f64Add -> F_BIN_RM_TYPE_D;
  riscv_f64Add -> fp_add;
  legalize_mcountinhibit -> writeCSR;
  exceptionType_to_bits -> exception_handler;
  extensionEnabled -> BTYPE;
  extensionEnabled -> RISCV_JAL;
  extensionEnabled -> RISCV_JALR;
  extensionEnabled -> SRET;
  extensionEnabled -> URET;
  extensionEnabled -> check_Counteren;
  extensionEnabled -> exception_delegatee;
  extensionEnabled -> exception_delegatee;
  extensionEnabled -> exception_delegatee;
  extensionEnabled -> exception_handler;
  extensionEnabled -> have_privLevel;
  extensionEnabled -> have_privLevel;
  extensionEnabled -> is_CSR_defined;
  extensionEnabled -> is_CSR_defined;
  extensionEnabled -> is_CSR_defined;
  extensionEnabled -> is_CSR_defined;
  extensionEnabled -> legalize_mie;
  extensionEnabled -> legalize_mie;
  extensionEnabled -> legalize_mip;
  extensionEnabled -> legalize_mip;
  extensionEnabled -> legalize_mstatus;
  extensionEnabled -> legalize_mstatus;
  extensionEnabled -> lift_sie;
  extensionEnabled -> lift_sip;
  extensionEnabled -> lowest_supported_privLevel;
  extensionEnabled -> trap_handler;
  extensionEnabled -> trap_handler;
  fp_min -> FVFTYPE;
  fp_min -> FVVTYPE;
  fp_min -> process_rfvv_single;
  nan_box_H -> F_UN_TYPE_H____FMV_H_X;
  nan_box_H -> process_fload16;
  nan_box_H -> wF_H;
  f_is_neg_zero_S -> F_BIN_TYPE_S____FMAX_S;
  f_is_neg_zero_S -> F_BIN_TYPE_S____FMAX_S;
  f_is_neg_zero_S -> F_BIN_TYPE_S____FMIN_S;
  f_is_neg_zero_S -> F_BIN_TYPE_S____FMIN_S;
  f_is_neg_zero_S -> F_UN_TYPE_S____FCLASS_S;
  f_is_neg_zero_S -> RISCV_FMAXM_S;
  f_is_neg_zero_S -> RISCV_FMAXM_S;
  f_is_neg_zero_S -> RISCV_FMINM_S;
  f_is_neg_zero_S -> RISCV_FMINM_S;
  f_is_neg_zero_S -> f_is_neg_zero;
  f_is_neg_zero_S -> fle_S;
  f_is_neg_zero_S -> fle_S;
  zero_extend -> CSR;
  zero_extend -> C_FLD;
  zero_extend -> C_FLDSP;
  zero_extend -> C_FLW;
  zero_extend -> C_FLWSP;
  zero_extend -> C_FSD;
  zero_extend -> C_FSDSP;
  zero_extend -> C_FSW;
  zero_extend -> C_FSWSP;
  zero_extend -> C_JALR;
  zero_extend -> C_JR;
  zero_extend -> C_LBU;
  zero_extend -> C_LD;
  zero_extend -> C_LDSP;
  zero_extend -> C_LH;
  zero_extend -> C_LHU;
  zero_extend -> C_LW;
  zero_extend -> C_LWSP;
  zero_extend -> C_SB;
  zero_extend -> C_SD;
  zero_extend -> C_SDSP;
  zero_extend -> C_SH;
  zero_extend -> C_SW;
  zero_extend -> C_SWSP;
  zero_extend -> C_ZEXT_B;
  zero_extend -> F_BIN_TYPE_D____FEQ_D;
  zero_extend -> F_BIN_TYPE_D____FLE_D;
  zero_extend -> F_BIN_TYPE_D____FLT_D;
  zero_extend -> F_BIN_TYPE_H____FEQ_H;
  zero_extend -> F_BIN_TYPE_H____FLE_H;
  zero_extend -> F_BIN_TYPE_H____FLT_H;
  zero_extend -> F_BIN_TYPE_S____FEQ_S;
  zero_extend -> F_BIN_TYPE_S____FLE_S;
  zero_extend -> F_BIN_TYPE_S____FLT_S;
  zero_extend -> F_UN_TYPE_D____FCLASS_D;
  zero_extend -> F_UN_TYPE_H____FCLASS_H;
  zero_extend -> F_UN_TYPE_S____FCLASS_S;
  zero_extend -> ITYPE;
  zero_extend -> MVVTYPE;
  zero_extend -> MVVTYPE;
  zero_extend -> MVXTYPE;
  zero_extend -> MVXTYPE;
  zero_extend -> MVXTYPE;
  zero_extend -> NITYPE;
  zero_extend -> NVTYPE;
  zero_extend -> NXTYPE;
  zero_extend -> PPNs_of_PTE;
  zero_extend -> RISCV_FLEQ_D;
  zero_extend -> RISCV_FLEQ_H;
  zero_extend -> RISCV_FLEQ_S;
  zero_extend -> RISCV_FLTQ_D;
  zero_extend -> RISCV_FLTQ_H;
  zero_extend -> RISCV_FLTQ_S;
  zero_extend -> RISCV_SLLIUW;
  zero_extend -> RTYPE;
  zero_extend -> STORECON;
  zero_extend -> STORECON;
  zero_extend -> VEXT2TYPE;
  zero_extend -> VEXT4TYPE;
  zero_extend -> VEXT8TYPE;
  zero_extend -> VFUNARY0;
  zero_extend -> VFWUNARY0;
  zero_extend -> VISG;
  zero_extend -> VITYPE;
  zero_extend -> VITYPE;
  zero_extend -> VITYPE;
  zero_extend -> VITYPE;
  zero_extend -> VMVRTYPE;
  zero_extend -> VVTYPE;
  zero_extend -> VVTYPE;
  zero_extend -> VVTYPE;
  zero_extend -> VXTYPE;
  zero_extend -> VXTYPE;
  zero_extend -> VXTYPE;
  zero_extend -> VXTYPE;
  zero_extend -> ZBA_RTYPEUW;
  zero_extend -> ZBB_EXTOP;
  zero_extend -> ZBKB_RTYPE;
  zero_extend -> ZBS_IOP;
  zero_extend -> ZBS_IOP;
  zero_extend -> ZBS_RTYPE;
  zero_extend -> ZBS_RTYPE;
  zero_extend -> add_to_TLB;
  zero_extend -> extend_value;
  zero_extend -> fcvtmod_helper;
  zero_extend -> flush_TLB;
  zero_extend -> fp_class;
  zero_extend -> htif_store;
  zero_extend -> legalize_mstatus;
  zero_extend -> legalize_satp;
  zero_extend -> legalize_satp;
  zero_extend -> legalize_satp;
  zero_extend -> legalize_sedeleg;
  zero_extend -> lower_mie;
  zero_extend -> lower_mip;
  zero_extend -> lower_mstatus;
  zero_extend -> msbs_of_PTE;
  zero_extend -> pc_alignment_mask;
  zero_extend -> pmpReadAddrReg;
  zero_extend -> pmpWriteAddr;
  zero_extend -> pt_walk;
  zero_extend -> pt_walk;
  zero_extend -> readCSR;
  zero_extend -> readCSR;
  zero_extend -> readCSR;
  zero_extend -> readCSR;
  zero_extend -> readCSR;
  zero_extend -> read_seed_csr;
  zero_extend -> read_vreg_seg;
  zero_extend -> recip7;
  zero_extend -> reset_htif;
  zero_extend -> rsqrt7;
  zero_extend -> satp_to_PT_base;
  zero_extend -> satp_to_asid;
  zero_extend -> translateAddr;
  zero_extend -> trap_handler;
  zero_extend -> tval;
  zero_extend -> tvec_addr;
  zero_extend -> vpn_j_of_va;
  zero_extend -> vpns_of_va;
  zero_extend -> writeCSR;
  zero_extend -> writeCSR;
  zero_extend -> writeCSR;
  zero_extend -> writeCSR;
  zero_extend -> writeCSR;
  zero_extend -> writeCSR;
  zero_extend -> write_single_element;
  zero_extend -> write_single_element;
  zero_extend -> write_single_vreg;
  select_instr_or_fcsr_rm -> F_BIN_RM_TYPE_D;
  select_instr_or_fcsr_rm -> F_BIN_RM_TYPE_H;
  select_instr_or_fcsr_rm -> F_BIN_RM_TYPE_S;
  select_instr_or_fcsr_rm -> F_MADD_TYPE_D;
  select_instr_or_fcsr_rm -> F_MADD_TYPE_H;
  select_instr_or_fcsr_rm -> F_MADD_TYPE_S;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_D____FCVT_D_L;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_D____FCVT_D_LU;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_D____FCVT_D_S;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_D____FCVT_D_W;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_D____FCVT_D_WU;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_D____FCVT_LU_D;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_D____FCVT_L_D;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_D____FCVT_S_D;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_D____FCVT_WU_D;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_D____FCVT_W_D;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_D____FSQRT_D;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_H____FCVT_D_H;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_H____FCVT_H_D;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_H____FCVT_H_L;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_H____FCVT_H_LU;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_H____FCVT_H_S;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_H____FCVT_H_W;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_H____FCVT_H_WU;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_H____FCVT_LU_H;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_H____FCVT_L_H;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_H____FCVT_S_H;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_H____FCVT_WU_H;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_H____FCVT_W_H;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_H____FSQRT_H;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_S____FCVT_LU_S;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_S____FCVT_L_S;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_S____FCVT_S_L;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_S____FCVT_S_LU;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_S____FCVT_S_W;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_S____FCVT_S_WU;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_S____FCVT_WU_S;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_S____FCVT_W_S;
  select_instr_or_fcsr_rm -> F_UN_RM_TYPE_S____FSQRT_S;
  select_instr_or_fcsr_rm -> RISCV_FROUNDNX_D;
  select_instr_or_fcsr_rm -> RISCV_FROUNDNX_H;
  select_instr_or_fcsr_rm -> RISCV_FROUNDNX_S;
  select_instr_or_fcsr_rm -> RISCV_FROUND_D;
  select_instr_or_fcsr_rm -> RISCV_FROUND_H;
  select_instr_or_fcsr_rm -> RISCV_FROUND_S;
  check_CSR -> CSR;
  within_htif_writable -> mmio_write;
  within_htif_writable -> within_mmio_writable;
  get_vtype_vta -> MASKTYPEI;
  get_vtype_vta -> MASKTYPEV;
  get_vtype_vta -> MASKTYPEX;
  get_vtype_vta -> MVVCOMPRESS;
  get_vtype_vta -> VFMERGE;
  get_vtype_vta -> VFMVSF;
  get_vtype_vta -> VMVSX;
  get_vtype_vta -> init_masked_result;
  get_vtype_vta -> process_vlsegff;
  riscv_f16ToUi32 -> F_UN_RM_TYPE_H____FCVT_WU_H;
  riscv_f16ToUi32 -> VFWUNARY0;
  riscv_f16ToUi32 -> VFWUNARY0;
  riscv_f16ToUi32 -> riscv_f16ToUi16;
  riscv_f16ToUi32 -> riscv_f16ToUi8;
  ZBA_RTYPEUW -> C_ZEXT_W;
  clint_store -> mmio_write;
  wV -> wV_bits;
  riscv_f32ToUi64 -> F_UN_RM_TYPE_S____FCVT_LU_S;
  riscv_f32ToUi64 -> VFWUNARY0;
  riscv_f32ToUi64 -> VFWUNARY0;
  internal_error -> AMO;
  internal_error -> SFENCE_VMA;
  internal_error -> STORE;
  internal_error -> aes_decode_rcon;
  internal_error -> check_PTE_permission;
  internal_error -> cur_Architecture;
  internal_error -> get_sew;
  internal_error -> get_sew_bytes;
  internal_error -> legalize_satp;
  internal_error -> prepare_trap_vector;
  internal_error -> privLevel_of_bits;
  internal_error -> process_fstore;
  internal_error -> process_rfvv_single;
  internal_error -> process_vm;
  internal_error -> process_vsre;
  internal_error -> process_vsre;
  internal_error -> process_vsseg;
  internal_error -> process_vssseg;
  internal_error -> process_vsxseg;
  internal_error -> report_invalid_width;
  internal_error -> satp_to_PT_base;
  internal_error -> satp_to_asid;
  internal_error -> translate_TLB_hit;
  internal_error -> translationMode;
  internal_error -> translationMode;
  internal_error -> translationMode;
  internal_error -> trap_handler;
  write_single_vreg -> write_vreg;
  trapVectorMode_of_bits -> legalize_tvec;
  trapVectorMode_of_bits -> tvec_addr;
  process_vm -> VMTYPE;
  aes_apply_inv_sbox_to_each_byte -> AES64DS;
  aes_apply_inv_sbox_to_each_byte -> AES64DSM;
  rotater -> AES64KS1I;
  rotater -> SHA256SIG0;
  rotater -> SHA256SIG0;
  rotater -> SHA256SIG1;
  rotater -> SHA256SIG1;
  rotater -> SHA256SUM0;
  rotater -> SHA256SUM0;
  rotater -> SHA256SUM0;
  rotater -> SHA256SUM1;
  rotater -> SHA256SUM1;
  rotater -> SHA256SUM1;
  rotater -> SHA512SIG0;
  rotater -> SHA512SIG0;
  rotater -> SHA512SIG1;
  rotater -> SHA512SIG1;
  rotater -> SHA512SUM0;
  rotater -> SHA512SUM0;
  rotater -> SHA512SUM0;
  rotater -> SHA512SUM1;
  rotater -> SHA512SUM1;
  rotater -> SHA512SUM1;
  nvFlag -> fcvtmod_helper;
  nvFlag -> fle_D;
  nvFlag -> fle_H;
  nvFlag -> fle_S;
  nvFlag -> riscv_f16Recip7;
  nvFlag -> riscv_f16Rsqrte7;
  nvFlag -> riscv_f16ToI16;
  nvFlag -> riscv_f16ToI8;
  nvFlag -> riscv_f16ToUi16;
  nvFlag -> riscv_f16ToUi8;
  nvFlag -> riscv_f32Recip7;
  nvFlag -> riscv_f32Rsqrte7;
  nvFlag -> riscv_f32ToI16;
  nvFlag -> riscv_f32ToUi16;
  nvFlag -> riscv_f64Recip7;
  nvFlag -> riscv_f64Rsqrte7;
  tvec_addr -> prepare_trap_vector;
  riscv_f16Lt_quiet -> RISCV_FLTQ_H;
  riscv_f16Lt_quiet -> fp_max;
  riscv_f16Lt_quiet -> fp_min;
  legalize_mstatus -> legalize_sstatus;
  legalize_mstatus -> writeCSR;
  riscv_f16Rsqrte7 -> VFUNARY1;
  write_TLB -> translate_TLB_hit;
  recip7 -> riscv_f16Recip7;
  recip7 -> riscv_f16Recip7;
  recip7 -> riscv_f32Recip7;
  recip7 -> riscv_f32Recip7;
  recip7 -> riscv_f64Recip7;
  recip7 -> riscv_f64Recip7;
  legalize_medeleg -> writeCSR;
  check_seed_CSR -> check_CSR;
  arch_to_bits -> get_mstatus_SXL;
  arch_to_bits -> get_mstatus_UXL;
  check_TVM_SATP -> check_CSR;
  process_vlre -> VLRETYPE;
  effective_fence_set -> FENCE;
  effective_fence_set -> FENCE;
  update_PTE_Bits -> translate_TLB_hit;
  update_PTE_Bits -> translate_TLB_miss;
  valid_eew_emul -> illegal_fp_reduction_widen;
  valid_eew_emul -> illegal_fp_variable_width;
  valid_eew_emul -> illegal_indexed_load;
  valid_eew_emul -> illegal_indexed_store;
  valid_eew_emul -> illegal_load;
  valid_eew_emul -> illegal_reduction_widen;
  valid_eew_emul -> illegal_store;
  valid_eew_emul -> illegal_variable_width;
  phys_access_check -> checked_mem_read;
  phys_access_check -> checked_mem_write;
  translate_TLB_hit -> translate;
  get_lmul_pow -> FVFMATYPE;
  get_lmul_pow -> FVFMTYPE;
  get_lmul_pow -> FVFTYPE;
  get_lmul_pow -> FVVMATYPE;
  get_lmul_pow -> FVVMTYPE;
  get_lmul_pow -> FVVTYPE;
  get_lmul_pow -> FWFTYPE;
  get_lmul_pow -> FWVFMATYPE;
  get_lmul_pow -> FWVFTYPE;
  get_lmul_pow -> FWVTYPE;
  get_lmul_pow -> FWVVMATYPE;
  get_lmul_pow -> FWVVTYPE;
  get_lmul_pow -> MASKTYPEI;
  get_lmul_pow -> MASKTYPEV;
  get_lmul_pow -> MASKTYPEX;
  get_lmul_pow -> MMTYPE;
  get_lmul_pow -> MOVETYPEI;
  get_lmul_pow -> MOVETYPEV;
  get_lmul_pow -> MOVETYPEX;
  get_lmul_pow -> MVVCOMPRESS;
  get_lmul_pow -> MVVMATYPE;
  get_lmul_pow -> MVVTYPE;
  get_lmul_pow -> MVXMATYPE;
  get_lmul_pow -> MVXTYPE;
  get_lmul_pow -> NISTYPE;
  get_lmul_pow -> NITYPE;
  get_lmul_pow -> NVSTYPE;
  get_lmul_pow -> NVTYPE;
  get_lmul_pow -> NXSTYPE;
  get_lmul_pow -> NXTYPE;
  get_lmul_pow -> RFVVTYPE;
  get_lmul_pow -> RIVVTYPE;
  get_lmul_pow -> RMVVTYPE;
  get_lmul_pow -> VCPOP_M;
  get_lmul_pow -> VEXT2TYPE;
  get_lmul_pow -> VEXT4TYPE;
  get_lmul_pow -> VEXT8TYPE;
  get_lmul_pow -> VFIRST_M;
  get_lmul_pow -> VFMERGE;
  get_lmul_pow -> VFMV;
  get_lmul_pow -> VFNUNARY0;
  get_lmul_pow -> VFUNARY0;
  get_lmul_pow -> VFUNARY1;
  get_lmul_pow -> VFWUNARY0;
  get_lmul_pow -> VICMPTYPE;
  get_lmul_pow -> VID_V;
  get_lmul_pow -> VIMCTYPE;
  get_lmul_pow -> VIMSTYPE;
  get_lmul_pow -> VIMTYPE;
  get_lmul_pow -> VIOTA_M;
  get_lmul_pow -> VISG;
  get_lmul_pow -> VITYPE;
  get_lmul_pow -> VLOXSEGTYPE;
  get_lmul_pow -> VLSEGFFTYPE;
  get_lmul_pow -> VLSEGTYPE;
  get_lmul_pow -> VLSSEGTYPE;
  get_lmul_pow -> VLUXSEGTYPE;
  get_lmul_pow -> VMSBF_M;
  get_lmul_pow -> VMSIF_M;
  get_lmul_pow -> VMSOF_M;
  get_lmul_pow -> VSETIVLI;
  get_lmul_pow -> VSETVL;
  get_lmul_pow -> VSETVLI;
  get_lmul_pow -> VSOXSEGTYPE;
  get_lmul_pow -> VSSEGTYPE;
  get_lmul_pow -> VSSSEGTYPE;
  get_lmul_pow -> VSUXSEGTYPE;
  get_lmul_pow -> VVCMPTYPE;
  get_lmul_pow -> VVMCTYPE;
  get_lmul_pow -> VVMSTYPE;
  get_lmul_pow -> VVMTYPE;
  get_lmul_pow -> VVTYPE;
  get_lmul_pow -> VXCMPTYPE;
  get_lmul_pow -> VXMCTYPE;
  get_lmul_pow -> VXMSTYPE;
  get_lmul_pow -> VXMTYPE;
  get_lmul_pow -> VXSG;
  get_lmul_pow -> VXTYPE;
  get_lmul_pow -> WMVVTYPE;
  get_lmul_pow -> WMVXTYPE;
  get_lmul_pow -> WVTYPE;
  get_lmul_pow -> WVVTYPE;
  get_lmul_pow -> WVXTYPE;
  get_lmul_pow -> WXTYPE;
  ITYPE -> C_ADDI;
  ITYPE -> C_ADDI16SP;
  ITYPE -> C_ADDI4SPN;
  ITYPE -> C_ANDI;
  ITYPE -> C_LI;
  pmpAddrMatchType_to_bits -> pmpWriteCfg;
  riscv_f64Sqrt -> F_UN_RM_TYPE_D____FSQRT_D;
  riscv_f64Sqrt -> VFUNARY1;
  mem_write_value -> AMO;
  mem_write_value -> STORE;
  mem_write_value -> STORECON;
  mem_write_value -> STORE_FP;
  mem_write_value -> STORE_FP;
  mem_write_value -> STORE_FP;
  mem_write_value -> process_vm;
  mem_write_value -> process_vsre;
  mem_write_value -> process_vsre;
  mem_write_value -> process_vsseg;
  mem_write_value -> process_vssseg;
  mem_write_value -> process_vsxseg;
  legalize_mie -> writeCSR;
  vpn_j_of_va -> pt_walk;
  negate_D -> F_MADD_TYPE_D;
  negate_D -> F_MADD_TYPE_D;
  negate_D -> negate_fp;
  ext_exc_type_to_bits -> exceptionType_to_bits;
  f_is_pos_norm_D -> F_UN_TYPE_D____FCLASS_D;
  f_is_pos_norm_D -> f_is_pos_norm;
  exception_handler -> ECALL;
  exception_handler -> MRET;
  exception_handler -> SRET;
  exception_handler -> URET;
  exception_handler -> handle_illegal;
  exception_handler -> handle_mem_exception;
  STORE -> C_SB;
  STORE -> C_SD;
  STORE -> C_SDSP;
  STORE -> C_SH;
  STORE -> C_SW;
  STORE -> C_SWSP;
  illegal_indexed_load -> VLOXSEGTYPE;
  illegal_indexed_load -> VLUXSEGTYPE;
  valid_segment -> illegal_indexed_load;
  valid_segment -> illegal_indexed_store;
  valid_segment -> illegal_load;
  valid_segment -> illegal_store;
  tlb_hash -> add_to_TLB;
  tlb_hash -> lookup_TLB;
  handle_illegal -> CSR;
  handle_illegal -> C_ILLEGAL;
  handle_illegal -> FVFMATYPE;
  handle_illegal -> FVFMTYPE;
  handle_illegal -> FVFTYPE;
  handle_illegal -> FVVMATYPE;
  handle_illegal -> FVVMTYPE;
  handle_illegal -> FVVTYPE;
  handle_illegal -> FWFTYPE;
  handle_illegal -> FWVFMATYPE;
  handle_illegal -> FWVFTYPE;
  handle_illegal -> FWVTYPE;
  handle_illegal -> FWVVMATYPE;
  handle_illegal -> FWVVTYPE;
  handle_illegal -> F_BIN_RM_TYPE_D;
  handle_illegal -> F_BIN_RM_TYPE_H;
  handle_illegal -> F_BIN_RM_TYPE_S;
  handle_illegal -> F_MADD_TYPE_D;
  handle_illegal -> F_MADD_TYPE_H;
  handle_illegal -> F_MADD_TYPE_S;
  handle_illegal -> F_UN_RM_TYPE_D____FCVT_D_L;
  handle_illegal -> F_UN_RM_TYPE_D____FCVT_D_LU;
  handle_illegal -> F_UN_RM_TYPE_D____FCVT_D_S;
  handle_illegal -> F_UN_RM_TYPE_D____FCVT_D_W;
  handle_illegal -> F_UN_RM_TYPE_D____FCVT_D_WU;
  handle_illegal -> F_UN_RM_TYPE_D____FCVT_LU_D;
  handle_illegal -> F_UN_RM_TYPE_D____FCVT_L_D;
  handle_illegal -> F_UN_RM_TYPE_D____FCVT_S_D;
  handle_illegal -> F_UN_RM_TYPE_D____FCVT_WU_D;
  handle_illegal -> F_UN_RM_TYPE_D____FCVT_W_D;
  handle_illegal -> F_UN_RM_TYPE_D____FSQRT_D;
  handle_illegal -> F_UN_RM_TYPE_H____FCVT_D_H;
  handle_illegal -> F_UN_RM_TYPE_H____FCVT_H_D;
  handle_illegal -> F_UN_RM_TYPE_H____FCVT_H_L;
  handle_illegal -> F_UN_RM_TYPE_H____FCVT_H_LU;
  handle_illegal -> F_UN_RM_TYPE_H____FCVT_H_S;
  handle_illegal -> F_UN_RM_TYPE_H____FCVT_H_W;
  handle_illegal -> F_UN_RM_TYPE_H____FCVT_H_WU;
  handle_illegal -> F_UN_RM_TYPE_H____FCVT_LU_H;
  handle_illegal -> F_UN_RM_TYPE_H____FCVT_L_H;
  handle_illegal -> F_UN_RM_TYPE_H____FCVT_S_H;
  handle_illegal -> F_UN_RM_TYPE_H____FCVT_WU_H;
  handle_illegal -> F_UN_RM_TYPE_H____FCVT_W_H;
  handle_illegal -> F_UN_RM_TYPE_H____FSQRT_H;
  handle_illegal -> F_UN_RM_TYPE_S____FCVT_LU_S;
  handle_illegal -> F_UN_RM_TYPE_S____FCVT_L_S;
  handle_illegal -> F_UN_RM_TYPE_S____FCVT_S_L;
  handle_illegal -> F_UN_RM_TYPE_S____FCVT_S_LU;
  handle_illegal -> F_UN_RM_TYPE_S____FCVT_S_W;
  handle_illegal -> F_UN_RM_TYPE_S____FCVT_S_WU;
  handle_illegal -> F_UN_RM_TYPE_S____FCVT_WU_S;
  handle_illegal -> F_UN_RM_TYPE_S____FCVT_W_S;
  handle_illegal -> F_UN_RM_TYPE_S____FSQRT_S;
  handle_illegal -> ILLEGAL;
  handle_illegal -> LOAD_FP;
  handle_illegal -> MASKTYPEI;
  handle_illegal -> MASKTYPEV;
  handle_illegal -> MASKTYPEX;
  handle_illegal -> MMTYPE;
  handle_illegal -> MOVETYPEI;
  handle_illegal -> MOVETYPEV;
  handle_illegal -> MOVETYPEX;
  handle_illegal -> MRET;
  handle_illegal -> MVVCOMPRESS;
  handle_illegal -> MVVMATYPE;
  handle_illegal -> MVVTYPE;
  handle_illegal -> MVXMATYPE;
  handle_illegal -> MVXTYPE;
  handle_illegal -> NISTYPE;
  handle_illegal -> NITYPE;
  handle_illegal -> NVSTYPE;
  handle_illegal -> NVTYPE;
  handle_illegal -> NXSTYPE;
  handle_illegal -> NXTYPE;
  handle_illegal -> RISCV_FROUNDNX_D;
  handle_illegal -> RISCV_FROUNDNX_H;
  handle_illegal -> RISCV_FROUNDNX_S;
  handle_illegal -> RISCV_FROUND_D;
  handle_illegal -> RISCV_FROUND_H;
  handle_illegal -> RISCV_FROUND_S;
  handle_illegal -> RIVVTYPE;
  handle_illegal -> RMVVTYPE;
  handle_illegal -> SFENCE_INVAL_IR;
  handle_illegal -> SFENCE_VMA;
  handle_illegal -> SFENCE_W_INVAL;
  handle_illegal -> SRET;
  handle_illegal -> STORE_FP;
  handle_illegal -> URET;
  handle_illegal -> VCPOP_M;
  handle_illegal -> VEXT2TYPE;
  handle_illegal -> VEXT4TYPE;
  handle_illegal -> VEXT8TYPE;
  handle_illegal -> VFIRST_M;
  handle_illegal -> VFMERGE;
  handle_illegal -> VFMV;
  handle_illegal -> VFMVFS;
  handle_illegal -> VFMVSF;
  handle_illegal -> VFNUNARY0;
  handle_illegal -> VFUNARY0;
  handle_illegal -> VFUNARY1;
  handle_illegal -> VFWUNARY0;
  handle_illegal -> VICMPTYPE;
  handle_illegal -> VID_V;
  handle_illegal -> VIMCTYPE;
  handle_illegal -> VIMSTYPE;
  handle_illegal -> VIMTYPE;
  handle_illegal -> VIOTA_M;
  handle_illegal -> VISG;
  handle_illegal -> VITYPE;
  handle_illegal -> VLOXSEGTYPE;
  handle_illegal -> VLRETYPE;
  handle_illegal -> VLSEGFFTYPE;
  handle_illegal -> VLSEGTYPE;
  handle_illegal -> VLSSEGTYPE;
  handle_illegal -> VLUXSEGTYPE;
  handle_illegal -> VMSBF_M;
  handle_illegal -> VMSIF_M;
  handle_illegal -> VMSOF_M;
  handle_illegal -> VMTYPE;
  handle_illegal -> VMVRTYPE;
  handle_illegal -> VMVSX;
  handle_illegal -> VMVXS;
  handle_illegal -> VSOXSEGTYPE;
  handle_illegal -> VSRETYPE;
  handle_illegal -> VSSEGTYPE;
  handle_illegal -> VSSSEGTYPE;
  handle_illegal -> VSUXSEGTYPE;
  handle_illegal -> VVCMPTYPE;
  handle_illegal -> VVMCTYPE;
  handle_illegal -> VVMSTYPE;
  handle_illegal -> VVMTYPE;
  handle_illegal -> VVTYPE;
  handle_illegal -> VXCMPTYPE;
  handle_illegal -> VXMCTYPE;
  handle_illegal -> VXMSTYPE;
  handle_illegal -> VXMTYPE;
  handle_illegal -> VXSG;
  handle_illegal -> VXTYPE;
  handle_illegal -> WFI;
  handle_illegal -> WMVVTYPE;
  handle_illegal -> WMVXTYPE;
  handle_illegal -> WVTYPE;
  handle_illegal -> WVVTYPE;
  handle_illegal -> WVXTYPE;
  handle_illegal -> WXTYPE;
  handle_illegal -> get_start_element;
  handle_illegal -> process_rfvv_single;
  handle_illegal -> process_rfvv_widen;
  pte_is_invalid -> pt_walk;
  wF_or_X_D -> F_BIN_RM_TYPE_D;
  wF_or_X_D -> F_BIN_TYPE_D____FMAX_D;
  wF_or_X_D -> F_BIN_TYPE_D____FMIN_D;
  wF_or_X_D -> F_BIN_TYPE_D____FSGNJN_D;
  wF_or_X_D -> F_BIN_TYPE_D____FSGNJX_D;
  wF_or_X_D -> F_BIN_TYPE_D____FSGNJ_D;
  wF_or_X_D -> F_MADD_TYPE_D;
  wF_or_X_D -> F_UN_RM_TYPE_D____FCVT_D_L;
  wF_or_X_D -> F_UN_RM_TYPE_D____FCVT_D_LU;
  wF_or_X_D -> F_UN_RM_TYPE_D____FCVT_D_S;
  wF_or_X_D -> F_UN_RM_TYPE_D____FCVT_D_W;
  wF_or_X_D -> F_UN_RM_TYPE_D____FCVT_D_WU;
  wF_or_X_D -> F_UN_RM_TYPE_D____FSQRT_D;
  wF_or_X_D -> F_UN_RM_TYPE_H____FCVT_D_H;
  rX_bits -> ADDIW;
  rX_bits -> AES32DSI;
  rX_bits -> AES32DSI;
  rX_bits -> AES32DSMI;
  rX_bits -> AES32DSMI;
  rX_bits -> AES32ESI;
  rX_bits -> AES32ESI;
  rX_bits -> AES32ESMI;
  rX_bits -> AES32ESMI;
  rX_bits -> AES64DS;
  rX_bits -> AES64DS;
  rX_bits -> AES64DSM;
  rX_bits -> AES64DSM;
  rX_bits -> AES64ES;
  rX_bits -> AES64ES;
  rX_bits -> AES64ESM;
  rX_bits -> AES64ESM;
  rX_bits -> AES64IM;
  rX_bits -> AES64KS1I;
  rX_bits -> AES64KS2;
  rX_bits -> AES64KS2;
  rX_bits -> AMO;
  rX_bits -> BTYPE;
  rX_bits -> BTYPE;
  rX_bits -> CSR;
  rX_bits -> C_NOT;
  rX_bits -> C_ZEXT_B;
  rX_bits -> DIV;
  rX_bits -> DIV;
  rX_bits -> DIVW;
  rX_bits -> DIVW;
  rX_bits -> F_UN_RM_TYPE_D____FCVT_D_L;
  rX_bits -> F_UN_RM_TYPE_D____FCVT_D_LU;
  rX_bits -> F_UN_RM_TYPE_D____FCVT_D_W;
  rX_bits -> F_UN_RM_TYPE_D____FCVT_D_WU;
  rX_bits -> F_UN_RM_TYPE_H____FCVT_H_L;
  rX_bits -> F_UN_RM_TYPE_H____FCVT_H_LU;
  rX_bits -> F_UN_RM_TYPE_H____FCVT_H_W;
  rX_bits -> F_UN_RM_TYPE_H____FCVT_H_WU;
  rX_bits -> F_UN_RM_TYPE_S____FCVT_S_L;
  rX_bits -> F_UN_RM_TYPE_S____FCVT_S_LU;
  rX_bits -> F_UN_RM_TYPE_S____FCVT_S_W;
  rX_bits -> F_UN_RM_TYPE_S____FCVT_S_WU;
  rX_bits -> F_UN_TYPE_D____FMV_D_X;
  rX_bits -> F_UN_TYPE_H____FMV_H_X;
  rX_bits -> F_UN_TYPE_S____FMV_W_X;
  rX_bits -> ITYPE;
  rX_bits -> MUL;
  rX_bits -> MUL;
  rX_bits -> MULW;
  rX_bits -> MULW;
  rX_bits -> REM;
  rX_bits -> REM;
  rX_bits -> REMW;
  rX_bits -> REMW;
  rX_bits -> RISCV_BREV8;
  rX_bits -> RISCV_CLMUL;
  rX_bits -> RISCV_CLMUL;
  rX_bits -> RISCV_CLMULH;
  rX_bits -> RISCV_CLMULH;
  rX_bits -> RISCV_CLMULR;
  rX_bits -> RISCV_CLMULR;
  rX_bits -> RISCV_CLZ;
  rX_bits -> RISCV_CLZW;
  rX_bits -> RISCV_CPOP;
  rX_bits -> RISCV_CPOPW;
  rX_bits -> RISCV_CTZ;
  rX_bits -> RISCV_CTZW;
  rX_bits -> RISCV_FMVP_D_X;
  rX_bits -> RISCV_FMVP_D_X;
  rX_bits -> RISCV_JALR;
  rX_bits -> RISCV_ORCB;
  rX_bits -> RISCV_REV8;
  rX_bits -> RISCV_RORI;
  rX_bits -> RISCV_RORIW;
  rX_bits -> RISCV_SLLIUW;
  rX_bits -> RISCV_XPERM4;
  rX_bits -> RISCV_XPERM4;
  rX_bits -> RISCV_XPERM8;
  rX_bits -> RISCV_XPERM8;
  rX_bits -> RTYPE;
  rX_bits -> RTYPE;
  rX_bits -> RTYPEW;
  rX_bits -> RTYPEW;
  rX_bits -> SFENCE_VMA;
  rX_bits -> SFENCE_VMA;
  rX_bits -> SHA256SIG0;
  rX_bits -> SHA256SIG1;
  rX_bits -> SHA256SUM0;
  rX_bits -> SHA256SUM1;
  rX_bits -> SHA512SIG0;
  rX_bits -> SHA512SIG0H;
  rX_bits -> SHA512SIG0H;
  rX_bits -> SHA512SIG0L;
  rX_bits -> SHA512SIG0L;
  rX_bits -> SHA512SIG1;
  rX_bits -> SHA512SIG1H;
  rX_bits -> SHA512SIG1H;
  rX_bits -> SHA512SIG1L;
  rX_bits -> SHA512SIG1L;
  rX_bits -> SHA512SUM0;
  rX_bits -> SHA512SUM0R;
  rX_bits -> SHA512SUM0R;
  rX_bits -> SHA512SUM1;
  rX_bits -> SHA512SUM1R;
  rX_bits -> SHA512SUM1R;
  rX_bits -> SHIFTIOP;
  rX_bits -> SHIFTIWOP;
  rX_bits -> SM3P0;
  rX_bits -> SM3P1;
  rX_bits -> SM4ED;
  rX_bits -> SM4ED;
  rX_bits -> SM4KS;
  rX_bits -> SM4KS;
  rX_bits -> STORE;
  rX_bits -> STORECON;
  rX_bits -> VSETVL;
  rX_bits -> VSETVL;
  rX_bits -> VSETVLI;
  rX_bits -> VXSG;
  rX_bits -> ZBA_RTYPE;
  rX_bits -> ZBA_RTYPE;
  rX_bits -> ZBA_RTYPEUW;
  rX_bits -> ZBA_RTYPEUW;
  rX_bits -> ZBB_EXTOP;
  rX_bits -> ZBB_RTYPE;
  rX_bits -> ZBB_RTYPE;
  rX_bits -> ZBB_RTYPEW;
  rX_bits -> ZBB_RTYPEW;
  rX_bits -> ZBKB_PACKW;
  rX_bits -> ZBKB_PACKW;
  rX_bits -> ZBKB_RTYPE;
  rX_bits -> ZBKB_RTYPE;
  rX_bits -> ZBS_IOP;
  rX_bits -> ZBS_RTYPE;
  rX_bits -> ZBS_RTYPE;
  rX_bits -> ZICOND_RTYPE____RISCV_CZERO_EQZ;
  rX_bits -> ZICOND_RTYPE____RISCV_CZERO_EQZ;
  rX_bits -> ZICOND_RTYPE____RISCV_CZERO_NEZ;
  rX_bits -> ZICOND_RTYPE____RISCV_CZERO_NEZ;
  rX_bits -> ext_data_get_addr;
  rX_bits -> get_scalar;
  rX_bits -> rF_or_X_D;
  rX_bits -> rF_or_X_D;
  rX_bits -> rF_or_X_H;
  rX_bits -> rF_or_X_S;
  handle_trap_extension -> trap_handler;
  process_vsre -> VSRETYPE;
  privLevel_to_bits -> check_CSR_access;
  privLevel_to_bits -> exception_delegatee;
  privLevel_to_bits -> exception_delegatee;
  privLevel_to_bits -> exception_handler;
  privLevel_to_bits -> legalize_mstatus;
  privLevel_to_bits -> trap_handler;
  STORE_FP -> C_FSD;
  STORE_FP -> C_FSDSP;
  STORE_FP -> C_FSW;
  STORE_FP -> C_FSWSP;
  f_is_pos_zero -> fp_class;
  f_is_pos_zero -> fp_max;
  f_is_pos_zero -> fp_max;
  f_is_pos_zero -> fp_min;
  f_is_pos_zero -> fp_min;
  accrue_fflags -> F_BIN_RM_TYPE_D;
  accrue_fflags -> F_BIN_RM_TYPE_H;
  accrue_fflags -> F_BIN_RM_TYPE_S;
  accrue_fflags -> F_BIN_TYPE_D____FEQ_D;
  accrue_fflags -> F_BIN_TYPE_D____FLE_D;
  accrue_fflags -> F_BIN_TYPE_D____FLT_D;
  accrue_fflags -> F_BIN_TYPE_D____FMAX_D;
  accrue_fflags -> F_BIN_TYPE_D____FMIN_D;
  accrue_fflags -> F_BIN_TYPE_H____FEQ_H;
  accrue_fflags -> F_BIN_TYPE_H____FLE_H;
  accrue_fflags -> F_BIN_TYPE_H____FLT_H;
  accrue_fflags -> F_BIN_TYPE_H____FMAX_H;
  accrue_fflags -> F_BIN_TYPE_H____FMIN_H;
  accrue_fflags -> F_BIN_TYPE_S____FEQ_S;
  accrue_fflags -> F_BIN_TYPE_S____FLE_S;
  accrue_fflags -> F_BIN_TYPE_S____FLT_S;
  accrue_fflags -> F_BIN_TYPE_S____FMAX_S;
  accrue_fflags -> F_BIN_TYPE_S____FMIN_S;
  accrue_fflags -> F_MADD_TYPE_D;
  accrue_fflags -> F_MADD_TYPE_H;
  accrue_fflags -> F_MADD_TYPE_S;
  accrue_fflags -> F_UN_RM_TYPE_D____FCVT_D_L;
  accrue_fflags -> F_UN_RM_TYPE_D____FCVT_D_LU;
  accrue_fflags -> F_UN_RM_TYPE_D____FCVT_D_S;
  accrue_fflags -> F_UN_RM_TYPE_D____FCVT_D_W;
  accrue_fflags -> F_UN_RM_TYPE_D____FCVT_D_WU;
  accrue_fflags -> F_UN_RM_TYPE_D____FCVT_LU_D;
  accrue_fflags -> F_UN_RM_TYPE_D____FCVT_L_D;
  accrue_fflags -> F_UN_RM_TYPE_D____FCVT_S_D;
  accrue_fflags -> F_UN_RM_TYPE_D____FCVT_WU_D;
  accrue_fflags -> F_UN_RM_TYPE_D____FCVT_W_D;
  accrue_fflags -> F_UN_RM_TYPE_D____FSQRT_D;
  accrue_fflags -> F_UN_RM_TYPE_H____FCVT_D_H;
  accrue_fflags -> F_UN_RM_TYPE_H____FCVT_H_D;
  accrue_fflags -> F_UN_RM_TYPE_H____FCVT_H_L;
  accrue_fflags -> F_UN_RM_TYPE_H____FCVT_H_LU;
  accrue_fflags -> F_UN_RM_TYPE_H____FCVT_H_S;
  accrue_fflags -> F_UN_RM_TYPE_H____FCVT_H_W;
  accrue_fflags -> F_UN_RM_TYPE_H____FCVT_H_WU;
  accrue_fflags -> F_UN_RM_TYPE_H____FCVT_LU_H;
  accrue_fflags -> F_UN_RM_TYPE_H____FCVT_L_H;
  accrue_fflags -> F_UN_RM_TYPE_H____FCVT_S_H;
  accrue_fflags -> F_UN_RM_TYPE_H____FCVT_WU_H;
  accrue_fflags -> F_UN_RM_TYPE_H____FCVT_W_H;
  accrue_fflags -> F_UN_RM_TYPE_H____FSQRT_H;
  accrue_fflags -> F_UN_RM_TYPE_S____FCVT_LU_S;
  accrue_fflags -> F_UN_RM_TYPE_S____FCVT_L_S;
  accrue_fflags -> F_UN_RM_TYPE_S____FCVT_S_L;
  accrue_fflags -> F_UN_RM_TYPE_S____FCVT_S_LU;
  accrue_fflags -> F_UN_RM_TYPE_S____FCVT_S_W;
  accrue_fflags -> F_UN_RM_TYPE_S____FCVT_S_WU;
  accrue_fflags -> F_UN_RM_TYPE_S____FCVT_WU_S;
  accrue_fflags -> F_UN_RM_TYPE_S____FCVT_W_S;
  accrue_fflags -> F_UN_RM_TYPE_S____FSQRT_S;
  accrue_fflags -> RISCV_FCVTMOD_W_D;
  accrue_fflags -> RISCV_FLEQ_D;
  accrue_fflags -> RISCV_FLEQ_H;
  accrue_fflags -> RISCV_FLEQ_S;
  accrue_fflags -> RISCV_FLTQ_D;
  accrue_fflags -> RISCV_FLTQ_H;
  accrue_fflags -> RISCV_FLTQ_S;
  accrue_fflags -> RISCV_FMAXM_D;
  accrue_fflags -> RISCV_FMAXM_H;
  accrue_fflags -> RISCV_FMAXM_S;
  accrue_fflags -> RISCV_FMINM_D;
  accrue_fflags -> RISCV_FMINM_H;
  accrue_fflags -> RISCV_FMINM_S;
  accrue_fflags -> RISCV_FROUNDNX_D;
  accrue_fflags -> RISCV_FROUNDNX_H;
  accrue_fflags -> RISCV_FROUNDNX_S;
  accrue_fflags -> RISCV_FROUND_D;
  accrue_fflags -> RISCV_FROUND_H;
  accrue_fflags -> RISCV_FROUND_S;
  accrue_fflags -> VFNUNARY0;
  accrue_fflags -> VFUNARY0;
  accrue_fflags -> VFUNARY1;
  accrue_fflags -> VFWUNARY0;
  accrue_fflags -> fp_add;
  accrue_fflags -> fp_div;
  accrue_fflags -> fp_eq;
  accrue_fflags -> fp_ge;
  accrue_fflags -> fp_gt;
  accrue_fflags -> fp_le;
  accrue_fflags -> fp_lt;
  accrue_fflags -> fp_max;
  accrue_fflags -> fp_min;
  accrue_fflags -> fp_mul;
  accrue_fflags -> fp_muladd;
  accrue_fflags -> fp_mulsub;
  accrue_fflags -> fp_nmuladd;
  accrue_fflags -> fp_nmulsub;
  accrue_fflags -> fp_sub;
  accrue_fflags -> fp_widen;
  translateAddr -> AMO;
  translateAddr -> LOAD;
  translateAddr -> LOADRES;
  translateAddr -> LOAD_FP;
  translateAddr -> STORE;
  translateAddr -> STORECON;
  translateAddr -> STORE_FP;
  translateAddr -> process_vlre;
  translateAddr -> process_vlseg;
  translateAddr -> process_vlsegff;
  translateAddr -> process_vlsseg;
  translateAddr -> process_vlxseg;
  translateAddr -> process_vm;
  translateAddr -> process_vsre;
  translateAddr -> process_vsseg;
  translateAddr -> process_vssseg;
  translateAddr -> process_vsxseg;
  pmpMatchEntry -> pmpCheck;
  htif_load -> mmio_read;
  bit_str -> clint_store;
  calculate_new_vl -> VSETIVLI;
  calculate_new_vl -> VSETVL;
  calculate_new_vl -> VSETVLI;
  check_Counteren -> check_CSR;
  dzFlag -> riscv_f16Recip7;
  dzFlag -> riscv_f16Rsqrte7;
  dzFlag -> riscv_f32Recip7;
  dzFlag -> riscv_f32Rsqrte7;
  dzFlag -> riscv_f64Recip7;
  dzFlag -> riscv_f64Rsqrte7;
  f_is_pos_zero_D -> F_BIN_TYPE_D____FMAX_D;
  f_is_pos_zero_D -> F_BIN_TYPE_D____FMAX_D;
  f_is_pos_zero_D -> F_BIN_TYPE_D____FMIN_D;
  f_is_pos_zero_D -> F_BIN_TYPE_D____FMIN_D;
  f_is_pos_zero_D -> F_UN_TYPE_D____FCLASS_D;
  f_is_pos_zero_D -> RISCV_FMAXM_D;
  f_is_pos_zero_D -> RISCV_FMAXM_D;
  f_is_pos_zero_D -> RISCV_FMINM_D;
  f_is_pos_zero_D -> RISCV_FMINM_D;
  f_is_pos_zero_D -> f_is_pos_zero;
  f_is_pos_zero_D -> fle_D;
  f_is_pos_zero_D -> fle_D;
  to_bits -> DIV;
  to_bits -> DIVW;
  to_bits -> MUL;
  to_bits -> MULW;
  to_bits -> MVVTYPE;
  to_bits -> MVVTYPE;
  to_bits -> MVVTYPE;
  to_bits -> MVXTYPE;
  to_bits -> MVXTYPE;
  to_bits -> MVXTYPE;
  to_bits -> REM;
  to_bits -> REMW;
  to_bits -> RISCV_CLZ;
  to_bits -> RISCV_CLZW;
  to_bits -> RISCV_CPOP;
  to_bits -> RISCV_CPOPW;
  to_bits -> RISCV_CTZ;
  to_bits -> RISCV_CTZW;
  to_bits -> RIVVTYPE;
  to_bits -> RMVVTYPE;
  to_bits -> VCPOP_M;
  to_bits -> VFIRST_M;
  to_bits -> VID_V;
  to_bits -> VIMSTYPE;
  to_bits -> VIOTA_M;
  to_bits -> VSETVL;
  to_bits -> VSETVLI;
  to_bits -> VVMSTYPE;
  to_bits -> VVTYPE;
  to_bits -> VVTYPE;
  to_bits -> VXMSTYPE;
  to_bits -> VXTYPE;
  to_bits -> VXTYPE;
  to_bits -> WMVVTYPE;
  to_bits -> WMVXTYPE;
  to_bits -> WVTYPE;
  to_bits -> WVVTYPE;
  to_bits -> WVXTYPE;
  to_bits -> WXTYPE;
  to_bits -> ZBB_RTYPE;
  to_bits -> calculate_new_vl;
  to_bits -> calculate_new_vl;
  to_bits -> calculate_new_vl;
  to_bits -> getbyte;
  to_bits -> plat_htif_tohost;
  to_bits -> pmpCheck;
  to_bits -> process_vlre;
  to_bits -> process_vlre;
  to_bits -> process_vlre;
  to_bits -> process_vlre;
  to_bits -> process_vlseg;
  to_bits -> process_vlseg;
  to_bits -> process_vlseg;
  to_bits -> process_vlsegff;
  to_bits -> process_vlsegff;
  to_bits -> process_vlsegff;
  to_bits -> process_vlsseg;
  to_bits -> process_vlsseg;
  to_bits -> process_vlsseg;
  to_bits -> process_vlxseg;
  to_bits -> process_vlxseg;
  to_bits -> process_vlxseg;
  to_bits -> process_vm;
  to_bits -> process_vm;
  to_bits -> process_vsre;
  to_bits -> process_vsre;
  to_bits -> process_vsre;
  to_bits -> process_vsre;
  to_bits -> process_vsseg;
  to_bits -> process_vsseg;
  to_bits -> process_vsseg;
  to_bits -> process_vssseg;
  to_bits -> process_vssseg;
  to_bits -> process_vssseg;
  to_bits -> process_vsxseg;
  to_bits -> process_vsxseg;
  to_bits -> process_vsxseg;
  to_bits -> read_single_element;
  to_bits -> read_vreg;
  to_bits -> read_vreg_seg;
  to_bits -> recip7;
  to_bits -> recip7;
  to_bits -> recip7;
  to_bits -> rotate_bits_left;
  to_bits -> rotate_bits_right;
  to_bits -> rsqrt7;
  to_bits -> rsqrt7;
  to_bits -> rsqrt7;
  to_bits -> write_single_element;
  to_bits -> write_vreg;
  is_valid_vAddr -> translateAddr;
  is_valid_vAddr -> translateAddr;
  riscv_f64ToF16 -> F_UN_RM_TYPE_H____FCVT_H_D;
  wF -> wF_bits;
  satp_to_asid -> translateAddr;
  f_is_NaN_H -> F_BIN_TYPE_H____FMAX_H;
  f_is_NaN_H -> F_BIN_TYPE_H____FMAX_H;
  f_is_NaN_H -> F_BIN_TYPE_H____FMIN_H;
  f_is_NaN_H -> F_BIN_TYPE_H____FMIN_H;
  f_is_NaN_H -> RISCV_FMAXM_H;
  f_is_NaN_H -> RISCV_FMAXM_H;
  f_is_NaN_H -> RISCV_FMINM_H;
  f_is_NaN_H -> RISCV_FMINM_H;
  f_is_NaN_H -> f_is_NaN;
  f_is_NaN_H -> fle_H;
  f_is_NaN_H -> fle_H;
  fregval_from_freg -> rF;
  extStatus_to_bits -> dirty_fd_context;
  extStatus_to_bits -> dirty_v_context;
  extStatus_to_bits -> legalize_mstatus;
  riscv_f16Add -> F_BIN_RM_TYPE_H;
  riscv_f16Add -> fp_add;
  LOAD_FP -> C_FLD;
  LOAD_FP -> C_FLDSP;
  LOAD_FP -> C_FLW;
  LOAD_FP -> C_FLWSP;
  set_mtvec -> writeCSR;
  f_is_pos_subnorm_S -> F_UN_TYPE_S____FCLASS_S;
  f_is_pos_subnorm_S -> f_is_pos_subnorm;
  sign_extend -> ADDIW;
  sign_extend -> ADDIW;
  sign_extend -> AES32DSI;
  sign_extend -> AES32DSMI;
  sign_extend -> AES32ESI;
  sign_extend -> AES32ESMI;
  sign_extend -> AMO;
  sign_extend -> AMO;
  sign_extend -> BTYPE;
  sign_extend -> C_ADDI;
  sign_extend -> C_ADDI16SP;
  sign_extend -> C_ADDIW;
  sign_extend -> C_ANDI;
  sign_extend -> C_BEQZ;
  sign_extend -> C_BNEZ;
  sign_extend -> C_J;
  sign_extend -> C_JAL;
  sign_extend -> C_LI;
  sign_extend -> C_LUI;
  sign_extend -> DIVW;
  sign_extend -> F_UN_RM_TYPE_D____FCVT_LU_D;
  sign_extend -> F_UN_RM_TYPE_D____FCVT_L_D;
  sign_extend -> F_UN_RM_TYPE_D____FCVT_WU_D;
  sign_extend -> F_UN_RM_TYPE_D____FCVT_W_D;
  sign_extend -> F_UN_RM_TYPE_H____FCVT_LU_H;
  sign_extend -> F_UN_RM_TYPE_H____FCVT_L_H;
  sign_extend -> F_UN_RM_TYPE_H____FCVT_WU_H;
  sign_extend -> F_UN_RM_TYPE_H____FCVT_W_H;
  sign_extend -> F_UN_RM_TYPE_S____FCVT_LU_S;
  sign_extend -> F_UN_RM_TYPE_S____FCVT_L_S;
  sign_extend -> F_UN_RM_TYPE_S____FCVT_WU_S;
  sign_extend -> F_UN_RM_TYPE_S____FCVT_W_S;
  sign_extend -> F_UN_TYPE_D____FMV_X_D;
  sign_extend -> F_UN_TYPE_H____FMV_X_H;
  sign_extend -> F_UN_TYPE_S____FMV_X_W;
  sign_extend -> ITYPE;
  sign_extend -> LOAD;
  sign_extend -> LOADRES;
  sign_extend -> LOAD_FP;
  sign_extend -> MASKTYPEI;
  sign_extend -> MOVETYPEI;
  sign_extend -> MULW;
  sign_extend -> MVVTYPE;
  sign_extend -> MVXTYPE;
  sign_extend -> MVXTYPE;
  sign_extend -> NISTYPE;
  sign_extend -> NISTYPE;
  sign_extend -> NITYPE;
  sign_extend -> NITYPE;
  sign_extend -> NVSTYPE;
  sign_extend -> NVTYPE;
  sign_extend -> NXSTYPE;
  sign_extend -> NXTYPE;
  sign_extend -> REMW;
  sign_extend -> RISCV_FCVTMOD_W_D;
  sign_extend -> RISCV_FMVH_X_D;
  sign_extend -> RISCV_JAL;
  sign_extend -> RISCV_JALR;
  sign_extend -> RISCV_RORIW;
  sign_extend -> RTYPEW;
  sign_extend -> SHA256SIG0;
  sign_extend -> SHA256SIG1;
  sign_extend -> SHA256SUM0;
  sign_extend -> SHA256SUM1;
  sign_extend -> SHA512SIG0H;
  sign_extend -> SHA512SIG0L;
  sign_extend -> SHA512SIG1H;
  sign_extend -> SHA512SIG1L;
  sign_extend -> SHA512SUM0R;
  sign_extend -> SHA512SUM1R;
  sign_extend -> SHIFTIWOP;
  sign_extend -> SM3P0;
  sign_extend -> SM3P1;
  sign_extend -> SM4ED;
  sign_extend -> SM4KS;
  sign_extend -> STORE;
  sign_extend -> STORE_FP;
  sign_extend -> UTYPE;
  sign_extend -> VEXT2TYPE;
  sign_extend -> VEXT4TYPE;
  sign_extend -> VEXT8TYPE;
  sign_extend -> VFUNARY0;
  sign_extend -> VFWUNARY0;
  sign_extend -> VICMPTYPE;
  sign_extend -> VIMCTYPE;
  sign_extend -> VIMSTYPE;
  sign_extend -> VIMTYPE;
  sign_extend -> VITYPE;
  sign_extend -> VITYPE;
  sign_extend -> VITYPE;
  sign_extend -> VMVXS;
  sign_extend -> VVTYPE;
  sign_extend -> VXTYPE;
  sign_extend -> VXTYPE;
  sign_extend -> ZBB_EXTOP;
  sign_extend -> ZBB_RTYPEW;
  sign_extend -> ZBKB_PACKW;
  sign_extend -> extend_value;
  sign_extend -> get_scalar;
  sign_extend -> is_valid_vAddr;
  sign_extend -> legalize_xepc;
  sign_extend -> shift_right_arith32;
  sign_extend -> shift_right_arith64;
  sign_extend -> wF_or_X_D;
  sign_extend -> wF_or_X_H;
  sign_extend -> wF_or_X_S;
  count_leadingzeros -> recip7;
  count_leadingzeros -> rsqrt7;
  f_is_neg_inf_S -> F_UN_TYPE_S____FCLASS_S;
  f_is_neg_inf_S -> f_is_neg_inf;
  set_stvec -> writeCSR;
  legalize_sip -> writeCSR;
  pmpMatchAddr -> pmpMatchEntry;
  csrPriv -> check_CSR;
  process_rfvv_single -> RFVVTYPE;
  riscv_f32ToUi32 -> F_UN_RM_TYPE_S____FCVT_WU_S;
  riscv_f32ToUi32 -> VFUNARY0;
  riscv_f32ToUi32 -> VFUNARY0;
  riscv_f32ToUi32 -> riscv_f32ToUi16;
  add_to_TLB -> translate_TLB_miss;
  add_to_TLB -> translate_TLB_miss;
  nan_box_S -> F_UN_TYPE_S____FMV_W_X;
  nan_box_S -> process_fload32;
  nan_box_S -> wF_S;
  signed_saturation -> NITYPE;
  signed_saturation -> NVTYPE;
  signed_saturation -> NXTYPE;
  signed_saturation -> VITYPE;
  signed_saturation -> VVTYPE;
  signed_saturation -> VXTYPE;
  f_is_SNaN_S -> F_UN_TYPE_S____FCLASS_S;
  f_is_SNaN_S -> f_is_SNaN;
  f_is_SNaN_S -> fle_S;
  f_is_SNaN_S -> fle_S;
  within_mmio_writable -> checked_mem_write;
  translate -> translateAddr;
  riscv_f32Rsqrte7 -> VFUNARY1;
  read_vreg_seg -> process_vlseg;
  read_vreg_seg -> process_vlsegff;
  read_vreg_seg -> process_vlsseg;
  read_vreg_seg -> process_vlxseg;
  read_vreg_seg -> process_vsseg;
  read_vreg_seg -> process_vssseg;
  read_vreg_seg -> process_vsxseg;
  wF_or_X_H -> F_BIN_RM_TYPE_H;
  wF_or_X_H -> F_BIN_TYPE_H____FMAX_H;
  wF_or_X_H -> F_BIN_TYPE_H____FMIN_H;
  wF_or_X_H -> F_BIN_TYPE_H____FSGNJN_H;
  wF_or_X_H -> F_BIN_TYPE_H____FSGNJX_H;
  wF_or_X_H -> F_BIN_TYPE_H____FSGNJ_H;
  wF_or_X_H -> F_MADD_TYPE_H;
  wF_or_X_H -> F_UN_RM_TYPE_H____FCVT_H_D;
  wF_or_X_H -> F_UN_RM_TYPE_H____FCVT_H_L;
  wF_or_X_H -> F_UN_RM_TYPE_H____FCVT_H_LU;
  wF_or_X_H -> F_UN_RM_TYPE_H____FCVT_H_S;
  wF_or_X_H -> F_UN_RM_TYPE_H____FCVT_H_W;
  wF_or_X_H -> F_UN_RM_TYPE_H____FCVT_H_WU;
  wF_or_X_H -> F_UN_RM_TYPE_H____FSQRT_H;
  pmpAddrMatchType_of_bits -> pmpAddrRange;
  pmpAddrMatchType_of_bits -> pmpTORLocked;
  pmpAddrMatchType_of_bits -> pmpWriteCfg;
  fp_lt -> FVFMTYPE;
  fp_lt -> FVVMTYPE;
  log2 -> VMVRTYPE;
  log2 -> get_shift_amount;
  f_is_neg_norm_S -> F_UN_TYPE_S____FCLASS_S;
  f_is_neg_norm_S -> f_is_neg_norm;
  not -> AMO;
  not -> BTYPE;
  not -> CSR;
  not -> FWVFMATYPE;
  not -> FWVFTYPE;
  not -> FWVTYPE;
  not -> FWVVMATYPE;
  not -> FWVVTYPE;
  not -> LOADRES;
  not -> MMTYPE;
  not -> MRET;
  not -> NISTYPE;
  not -> NITYPE;
  not -> NVSTYPE;
  not -> NVTYPE;
  not -> NXSTYPE;
  not -> NXTYPE;
  not -> RISCV_CLZ;
  not -> RISCV_CLZW;
  not -> RISCV_CTZ;
  not -> RISCV_CTZW;
  not -> RISCV_JAL;
  not -> RISCV_JALR;
  not -> SRET;
  not -> SRET;
  not -> STORECON;
  not -> STORECON;
  not -> URET;
  not -> URET;
  not -> URET;
  not -> VCPOP_M;
  not -> VEXT2TYPE;
  not -> VEXT4TYPE;
  not -> VEXT8TYPE;
  not -> VFIRST_M;
  not -> VFNUNARY0;
  not -> VFWUNARY0;
  not -> VIOTA_M;
  not -> VLRETYPE;
  not -> VMSBF_M;
  not -> VMSIF_M;
  not -> VMSOF_M;
  not -> VMSOF_M;
  not -> VMVRTYPE;
  not -> VSRETYPE;
  not -> WMVVTYPE;
  not -> WMVXTYPE;
  not -> WVTYPE;
  not -> WVVTYPE;
  not -> WVXTYPE;
  not -> check_CSR_access;
  not -> check_Counteren;
  not -> check_TVM_SATP;
  not -> check_misaligned;
  not -> check_misaligned;
  not -> check_seed_CSR;
  not -> check_seed_CSR;
  not -> flush_TLB_Entry;
  not -> fp_ge;
  not -> fp_gt;
  not -> get_fixed_rounding_incr;
  not -> illegal_fp_normal;
  not -> illegal_fp_normal;
  not -> illegal_fp_reduction;
  not -> illegal_fp_reduction;
  not -> illegal_fp_reduction;
  not -> illegal_fp_reduction_widen;
  not -> illegal_fp_reduction_widen;
  not -> illegal_fp_reduction_widen;
  not -> illegal_fp_variable_width;
  not -> illegal_fp_variable_width;
  not -> illegal_fp_vd_masked;
  not -> illegal_fp_vd_masked;
  not -> illegal_fp_vd_unmasked;
  not -> illegal_fp_vd_unmasked;
  not -> illegal_indexed_load;
  not -> illegal_indexed_load;
  not -> illegal_indexed_store;
  not -> illegal_indexed_store;
  not -> illegal_load;
  not -> illegal_load;
  not -> illegal_normal;
  not -> illegal_normal;
  not -> illegal_reduction;
  not -> illegal_reduction;
  not -> illegal_reduction_widen;
  not -> illegal_reduction_widen;
  not -> illegal_reduction_widen;
  not -> illegal_store;
  not -> illegal_store;
  not -> illegal_variable_width;
  not -> illegal_variable_width;
  not -> illegal_vd_masked;
  not -> illegal_vd_unmasked;
  not -> init_masked_result;
  not -> init_masked_result_cmp;
  not -> init_masked_source;
  not -> legalize_misa;
  not -> legalize_mstatus;
  not -> legalize_mstatus;
  not -> mem_read_priv_meta;
  not -> mem_write_ea;
  not -> mem_write_value_priv_meta;
  not -> process_vlsegff;
  not -> pt_walk;
  not -> rF_D;
  not -> rF_H;
  not -> rF_S;
  not -> translateAddr;
  not -> translate_TLB_hit;
  not -> translate_TLB_miss;
  not -> valid_fp_op;
  not -> wF_D;
  not -> wF_H;
  not -> wF_S;
  extend_value -> LOAD;
  ext_check_CSR_fail -> CSR;
  lookup_TLB -> translate;
  bool_to_bit -> write_vmask;
  wF_or_X_S -> F_BIN_RM_TYPE_S;
  wF_or_X_S -> F_BIN_TYPE_S____FMAX_S;
  wF_or_X_S -> F_BIN_TYPE_S____FMIN_S;
  wF_or_X_S -> F_BIN_TYPE_S____FSGNJN_S;
  wF_or_X_S -> F_BIN_TYPE_S____FSGNJX_S;
  wF_or_X_S -> F_BIN_TYPE_S____FSGNJ_S;
  wF_or_X_S -> F_MADD_TYPE_S;
  wF_or_X_S -> F_UN_RM_TYPE_D____FCVT_S_D;
  wF_or_X_S -> F_UN_RM_TYPE_H____FCVT_S_H;
  wF_or_X_S -> F_UN_RM_TYPE_S____FCVT_S_L;
  wF_or_X_S -> F_UN_RM_TYPE_S____FCVT_S_LU;
  wF_or_X_S -> F_UN_RM_TYPE_S____FCVT_S_W;
  wF_or_X_S -> F_UN_RM_TYPE_S____FCVT_S_WU;
  wF_or_X_S -> F_UN_RM_TYPE_S____FSQRT_S;
  illegal_load -> VLSEGFFTYPE;
  illegal_load -> VLSEGTYPE;
  illegal_load -> VLSSEGTYPE;
  fp_mulsub -> FVFMATYPE;
  fp_mulsub -> FVVMATYPE;
  fp_mulsub -> FWVFMATYPE;
  fp_mulsub -> FWVVMATYPE;
  f_is_QNaN_D -> F_UN_TYPE_D____FCLASS_D;
  f_is_QNaN_D -> f_is_QNaN;
  riscv_f16Eq -> F_BIN_TYPE_H____FEQ_H;
  riscv_f16Eq -> fp_eq;
  f_is_neg_inf_D -> F_UN_TYPE_D____FCLASS_D;
  f_is_neg_inf_D -> f_is_neg_inf;
  get_start_element -> MASKTYPEI;
  get_start_element -> MASKTYPEV;
  get_start_element -> MASKTYPEX;
  get_start_element -> MVVCOMPRESS;
  get_start_element -> VFMERGE;
  get_start_element -> VMVRTYPE;
  get_start_element -> init_masked_result;
  get_start_element -> init_masked_result_carry;
  get_start_element -> init_masked_result_cmp;
  get_start_element -> init_masked_source;
  get_start_element -> process_vlre;
  get_start_element -> process_vm;
  get_start_element -> process_vsre;
  ones -> PPNs_of_PTE;
  ones -> VSETVL;
  ones -> VSETVLI;
  ones -> add_to_TLB;
  ones -> f_is_NaN_D;
  ones -> f_is_NaN_H;
  ones -> f_is_NaN_S;
  ones -> f_is_QNaN_D;
  ones -> f_is_QNaN_H;
  ones -> f_is_QNaN_S;
  ones -> f_is_SNaN_D;
  ones -> f_is_SNaN_H;
  ones -> f_is_SNaN_S;
  ones -> f_is_neg_inf_D;
  ones -> f_is_neg_inf_H;
  ones -> f_is_neg_inf_S;
  ones -> f_is_neg_norm_D;
  ones -> f_is_neg_norm_H;
  ones -> f_is_neg_norm_S;
  ones -> f_is_neg_zero_D;
  ones -> f_is_neg_zero_H;
  ones -> f_is_neg_zero_S;
  ones -> f_is_pos_inf_D;
  ones -> f_is_pos_inf_H;
  ones -> f_is_pos_inf_S;
  ones -> f_is_pos_norm_D;
  ones -> f_is_pos_norm_H;
  ones -> f_is_pos_norm_S;
  ones -> fcvtmod_helper;
  ones -> msbs_of_PTE;
  ones -> pmpReadAddrReg;
  ones -> pt_walk;
  ones -> recip7;
  ones -> recip7;
  ones -> recip7;
  ones -> riscv_f16ToI16;
  ones -> riscv_f16ToI8;
  ones -> riscv_f16ToUi16;
  ones -> riscv_f16ToUi8;
  ones -> riscv_f32ToI16;
  ones -> riscv_f32ToUi16;
  ones -> signed_saturation;
  ones -> unsigned_saturation;
  ones -> vpn_j_of_va;
  ones -> vpns_of_va;
  pmpWriteAddr -> pmpWriteAddrReg;
  valid_reg_overlap -> FWVFMATYPE;
  valid_reg_overlap -> FWVFTYPE;
  valid_reg_overlap -> FWVTYPE;
  valid_reg_overlap -> FWVVMATYPE;
  valid_reg_overlap -> FWVVMATYPE;
  valid_reg_overlap -> FWVVTYPE;
  valid_reg_overlap -> FWVVTYPE;
  valid_reg_overlap -> NISTYPE;
  valid_reg_overlap -> NITYPE;
  valid_reg_overlap -> NVSTYPE;
  valid_reg_overlap -> NVTYPE;
  valid_reg_overlap -> NXSTYPE;
  valid_reg_overlap -> NXTYPE;
  valid_reg_overlap -> VEXT2TYPE;
  valid_reg_overlap -> VEXT4TYPE;
  valid_reg_overlap -> VEXT8TYPE;
  valid_reg_overlap -> VFNUNARY0;
  valid_reg_overlap -> VFWUNARY0;
  valid_reg_overlap -> WMVVTYPE;
  valid_reg_overlap -> WMVVTYPE;
  valid_reg_overlap -> WMVXTYPE;
  valid_reg_overlap -> WVTYPE;
  valid_reg_overlap -> WVVTYPE;
  valid_reg_overlap -> WVVTYPE;
  valid_reg_overlap -> WVXTYPE;
  illegal_fp_reduction -> process_rfvv_single;
  MUL -> C_MUL;
  regval_into_reg -> wX;
  riscv_i32ToF32 -> F_UN_RM_TYPE_S____FCVT_S_W;
  riscv_i32ToF32 -> VFUNARY0;
  riscv_i32ToF32 -> VFWUNARY0;
  fp_eq -> FVFMTYPE;
  fp_eq -> FVVMTYPE;
  decode_agtype -> get_vtype_vma;
  decode_agtype -> get_vtype_vta;
  riscv_f64Sub -> F_BIN_RM_TYPE_D;
  riscv_f64Sub -> fp_sub;
  pmpCheck -> phys_access_check;
  BTYPE -> C_BEQZ;
  BTYPE -> C_BNEZ;
  illegal_reduction_widen -> RIVVTYPE;
  LOAD -> C_LBU;
  LOAD -> C_LD;
  LOAD -> C_LDSP;
  LOAD -> C_LH;
  LOAD -> C_LHU;
  LOAD -> C_LW;
  LOAD -> C_LWSP;
  checked_mem_read -> mem_read_priv_meta;
  ext_handle_data_check_error -> AMO;
  ext_handle_data_check_error -> LOAD;
  ext_handle_data_check_error -> LOADRES;
  ext_handle_data_check_error -> LOAD_FP;
  ext_handle_data_check_error -> STORE;
  ext_handle_data_check_error -> STORECON;
  ext_handle_data_check_error -> STORE_FP;
  ext_handle_data_check_error -> process_vlre;
  ext_handle_data_check_error -> process_vlseg;
  ext_handle_data_check_error -> process_vlsegff;
  ext_handle_data_check_error -> process_vlsseg;
  ext_handle_data_check_error -> process_vlxseg;
  ext_handle_data_check_error -> process_vm;
  ext_handle_data_check_error -> process_vsre;
  ext_handle_data_check_error -> process_vsseg;
  ext_handle_data_check_error -> process_vssseg;
  ext_handle_data_check_error -> process_vsxseg;
  xt2 -> aes_mixcolumn_fwd;
  xt2 -> aes_mixcolumn_fwd;
  xt2 -> aes_mixcolumn_fwd;
  xt2 -> aes_mixcolumn_fwd;
  xt2 -> gfmul;
  xt2 -> xt3;
  FRegStr -> wF;
  ext_data_get_addr -> AMO;
  ext_data_get_addr -> LOAD;
  ext_data_get_addr -> LOADRES;
  ext_data_get_addr -> LOAD_FP;
  ext_data_get_addr -> STORE;
  ext_data_get_addr -> STORECON;
  ext_data_get_addr -> STORE_FP;
  ext_data_get_addr -> process_vlre;
  ext_data_get_addr -> process_vlseg;
  ext_data_get_addr -> process_vlsegff;
  ext_data_get_addr -> process_vlsseg;
  ext_data_get_addr -> process_vlxseg;
  ext_data_get_addr -> process_vm;
  ext_data_get_addr -> process_vsre;
  ext_data_get_addr -> process_vsseg;
  ext_data_get_addr -> process_vssseg;
  ext_data_get_addr -> process_vsxseg;
  cur_Architecture -> writeCSR;
  get_sew_pow -> VISG;
  get_sew_pow -> VLOXSEGTYPE;
  get_sew_pow -> VLSEGFFTYPE;
  get_sew_pow -> VLSEGTYPE;
  get_sew_pow -> VLSSEGTYPE;
  get_sew_pow -> VLUXSEGTYPE;
  get_sew_pow -> VSETIVLI;
  get_sew_pow -> VSETVL;
  get_sew_pow -> VSETVLI;
  get_sew_pow -> VSOXSEGTYPE;
  get_sew_pow -> VSSEGTYPE;
  get_sew_pow -> VSSSEGTYPE;
  get_sew_pow -> VSUXSEGTYPE;
  get_sew_pow -> VVTYPE;
  get_sew_pow -> VXSG;
  get_sew_pow -> get_sew;
  get_sew_pow -> get_sew_bytes;
  get_sew_pow -> get_start_element;
  illegal_fp_vd_unmasked -> FVFMTYPE;
  illegal_fp_vd_unmasked -> FVVMTYPE;
  illegal_fp_vd_unmasked -> VFMV;
  illegal_fp_vd_unmasked -> VFMVFS;
  illegal_fp_vd_unmasked -> VFMVSF;
  riscv_ui64ToF32 -> F_UN_RM_TYPE_S____FCVT_S_LU;
  riscv_ui64ToF32 -> VFNUNARY0;
  illegal_vd_masked -> MASKTYPEI;
  illegal_vd_masked -> MASKTYPEV;
  illegal_vd_masked -> MASKTYPEX;
  illegal_vd_masked -> VIMSTYPE;
  illegal_vd_masked -> VVMSTYPE;
  illegal_vd_masked -> VXMSTYPE;
  nan_unbox_H -> rF_H;
  riscv_f16Recip7 -> VFUNARY1;
  within_phys_mem -> checked_mem_read;
  within_phys_mem -> checked_mem_write;
  plat_htif_tohost -> htif_load;
  plat_htif_tohost -> htif_store;
  plat_htif_tohost -> within_htif_readable;
  plat_htif_tohost -> within_htif_writable;
  translationException -> translateAddr;
  translationException -> translateAddr;
  UTYPE -> C_LUI;
  mem_read_priv_meta -> mem_read_priv;
  write_pte -> translate_TLB_hit;
  write_pte -> translate_TLB_miss;
  pmpCheckPerms -> pmpMatchEntry;
  shift_right_arith64 -> RTYPE;
  shift_right_arith64 -> SHIFTIOP;
  accessType_to_str -> phys_mem_read;
  legalize_senvcfg -> writeCSR;
  f_is_neg_zero_H -> F_BIN_TYPE_H____FMAX_H;
  f_is_neg_zero_H -> F_BIN_TYPE_H____FMAX_H;
  f_is_neg_zero_H -> F_BIN_TYPE_H____FMIN_H;
  f_is_neg_zero_H -> F_BIN_TYPE_H____FMIN_H;
  f_is_neg_zero_H -> F_UN_TYPE_H____FCLASS_H;
  f_is_neg_zero_H -> RISCV_FMAXM_H;
  f_is_neg_zero_H -> RISCV_FMAXM_H;
  f_is_neg_zero_H -> RISCV_FMINM_H;
  f_is_neg_zero_H -> RISCV_FMINM_H;
  f_is_neg_zero_H -> f_is_neg_zero;
  f_is_neg_zero_H -> fle_H;
  f_is_neg_zero_H -> fle_H;
  valid_vtype -> illegal_fp_normal;
  valid_vtype -> illegal_fp_reduction;
  valid_vtype -> illegal_fp_reduction_widen;
  valid_vtype -> illegal_fp_variable_width;
  valid_vtype -> illegal_fp_vd_masked;
  valid_vtype -> illegal_fp_vd_unmasked;
  valid_vtype -> illegal_indexed_load;
  valid_vtype -> illegal_indexed_store;
  valid_vtype -> illegal_load;
  valid_vtype -> illegal_normal;
  valid_vtype -> illegal_reduction;
  valid_vtype -> illegal_reduction_widen;
  valid_vtype -> illegal_store;
  valid_vtype -> illegal_variable_width;
  valid_vtype -> illegal_vd_masked;
  valid_vtype -> illegal_vd_unmasked;
  dirty_fd_context_if_present -> accrue_fflags;
  f_is_SNaN_D -> F_UN_TYPE_D____FCLASS_D;
  f_is_SNaN_D -> f_is_SNaN;
  f_is_SNaN_D -> fle_D;
  f_is_SNaN_D -> fle_D;
  riscv_f32Sub -> F_BIN_RM_TYPE_S;
  riscv_f32Sub -> fp_sub;
  is_fiom_active -> FENCE;
  riscv_f16ToUi8 -> VFNUNARY0;
  riscv_f16ToUi8 -> VFNUNARY0;
  get_vtype_vma -> init_masked_result;
  get_vtype_vma -> init_masked_result_cmp;
  f_is_NaN_S -> F_BIN_TYPE_S____FMAX_S;
  f_is_NaN_S -> F_BIN_TYPE_S____FMAX_S;
  f_is_NaN_S -> F_BIN_TYPE_S____FMIN_S;
  f_is_NaN_S -> F_BIN_TYPE_S____FMIN_S;
  f_is_NaN_S -> RISCV_FMAXM_S;
  f_is_NaN_S -> RISCV_FMAXM_S;
  f_is_NaN_S -> RISCV_FMINM_S;
  f_is_NaN_S -> RISCV_FMINM_S;
  f_is_NaN_S -> f_is_NaN;
  f_is_NaN_S -> fle_S;
  f_is_NaN_S -> fle_S;
  aes_mixcolumn_fwd -> AES64ESM;
  process_fload64 -> LOAD_FP;
  riscv_f32ToUi16 -> VFNUNARY0;
  riscv_f32ToUi16 -> VFNUNARY0;
  have_privLevel -> legalize_mstatus;
  f_is_SNaN_H -> F_UN_TYPE_H____FCLASS_H;
  f_is_SNaN_H -> f_is_SNaN;
  f_is_SNaN_H -> fle_H;
  f_is_SNaN_H -> fle_H;
  f_is_neg_zero -> fp_class;
  f_is_neg_zero -> fp_max;
  f_is_neg_zero -> fp_max;
  f_is_neg_zero -> fp_min;
  f_is_neg_zero -> fp_min;
  get_end_element -> FVFTYPE;
  get_end_element -> MASKTYPEI;
  get_end_element -> MASKTYPEV;
  get_end_element -> MASKTYPEX;
  get_end_element -> MVVCOMPRESS;
  get_end_element -> MVXTYPE;
  get_end_element -> VFMERGE;
  get_end_element -> init_masked_result;
  get_end_element -> init_masked_result_carry;
  get_end_element -> init_masked_result_cmp;
  get_end_element -> init_masked_source;
  fp_sub -> FVFTYPE;
  fp_sub -> FVFTYPE;
  fp_sub -> FVVTYPE;
  fp_sub -> FWFTYPE;
  fp_sub -> FWVFTYPE;
  fp_sub -> FWVTYPE;
  fp_sub -> FWVVTYPE;
  riscv_f32ToF64 -> F_UN_RM_TYPE_D____FCVT_D_S;
  riscv_f32ToF64 -> VFWUNARY0;
  riscv_f32ToF64 -> fp_widen;
  mem_write_value_priv_meta -> mem_write_value_meta;
  mem_write_value_priv_meta -> mem_write_value_priv;
  lower_mie -> readCSR;
  riscv_f64ToI64 -> F_UN_RM_TYPE_D____FCVT_L_D;
  riscv_f64ToI64 -> VFUNARY0;
  riscv_f64ToI64 -> VFUNARY0;
  legalize_mideleg -> writeCSR;
  MemoryOpResult_add_meta -> checked_mem_read;
  bit_to_bool -> BTYPE;
  bit_to_bool -> RISCV_JAL;
  bit_to_bool -> RISCV_JALR;
  bit_to_bool -> exception_delegatee;
  bit_to_bool -> gfmul;
  bit_to_bool -> read_vmask;
  bit_to_bool -> read_vmask_carry;
  bit_to_bool -> riscv_f16Eq;
  bit_to_bool -> riscv_f16Le;
  bit_to_bool -> riscv_f16Le_quiet;
  bit_to_bool -> riscv_f16Lt;
  bit_to_bool -> riscv_f16Lt_quiet;
  bit_to_bool -> riscv_f32Eq;
  bit_to_bool -> riscv_f32Le;
  bit_to_bool -> riscv_f32Le_quiet;
  bit_to_bool -> riscv_f32Lt;
  bit_to_bool -> riscv_f32Lt_quiet;
  bit_to_bool -> riscv_f64Eq;
  bit_to_bool -> riscv_f64Le;
  bit_to_bool -> riscv_f64Le_quiet;
  bit_to_bool -> riscv_f64Lt;
  bit_to_bool -> riscv_f64Lt_quiet;
  bit_to_bool -> xt2;
  csr_name -> readCSR;
  csr_name -> writeCSR;
  riscv_f16Sub -> F_BIN_RM_TYPE_H;
  riscv_f16Sub -> fp_sub;
  f_is_pos_inf -> fp_class;
  init_masked_result -> FVFMATYPE;
  init_masked_result -> FVFTYPE;
  init_masked_result -> FVVMATYPE;
  init_masked_result -> FVVTYPE;
  init_masked_result -> FWFTYPE;
  init_masked_result -> FWVFMATYPE;
  init_masked_result -> FWVFTYPE;
  init_masked_result -> FWVTYPE;
  init_masked_result -> FWVVMATYPE;
  init_masked_result -> FWVVTYPE;
  init_masked_result -> MOVETYPEI;
  init_masked_result -> MOVETYPEV;
  init_masked_result -> MOVETYPEX;
  init_masked_result -> MVVMATYPE;
  init_masked_result -> MVVTYPE;
  init_masked_result -> MVXMATYPE;
  init_masked_result -> MVXTYPE;
  init_masked_result -> NISTYPE;
  init_masked_result -> NITYPE;
  init_masked_result -> NVSTYPE;
  init_masked_result -> NVTYPE;
  init_masked_result -> NXSTYPE;
  init_masked_result -> NXTYPE;
  init_masked_result -> VEXT2TYPE;
  init_masked_result -> VEXT4TYPE;
  init_masked_result -> VEXT8TYPE;
  init_masked_result -> VFMV;
  init_masked_result -> VFMVSF;
  init_masked_result -> VFNUNARY0;
  init_masked_result -> VFUNARY0;
  init_masked_result -> VFUNARY1;
  init_masked_result -> VFWUNARY0;
  init_masked_result -> VID_V;
  init_masked_result -> VIMSTYPE;
  init_masked_result -> VIOTA_M;
  init_masked_result -> VISG;
  init_masked_result -> VITYPE;
  init_masked_result -> VMVSX;
  init_masked_result -> VVMSTYPE;
  init_masked_result -> VVTYPE;
  init_masked_result -> VXMSTYPE;
  init_masked_result -> VXSG;
  init_masked_result -> VXTYPE;
  init_masked_result -> WMVVTYPE;
  init_masked_result -> WMVXTYPE;
  init_masked_result -> WVTYPE;
  init_masked_result -> WVVTYPE;
  init_masked_result -> WVXTYPE;
  init_masked_result -> WXTYPE;
  init_masked_result -> process_vlseg;
  init_masked_result -> process_vlsegff;
  init_masked_result -> process_vlsseg;
  init_masked_result -> process_vlxseg;
  riscv_f32Sqrt -> F_UN_RM_TYPE_S____FSQRT_S;
  riscv_f32Sqrt -> VFUNARY1;
  riscv_f32Eq -> F_BIN_TYPE_S____FEQ_S;
  riscv_f32Eq -> fp_eq;
  rF_S -> RISCV_FLEQ_S;
  rF_S -> RISCV_FLEQ_S;
  rF_S -> RISCV_FLTQ_S;
  rF_S -> RISCV_FLTQ_S;
  rF_S -> RISCV_FMAXM_S;
  rF_S -> RISCV_FMAXM_S;
  rF_S -> RISCV_FMINM_S;
  rF_S -> RISCV_FMINM_S;
  rF_S -> RISCV_FROUNDNX_S;
  rF_S -> RISCV_FROUND_S;
  rF_S -> get_scalar_fp;
  rF_S -> rF_or_X_S;
  process_rfvv_widen -> RFVVTYPE;
  f_is_QNaN_H -> F_UN_TYPE_H____FCLASS_H;
  f_is_QNaN_H -> f_is_QNaN;
  platform_wfi -> WFI;
  pmpAddrRange -> pmpMatchEntry;
  f_is_pos_inf_S -> F_UN_TYPE_S____FCLASS_S;
  f_is_pos_inf_S -> f_is_pos_inf;
  riscv_i64ToF64 -> F_UN_RM_TYPE_D____FCVT_D_L;
  riscv_i64ToF64 -> VFUNARY0;
  ext_check_CSR -> CSR;
  rvfi_wX -> wX;
  canonical_NaN -> fp_max;
  canonical_NaN -> fp_min;
  writeCSR -> CSR;
  riscv_f32ToI16 -> VFNUNARY0;
  riscv_f32ToI16 -> VFNUNARY0;
  pmpCheckRWX -> pmpCheckPerms;
  write_single_element -> RIVVTYPE;
  write_single_element -> RMVVTYPE;
  write_single_element -> process_rfvv_single;
  write_single_element -> process_rfvv_widen;
  write_single_element -> process_vlre;
  write_single_element -> process_vlseg;
  write_single_element -> process_vlseg;
  write_single_element -> process_vlsegff;
  write_single_element -> process_vlsegff;
  write_single_element -> process_vlsseg;
  write_single_element -> process_vlsseg;
  write_single_element -> process_vlxseg;
  write_single_element -> process_vlxseg;
  write_single_element -> process_vm;
  write_single_element -> process_vm;
  rV_bits -> read_single_vreg;
  rV_bits -> read_vmask;
  rV_bits -> read_vmask_carry;
  rV_bits -> write_vmask;
  f_is_neg_norm_D -> F_UN_TYPE_D____FCLASS_D;
  f_is_neg_norm_D -> f_is_neg_norm;
  f_is_neg_subnorm_D -> F_UN_TYPE_D____FCLASS_D;
  f_is_neg_subnorm_D -> f_is_neg_subnorm;
  legalize_menvcfg -> writeCSR;
  legalize_menvcfg -> writeCSR;
  process_fload16 -> LOAD_FP;
  match_TLB_Entry -> lookup_TLB;
  tval -> trap_handler;
  reverse_bits_in_byte -> RISCV_BREV8;
  riscv_i64ToF32 -> F_UN_RM_TYPE_S____FCVT_S_L;
  riscv_i64ToF32 -> VFNUNARY0;
  ADDIW -> C_ADDIW;
  process_vssseg -> VSSSEGTYPE;
  riscv_f64Recip7 -> VFUNARY1;
  riscv_i64ToF16 -> F_UN_RM_TYPE_H____FCVT_H_L;
  pmpLocked -> pmpCheckPerms;
  pmpLocked -> pmpWriteAddrReg;
  pmpLocked -> pmpWriteCfg;
  get_arch_pc -> UTYPE;
  riscv_f16Sqrt -> F_UN_RM_TYPE_H____FSQRT_H;
  riscv_f16Sqrt -> VFUNARY1;
  trap_handler -> exception_handler;
  fp_mul -> FVFTYPE;
  fp_mul -> FVVTYPE;
  fp_mul -> FWVFTYPE;
  fp_mul -> FWVVTYPE;
  valid_fp_op -> illegal_fp_normal;
  valid_fp_op -> illegal_fp_reduction;
  valid_fp_op -> illegal_fp_reduction_widen;
  valid_fp_op -> illegal_fp_variable_width;
  valid_fp_op -> illegal_fp_vd_masked;
  valid_fp_op -> illegal_fp_vd_unmasked;
  get_mstatus_SXL -> SFENCE_VMA;
  get_mstatus_SXL -> cur_Architecture;
  get_mstatus_SXL -> legalize_mstatus;
  get_mstatus_SXL -> translationMode;
  sm4_sbox -> SM4ED;
  sm4_sbox -> SM4KS;
  read_vreg -> FVFMATYPE;
  read_vreg -> FVFMATYPE;
  read_vreg -> FVFMTYPE;
  read_vreg -> FVFTYPE;
  read_vreg -> FVFTYPE;
  read_vreg -> FVVMATYPE;
  read_vreg -> FVVMATYPE;
  read_vreg -> FVVMATYPE;
  read_vreg -> FVVMTYPE;
  read_vreg -> FVVMTYPE;
  read_vreg -> FVVTYPE;
  read_vreg -> FVVTYPE;
  read_vreg -> FVVTYPE;
  read_vreg -> FWFTYPE;
  read_vreg -> FWFTYPE;
  read_vreg -> FWVFMATYPE;
  read_vreg -> FWVFMATYPE;
  read_vreg -> FWVFTYPE;
  read_vreg -> FWVFTYPE;
  read_vreg -> FWVTYPE;
  read_vreg -> FWVTYPE;
  read_vreg -> FWVTYPE;
  read_vreg -> FWVVMATYPE;
  read_vreg -> FWVVMATYPE;
  read_vreg -> FWVVMATYPE;
  read_vreg -> FWVVTYPE;
  read_vreg -> FWVVTYPE;
  read_vreg -> FWVVTYPE;
  read_vreg -> MASKTYPEI;
  read_vreg -> MASKTYPEI;
  read_vreg -> MASKTYPEV;
  read_vreg -> MASKTYPEV;
  read_vreg -> MASKTYPEV;
  read_vreg -> MASKTYPEX;
  read_vreg -> MASKTYPEX;
  read_vreg -> MOVETYPEI;
  read_vreg -> MOVETYPEV;
  read_vreg -> MOVETYPEV;
  read_vreg -> MOVETYPEX;
  read_vreg -> MVVCOMPRESS;
  read_vreg -> MVVCOMPRESS;
  read_vreg -> MVVMATYPE;
  read_vreg -> MVVMATYPE;
  read_vreg -> MVVMATYPE;
  read_vreg -> MVVTYPE;
  read_vreg -> MVVTYPE;
  read_vreg -> MVVTYPE;
  read_vreg -> MVXMATYPE;
  read_vreg -> MVXMATYPE;
  read_vreg -> MVXTYPE;
  read_vreg -> MVXTYPE;
  read_vreg -> NISTYPE;
  read_vreg -> NISTYPE;
  read_vreg -> NITYPE;
  read_vreg -> NITYPE;
  read_vreg -> NVSTYPE;
  read_vreg -> NVSTYPE;
  read_vreg -> NVSTYPE;
  read_vreg -> NVTYPE;
  read_vreg -> NVTYPE;
  read_vreg -> NVTYPE;
  read_vreg -> NXSTYPE;
  read_vreg -> NXSTYPE;
  read_vreg -> NXTYPE;
  read_vreg -> NXTYPE;
  read_vreg -> RIVVTYPE;
  read_vreg -> RIVVTYPE;
  read_vreg -> RMVVTYPE;
  read_vreg -> RMVVTYPE;
  read_vreg -> VEXT2TYPE;
  read_vreg -> VEXT2TYPE;
  read_vreg -> VEXT4TYPE;
  read_vreg -> VEXT4TYPE;
  read_vreg -> VEXT8TYPE;
  read_vreg -> VEXT8TYPE;
  read_vreg -> VFMERGE;
  read_vreg -> VFMERGE;
  read_vreg -> VFMV;
  read_vreg -> VFMVFS;
  read_vreg -> VFMVSF;
  read_vreg -> VFNUNARY0;
  read_vreg -> VFNUNARY0;
  read_vreg -> VFUNARY0;
  read_vreg -> VFUNARY0;
  read_vreg -> VFUNARY1;
  read_vreg -> VFUNARY1;
  read_vreg -> VFWUNARY0;
  read_vreg -> VFWUNARY0;
  read_vreg -> VICMPTYPE;
  read_vreg -> VID_V;
  read_vreg -> VIMCTYPE;
  read_vreg -> VIMSTYPE;
  read_vreg -> VIMSTYPE;
  read_vreg -> VIMTYPE;
  read_vreg -> VIOTA_M;
  read_vreg -> VISG;
  read_vreg -> VISG;
  read_vreg -> VITYPE;
  read_vreg -> VITYPE;
  read_vreg -> VMVRTYPE;
  read_vreg -> VMVRTYPE;
  read_vreg -> VMVSX;
  read_vreg -> VMVXS;
  read_vreg -> VVCMPTYPE;
  read_vreg -> VVCMPTYPE;
  read_vreg -> VVMCTYPE;
  read_vreg -> VVMCTYPE;
  read_vreg -> VVMSTYPE;
  read_vreg -> VVMSTYPE;
  read_vreg -> VVMSTYPE;
  read_vreg -> VVMTYPE;
  read_vreg -> VVMTYPE;
  read_vreg -> VVTYPE;
  read_vreg -> VVTYPE;
  read_vreg -> VVTYPE;
  read_vreg -> VVTYPE;
  read_vreg -> VXCMPTYPE;
  read_vreg -> VXMCTYPE;
  read_vreg -> VXMSTYPE;
  read_vreg -> VXMSTYPE;
  read_vreg -> VXMTYPE;
  read_vreg -> VXSG;
  read_vreg -> VXSG;
  read_vreg -> VXTYPE;
  read_vreg -> VXTYPE;
  read_vreg -> WMVVTYPE;
  read_vreg -> WMVVTYPE;
  read_vreg -> WMVVTYPE;
  read_vreg -> WMVXTYPE;
  read_vreg -> WMVXTYPE;
  read_vreg -> WVTYPE;
  read_vreg -> WVTYPE;
  read_vreg -> WVTYPE;
  read_vreg -> WVVTYPE;
  read_vreg -> WVVTYPE;
  read_vreg -> WVVTYPE;
  read_vreg -> WVXTYPE;
  read_vreg -> WVXTYPE;
  read_vreg -> WXTYPE;
  read_vreg -> WXTYPE;
  read_vreg -> process_rfvv_single;
  read_vreg -> process_rfvv_single;
  read_vreg -> process_rfvv_widen;
  read_vreg -> process_rfvv_widen;
  read_vreg -> process_vlxseg;
  read_vreg -> process_vm;
  read_vreg -> process_vsre;
  read_vreg -> process_vsxseg;
  read_vreg -> read_vreg_seg;
  mem_write_ea -> AMO;
  mem_write_ea -> STORE;
  mem_write_ea -> STORECON;
  mem_write_ea -> STORE_FP;
  mem_write_ea -> STORE_FP;
  mem_write_ea -> STORE_FP;
  mem_write_ea -> process_vm;
  mem_write_ea -> process_vsre;
  mem_write_ea -> process_vsseg;
  mem_write_ea -> process_vssseg;
  mem_write_ea -> process_vsxseg;
  wX_bits -> ADDIW;
  wX_bits -> AES32DSI;
  wX_bits -> AES32DSMI;
  wX_bits -> AES32ESI;
  wX_bits -> AES32ESMI;
  wX_bits -> AES64DS;
  wX_bits -> AES64DSM;
  wX_bits -> AES64ES;
  wX_bits -> AES64ESM;
  wX_bits -> AES64IM;
  wX_bits -> AES64KS1I;
  wX_bits -> AES64KS2;
  wX_bits -> AMO;
  wX_bits -> CSR;
  wX_bits -> C_NOT;
  wX_bits -> C_ZEXT_B;
  wX_bits -> DIV;
  wX_bits -> DIVW;
  wX_bits -> F_BIN_TYPE_D____FEQ_D;
  wX_bits -> F_BIN_TYPE_D____FLE_D;
  wX_bits -> F_BIN_TYPE_D____FLT_D;
  wX_bits -> F_BIN_TYPE_H____FEQ_H;
  wX_bits -> F_BIN_TYPE_H____FLE_H;
  wX_bits -> F_BIN_TYPE_H____FLT_H;
  wX_bits -> F_BIN_TYPE_S____FEQ_S;
  wX_bits -> F_BIN_TYPE_S____FLE_S;
  wX_bits -> F_BIN_TYPE_S____FLT_S;
  wX_bits -> F_UN_RM_TYPE_D____FCVT_LU_D;
  wX_bits -> F_UN_RM_TYPE_D____FCVT_L_D;
  wX_bits -> F_UN_RM_TYPE_D____FCVT_WU_D;
  wX_bits -> F_UN_RM_TYPE_D____FCVT_W_D;
  wX_bits -> F_UN_RM_TYPE_H____FCVT_LU_H;
  wX_bits -> F_UN_RM_TYPE_H____FCVT_L_H;
  wX_bits -> F_UN_RM_TYPE_H____FCVT_WU_H;
  wX_bits -> F_UN_RM_TYPE_H____FCVT_W_H;
  wX_bits -> F_UN_RM_TYPE_S____FCVT_LU_S;
  wX_bits -> F_UN_RM_TYPE_S____FCVT_L_S;
  wX_bits -> F_UN_RM_TYPE_S____FCVT_WU_S;
  wX_bits -> F_UN_RM_TYPE_S____FCVT_W_S;
  wX_bits -> F_UN_TYPE_D____FCLASS_D;
  wX_bits -> F_UN_TYPE_D____FMV_X_D;
  wX_bits -> F_UN_TYPE_H____FCLASS_H;
  wX_bits -> F_UN_TYPE_H____FMV_X_H;
  wX_bits -> F_UN_TYPE_S____FCLASS_S;
  wX_bits -> F_UN_TYPE_S____FMV_X_W;
  wX_bits -> ITYPE;
  wX_bits -> LOAD;
  wX_bits -> LOADRES;
  wX_bits -> MUL;
  wX_bits -> MULW;
  wX_bits -> REM;
  wX_bits -> REMW;
  wX_bits -> RISCV_BREV8;
  wX_bits -> RISCV_CLMUL;
  wX_bits -> RISCV_CLMULH;
  wX_bits -> RISCV_CLMULR;
  wX_bits -> RISCV_CLZ;
  wX_bits -> RISCV_CLZW;
  wX_bits -> RISCV_CPOP;
  wX_bits -> RISCV_CPOPW;
  wX_bits -> RISCV_CTZ;
  wX_bits -> RISCV_CTZW;
  wX_bits -> RISCV_FCVTMOD_W_D;
  wX_bits -> RISCV_FLEQ_D;
  wX_bits -> RISCV_FLEQ_H;
  wX_bits -> RISCV_FLEQ_S;
  wX_bits -> RISCV_FLTQ_D;
  wX_bits -> RISCV_FLTQ_H;
  wX_bits -> RISCV_FLTQ_S;
  wX_bits -> RISCV_FMVH_X_D;
  wX_bits -> RISCV_JAL;
  wX_bits -> RISCV_JALR;
  wX_bits -> RISCV_ORCB;
  wX_bits -> RISCV_REV8;
  wX_bits -> RISCV_RORI;
  wX_bits -> RISCV_RORIW;
  wX_bits -> RISCV_SLLIUW;
  wX_bits -> RISCV_XPERM4;
  wX_bits -> RISCV_XPERM8;
  wX_bits -> RTYPE;
  wX_bits -> RTYPEW;
  wX_bits -> SHA256SIG0;
  wX_bits -> SHA256SIG1;
  wX_bits -> SHA256SUM0;
  wX_bits -> SHA256SUM1;
  wX_bits -> SHA512SIG0;
  wX_bits -> SHA512SIG0H;
  wX_bits -> SHA512SIG0L;
  wX_bits -> SHA512SIG1;
  wX_bits -> SHA512SIG1H;
  wX_bits -> SHA512SIG1L;
  wX_bits -> SHA512SUM0;
  wX_bits -> SHA512SUM0R;
  wX_bits -> SHA512SUM1;
  wX_bits -> SHA512SUM1R;
  wX_bits -> SHIFTIOP;
  wX_bits -> SHIFTIWOP;
  wX_bits -> SM3P0;
  wX_bits -> SM3P1;
  wX_bits -> SM4ED;
  wX_bits -> SM4KS;
  wX_bits -> STORECON;
  wX_bits -> UTYPE;
  wX_bits -> VCPOP_M;
  wX_bits -> VFIRST_M;
  wX_bits -> VMVXS;
  wX_bits -> VSETIVLI;
  wX_bits -> VSETVL;
  wX_bits -> VSETVLI;
  wX_bits -> ZBA_RTYPE;
  wX_bits -> ZBA_RTYPEUW;
  wX_bits -> ZBB_EXTOP;
  wX_bits -> ZBB_RTYPE;
  wX_bits -> ZBB_RTYPEW;
  wX_bits -> ZBKB_PACKW;
  wX_bits -> ZBKB_RTYPE;
  wX_bits -> ZBS_IOP;
  wX_bits -> ZBS_RTYPE;
  wX_bits -> ZICOND_RTYPE____RISCV_CZERO_EQZ;
  wX_bits -> ZICOND_RTYPE____RISCV_CZERO_NEZ;
  wX_bits -> wF_or_X_D;
  wX_bits -> wF_or_X_D;
  wX_bits -> wF_or_X_H;
  wX_bits -> wF_or_X_S;
  fp_max -> FVFTYPE;
  fp_max -> FVVTYPE;
  fp_max -> process_rfvv_single;
  ext_read_CSR -> readCSR;
  SFENCE_VMA -> SINVAL_VMA;
  read_vmask -> FVFMATYPE;
  read_vmask -> FVFMTYPE;
  read_vmask -> FVFMTYPE;
  read_vmask -> FVFTYPE;
  read_vmask -> FVVMATYPE;
  read_vmask -> FVVMTYPE;
  read_vmask -> FVVMTYPE;
  read_vmask -> FVVTYPE;
  read_vmask -> FWFTYPE;
  read_vmask -> FWVFMATYPE;
  read_vmask -> FWVFTYPE;
  read_vmask -> FWVTYPE;
  read_vmask -> FWVVMATYPE;
  read_vmask -> FWVVTYPE;
  read_vmask -> MASKTYPEI;
  read_vmask -> MASKTYPEV;
  read_vmask -> MASKTYPEX;
  read_vmask -> MMTYPE;
  read_vmask -> MMTYPE;
  read_vmask -> MMTYPE;
  read_vmask -> MOVETYPEI;
  read_vmask -> MOVETYPEV;
  read_vmask -> MOVETYPEX;
  read_vmask -> MVVCOMPRESS;
  read_vmask -> MVVMATYPE;
  read_vmask -> MVVTYPE;
  read_vmask -> MVXMATYPE;
  read_vmask -> MVXTYPE;
  read_vmask -> NISTYPE;
  read_vmask -> NITYPE;
  read_vmask -> NVSTYPE;
  read_vmask -> NVTYPE;
  read_vmask -> NXSTYPE;
  read_vmask -> NXTYPE;
  read_vmask -> RIVVTYPE;
  read_vmask -> RMVVTYPE;
  read_vmask -> VCPOP_M;
  read_vmask -> VCPOP_M;
  read_vmask -> VEXT2TYPE;
  read_vmask -> VEXT4TYPE;
  read_vmask -> VEXT8TYPE;
  read_vmask -> VFIRST_M;
  read_vmask -> VFIRST_M;
  read_vmask -> VFMERGE;
  read_vmask -> VFMV;
  read_vmask -> VFMVSF;
  read_vmask -> VFNUNARY0;
  read_vmask -> VFUNARY0;
  read_vmask -> VFUNARY1;
  read_vmask -> VFWUNARY0;
  read_vmask -> VICMPTYPE;
  read_vmask -> VICMPTYPE;
  read_vmask -> VID_V;
  read_vmask -> VIMCTYPE;
  read_vmask -> VIMTYPE;
  read_vmask -> VIOTA_M;
  read_vmask -> VIOTA_M;
  read_vmask -> VISG;
  read_vmask -> VITYPE;
  read_vmask -> VMSBF_M;
  read_vmask -> VMSBF_M;
  read_vmask -> VMSBF_M;
  read_vmask -> VMSIF_M;
  read_vmask -> VMSIF_M;
  read_vmask -> VMSIF_M;
  read_vmask -> VMSOF_M;
  read_vmask -> VMSOF_M;
  read_vmask -> VMSOF_M;
  read_vmask -> VMVRTYPE;
  read_vmask -> VMVSX;
  read_vmask -> VVCMPTYPE;
  read_vmask -> VVCMPTYPE;
  read_vmask -> VVMCTYPE;
  read_vmask -> VVMTYPE;
  read_vmask -> VVTYPE;
  read_vmask -> VXCMPTYPE;
  read_vmask -> VXCMPTYPE;
  read_vmask -> VXMCTYPE;
  read_vmask -> VXMTYPE;
  read_vmask -> VXSG;
  read_vmask -> VXTYPE;
  read_vmask -> WMVVTYPE;
  read_vmask -> WMVXTYPE;
  read_vmask -> WVTYPE;
  read_vmask -> WVVTYPE;
  read_vmask -> WVXTYPE;
  read_vmask -> WXTYPE;
  read_vmask -> process_rfvv_single;
  read_vmask -> process_rfvv_widen;
  read_vmask -> process_vlseg;
  read_vmask -> process_vlsegff;
  read_vmask -> process_vlsseg;
  read_vmask -> process_vlxseg;
  read_vmask -> process_vsseg;
  read_vmask -> process_vssseg;
  read_vmask -> process_vsxseg;
  rvfi_read -> mem_read_priv_meta;
  fp_widen -> FWFTYPE;
  fp_widen -> FWVFMATYPE;
  fp_widen -> FWVFMATYPE;
  fp_widen -> FWVFTYPE;
  fp_widen -> FWVFTYPE;
  fp_widen -> FWVTYPE;
  fp_widen -> FWVVMATYPE;
  fp_widen -> FWVVTYPE;
  fp_widen -> process_rfvv_widen;
  rV -> rV_bits;
  riscv_f16Lt -> F_BIN_TYPE_H____FLT_H;
  riscv_f16Lt -> fp_ge;
  riscv_f16Lt -> fp_lt;
  legalize_mcounteren -> writeCSR;
  read_single_element -> RIVVTYPE;
  read_single_element -> RMVVTYPE;
  read_single_element -> process_rfvv_single;
  read_single_element -> process_rfvv_widen;
  read_single_element -> process_vsre;
  read_single_element -> process_vsseg;
  read_single_element -> process_vssseg;
  read_single_element -> process_vsxseg;
  get_elen_pow -> VSETIVLI;
  get_elen_pow -> VSETVL;
  get_elen_pow -> VSETVLI;
  get_elen_pow -> valid_eew_emul;
  rvfi_write -> mem_write_value_priv_meta;
  f_is_pos_norm_S -> F_UN_TYPE_S____FCLASS_S;
  f_is_pos_norm_S -> f_is_pos_norm;
  num_of_ext_exc_type -> num_of_ExceptionType;
  riscv_f32ToI32 -> F_UN_RM_TYPE_S____FCVT_W_S;
  riscv_f32ToI32 -> VFUNARY0;
  riscv_f32ToI32 -> VFUNARY0;
  riscv_f32ToI32 -> riscv_f32ToI16;
  process_vlxseg -> VLOXSEGTYPE;
  process_vlxseg -> VLUXSEGTYPE;
  MemoryOpResult_drop_meta -> mem_read_priv;
  riscv_i32ToF16 -> F_UN_RM_TYPE_H____FCVT_H_W;
  riscv_i32ToF16 -> VFNUNARY0;
  riscv_i32ToF16 -> VFUNARY0;
  riscv_i32ToF16 -> VFWUNARY0;
  fle_H -> F_BIN_TYPE_H____FMAX_H;
  fle_H -> F_BIN_TYPE_H____FMIN_H;
  fle_H -> RISCV_FMAXM_H;
  fle_H -> RISCV_FMINM_H;
  lift_sie -> legalize_sie;
  effectivePrivilege -> mem_read;
  effectivePrivilege -> mem_write_value_meta;
  effectivePrivilege -> translateAddr;
  ext_handle_control_check_error -> BTYPE;
  ext_handle_control_check_error -> RISCV_JAL;
  ext_handle_control_check_error -> RISCV_JALR;
  riscv_f64ToUi64 -> F_UN_RM_TYPE_D____FCVT_LU_D;
  riscv_f64ToUi64 -> VFUNARY0;
  riscv_f64ToUi64 -> VFUNARY0;
  get_xret_target -> prepare_xret_target;
  get_xret_target -> readCSR;
  get_xret_target -> readCSR;
  getbyte -> aes_rv64_shiftrows_fwd;
  getbyte -> aes_rv64_shiftrows_fwd;
  getbyte -> aes_rv64_shiftrows_fwd;
  getbyte -> aes_rv64_shiftrows_fwd;
  getbyte -> aes_rv64_shiftrows_fwd;
  getbyte -> aes_rv64_shiftrows_fwd;
  getbyte -> aes_rv64_shiftrows_fwd;
  getbyte -> aes_rv64_shiftrows_fwd;
  getbyte -> aes_rv64_shiftrows_inv;
  getbyte -> aes_rv64_shiftrows_inv;
  getbyte -> aes_rv64_shiftrows_inv;
  getbyte -> aes_rv64_shiftrows_inv;
  getbyte -> aes_rv64_shiftrows_inv;
  getbyte -> aes_rv64_shiftrows_inv;
  getbyte -> aes_rv64_shiftrows_inv;
  getbyte -> aes_rv64_shiftrows_inv;
  write_kind_of_flags -> checked_mem_write;
  write_kind_of_flags -> mem_write_ea;
  fp_nmuladd -> FVFMATYPE;
  fp_nmuladd -> FVVMATYPE;
  fp_nmuladd -> FWVFMATYPE;
  fp_nmuladd -> FWVVMATYPE;
  riscv_f64MulAdd -> F_MADD_TYPE_D;
  riscv_f64MulAdd -> fp_muladd;
  riscv_f64MulAdd -> fp_mulsub;
  riscv_f64MulAdd -> fp_nmuladd;
  riscv_f64MulAdd -> fp_nmulsub;
  set_sstatus_UXL -> lower_mstatus;
  dirty_fd_context -> dirty_fd_context_if_present;
  dirty_fd_context -> wF;
  within_mmio_readable -> checked_mem_read;
  SHIFTIOP -> C_SLLI;
  SHIFTIOP -> C_SRAI;
  SHIFTIOP -> C_SRLI;
  within_htif_readable -> mmio_read;
  within_htif_readable -> within_mmio_readable;
  illegal_fp_variable_width -> FWFTYPE;
  illegal_fp_variable_width -> FWVFMATYPE;
  illegal_fp_variable_width -> FWVFTYPE;
  illegal_fp_variable_width -> FWVTYPE;
  illegal_fp_variable_width -> FWVVMATYPE;
  illegal_fp_variable_width -> FWVVTYPE;
  illegal_fp_variable_width -> VFNUNARY0;
  illegal_fp_variable_width -> VFWUNARY0;
  f_is_neg_subnorm -> fp_class;
  reset_htif -> htif_store;
  nan_unbox_S -> rF_S;
  phys_mem_read -> checked_mem_read;
  wF_D -> RISCV_FLI_D;
  wF_D -> RISCV_FMAXM_D;
  wF_D -> RISCV_FMINM_D;
  wF_D -> RISCV_FMVP_D_X;
  wF_D -> RISCV_FROUNDNX_D;
  wF_D -> RISCV_FROUND_D;
  wF_D -> VFMVFS;
  wF_D -> wF_or_X_D;
  fp_le -> FVFMTYPE;
  fp_le -> FVVMTYPE;
  set_next_pc -> BTYPE;
  set_next_pc -> ECALL;
  set_next_pc -> MRET;
  set_next_pc -> RISCV_JAL;
  set_next_pc -> RISCV_JALR;
  set_next_pc -> SRET;
  set_next_pc -> URET;
  set_next_pc -> handle_illegal;
  set_next_pc -> handle_mem_exception;
  ext_exc_type_to_str -> exceptionType_to_str;
  rF_or_X_S -> F_BIN_RM_TYPE_S;
  rF_or_X_S -> F_BIN_RM_TYPE_S;
  rF_or_X_S -> F_BIN_TYPE_S____FEQ_S;
  rF_or_X_S -> F_BIN_TYPE_S____FEQ_S;
  rF_or_X_S -> F_BIN_TYPE_S____FLE_S;
  rF_or_X_S -> F_BIN_TYPE_S____FLE_S;
  rF_or_X_S -> F_BIN_TYPE_S____FLT_S;
  rF_or_X_S -> F_BIN_TYPE_S____FLT_S;
  rF_or_X_S -> F_BIN_TYPE_S____FMAX_S;
  rF_or_X_S -> F_BIN_TYPE_S____FMAX_S;
  rF_or_X_S -> F_BIN_TYPE_S____FMIN_S;
  rF_or_X_S -> F_BIN_TYPE_S____FMIN_S;
  rF_or_X_S -> F_BIN_TYPE_S____FSGNJN_S;
  rF_or_X_S -> F_BIN_TYPE_S____FSGNJN_S;
  rF_or_X_S -> F_BIN_TYPE_S____FSGNJX_S;
  rF_or_X_S -> F_BIN_TYPE_S____FSGNJX_S;
  rF_or_X_S -> F_BIN_TYPE_S____FSGNJ_S;
  rF_or_X_S -> F_BIN_TYPE_S____FSGNJ_S;
  rF_or_X_S -> F_MADD_TYPE_S;
  rF_or_X_S -> F_MADD_TYPE_S;
  rF_or_X_S -> F_MADD_TYPE_S;
  rF_or_X_S -> F_UN_RM_TYPE_D____FCVT_D_S;
  rF_or_X_S -> F_UN_RM_TYPE_H____FCVT_H_S;
  rF_or_X_S -> F_UN_RM_TYPE_S____FCVT_LU_S;
  rF_or_X_S -> F_UN_RM_TYPE_S____FCVT_L_S;
  rF_or_X_S -> F_UN_RM_TYPE_S____FCVT_WU_S;
  rF_or_X_S -> F_UN_RM_TYPE_S____FCVT_W_S;
  rF_or_X_S -> F_UN_RM_TYPE_S____FSQRT_S;
  rF_or_X_S -> F_UN_TYPE_S____FCLASS_S;
  within_clint -> mmio_read;
  within_clint -> mmio_write;
  within_clint -> within_mmio_readable;
  within_clint -> within_mmio_writable;
  aes_subword_fwd -> AES64KS1I;
  riscv_f32Add -> F_BIN_RM_TYPE_S;
  riscv_f32Add -> fp_add;
  readCSR -> CSR;
  canonical_NaN_S -> F_BIN_TYPE_S____FMAX_S;
  canonical_NaN_S -> F_BIN_TYPE_S____FMIN_S;
  canonical_NaN_S -> RISCV_FLI_S;
  canonical_NaN_S -> RISCV_FMAXM_S;
  canonical_NaN_S -> RISCV_FMINM_S;
  canonical_NaN_S -> canonical_NaN;
  canonical_NaN_S -> nan_unbox_S;
  csrAccess -> check_CSR;
  ext_control_check_addr -> RISCV_JALR;
  riscv_f16ToI32 -> F_UN_RM_TYPE_H____FCVT_W_H;
  riscv_f16ToI32 -> VFWUNARY0;
  riscv_f16ToI32 -> VFWUNARY0;
  riscv_f16ToI32 -> riscv_f16ToI16;
  riscv_f16ToI32 -> riscv_f16ToI8;
  set_xret_target -> writeCSR;
  set_xret_target -> writeCSR;
  mem_read_priv -> mem_read;
  mem_read_priv -> pt_walk;
  privLevel_of_bits -> effectivePrivilege;
  privLevel_of_bits -> exception_handler;
  fp_class -> VFUNARY1;
  fp_class -> riscv_f16Recip7;
  fp_class -> riscv_f16Rsqrte7;
  fp_class -> riscv_f32Recip7;
  fp_class -> riscv_f32Rsqrte7;
  fp_class -> riscv_f64Recip7;
  fp_class -> riscv_f64Rsqrte7;
  exceptionType_to_str -> exception_handler;
  f_is_neg_subnorm_S -> F_UN_TYPE_S____FCLASS_S;
  f_is_neg_subnorm_S -> f_is_neg_subnorm;
  lower_mstatus -> readCSR;
  get_scalar_fp -> FVFMATYPE;
  get_scalar_fp -> FVFMTYPE;
  get_scalar_fp -> FVFTYPE;
  get_scalar_fp -> FWFTYPE;
  get_scalar_fp -> FWVFMATYPE;
  get_scalar_fp -> FWVFTYPE;
  get_scalar_fp -> VFMERGE;
  get_scalar_fp -> VFMV;
  get_scalar_fp -> VFMVSF;
  write_ram_ea -> mem_write_ea;
  fmake_S -> F_BIN_TYPE_S____FSGNJN_S;
  fmake_S -> F_BIN_TYPE_S____FSGNJX_S;
  fmake_S -> F_BIN_TYPE_S____FSGNJ_S;
  fmake_S -> negate_S;
  pmpWriteAddrReg -> writeCSR;
  illegal_fp_normal -> FVFMATYPE;
  illegal_fp_normal -> FVFTYPE;
  illegal_fp_normal -> FVVMATYPE;
  illegal_fp_normal -> FVVTYPE;
  illegal_fp_normal -> VFUNARY0;
  illegal_fp_normal -> VFUNARY1;
  set_mstatus_SXL -> legalize_mstatus;
  ext_is_CSR_defined -> is_CSR_defined;
  process_vlseg -> VLSEGTYPE;
  riscv_f16ToI8 -> VFNUNARY0;
  riscv_f16ToI8 -> VFNUNARY0;
  gfmul -> aes_mixcolumn_byte_fwd;
  gfmul -> aes_mixcolumn_byte_inv;
  gfmul -> aes_mixcolumn_inv;
  gfmul -> aes_mixcolumn_inv;
  gfmul -> aes_mixcolumn_inv;
  gfmul -> aes_mixcolumn_inv;
  ZBB_EXTOP -> C_SEXT_B;
  ZBB_EXTOP -> C_SEXT_H;
  ZBB_EXTOP -> C_ZEXT_H;
  valid_rounding_mode -> select_instr_or_fcsr_rm;
  illegal_normal -> MVVMATYPE;
  illegal_normal -> MVVTYPE;
  illegal_normal -> MVXMATYPE;
  illegal_normal -> MVXTYPE;
  illegal_normal -> VID_V;
  illegal_normal -> VIOTA_M;
  illegal_normal -> VISG;
  illegal_normal -> VITYPE;
  illegal_normal -> VMSBF_M;
  illegal_normal -> VMSIF_M;
  illegal_normal -> VMSOF_M;
  illegal_normal -> VVTYPE;
  illegal_normal -> VXSG;
  illegal_normal -> VXTYPE;
  nxFlag -> fcvtmod_helper;
  nxFlag -> riscv_f16Recip7;
  nxFlag -> riscv_f32Recip7;
  nxFlag -> riscv_f64Recip7;
  get_num_elem -> FVFMATYPE;
  get_num_elem -> FVFMTYPE;
  get_num_elem -> FVFTYPE;
  get_num_elem -> FVVMATYPE;
  get_num_elem -> FVVMTYPE;
  get_num_elem -> FVVTYPE;
  get_num_elem -> FWFTYPE;
  get_num_elem -> FWVFMATYPE;
  get_num_elem -> FWVFTYPE;
  get_num_elem -> FWVTYPE;
  get_num_elem -> FWVVMATYPE;
  get_num_elem -> FWVVTYPE;
  get_num_elem -> MASKTYPEI;
  get_num_elem -> MASKTYPEV;
  get_num_elem -> MASKTYPEX;
  get_num_elem -> MOVETYPEI;
  get_num_elem -> MOVETYPEV;
  get_num_elem -> MOVETYPEX;
  get_num_elem -> MVVCOMPRESS;
  get_num_elem -> MVVMATYPE;
  get_num_elem -> MVVTYPE;
  get_num_elem -> MVXMATYPE;
  get_num_elem -> MVXTYPE;
  get_num_elem -> NISTYPE;
  get_num_elem -> NITYPE;
  get_num_elem -> NVSTYPE;
  get_num_elem -> NVTYPE;
  get_num_elem -> NXSTYPE;
  get_num_elem -> NXTYPE;
  get_num_elem -> RFVVTYPE;
  get_num_elem -> RIVVTYPE;
  get_num_elem -> RIVVTYPE;
  get_num_elem -> RMVVTYPE;
  get_num_elem -> RMVVTYPE;
  get_num_elem -> VEXT2TYPE;
  get_num_elem -> VEXT4TYPE;
  get_num_elem -> VEXT8TYPE;
  get_num_elem -> VFMERGE;
  get_num_elem -> VFMV;
  get_num_elem -> VFMVFS;
  get_num_elem -> VFMVSF;
  get_num_elem -> VFNUNARY0;
  get_num_elem -> VFUNARY0;
  get_num_elem -> VFUNARY1;
  get_num_elem -> VFWUNARY0;
  get_num_elem -> VICMPTYPE;
  get_num_elem -> VID_V;
  get_num_elem -> VIMCTYPE;
  get_num_elem -> VIMSTYPE;
  get_num_elem -> VIMTYPE;
  get_num_elem -> VIOTA_M;
  get_num_elem -> VISG;
  get_num_elem -> VITYPE;
  get_num_elem -> VLOXSEGTYPE;
  get_num_elem -> VLSEGFFTYPE;
  get_num_elem -> VLSEGTYPE;
  get_num_elem -> VLSSEGTYPE;
  get_num_elem -> VLUXSEGTYPE;
  get_num_elem -> VMTYPE;
  get_num_elem -> VMVRTYPE;
  get_num_elem -> VMVSX;
  get_num_elem -> VMVXS;
  get_num_elem -> VSOXSEGTYPE;
  get_num_elem -> VSSEGTYPE;
  get_num_elem -> VSSSEGTYPE;
  get_num_elem -> VSUXSEGTYPE;
  get_num_elem -> VVCMPTYPE;
  get_num_elem -> VVMCTYPE;
  get_num_elem -> VVMSTYPE;
  get_num_elem -> VVMTYPE;
  get_num_elem -> VVTYPE;
  get_num_elem -> VXCMPTYPE;
  get_num_elem -> VXMCTYPE;
  get_num_elem -> VXMSTYPE;
  get_num_elem -> VXMTYPE;
  get_num_elem -> VXSG;
  get_num_elem -> VXTYPE;
  get_num_elem -> WMVVTYPE;
  get_num_elem -> WMVXTYPE;
  get_num_elem -> WVTYPE;
  get_num_elem -> WVVTYPE;
  get_num_elem -> WVXTYPE;
  get_num_elem -> WXTYPE;
  get_num_elem -> process_rfvv_single;
  get_num_elem -> process_rfvv_widen;
  ext_get_ptw_error -> pt_walk;
  ext_get_ptw_error -> translate_TLB_hit;
  init_masked_source -> RIVVTYPE;
  init_masked_source -> RMVVTYPE;
  init_masked_source -> process_rfvv_single;
  init_masked_source -> process_rfvv_widen;
  init_masked_source -> process_vsseg;
  init_masked_source -> process_vssseg;
  init_masked_source -> process_vsxseg;
  process_fstore -> STORE_FP;
  legalize_sie -> writeCSR;
  mem_write_value_priv -> write_pte;
  rotate_bits_right -> RISCV_RORI;
  rotate_bits_right -> RISCV_RORI;
  rotate_bits_right -> RISCV_RORIW;
  rotate_bits_right -> ZBB_RTYPE;
  rotate_bits_right -> ZBB_RTYPEW;
  negate_fp -> fp_mulsub;
  negate_fp -> fp_nmuladd;
  negate_fp -> fp_nmulsub;
  negate_fp -> fp_nmulsub;
  __WriteRAM_Meta -> write_ram;
  unsigned_saturation -> NITYPE;
  unsigned_saturation -> NVTYPE;
  unsigned_saturation -> NXTYPE;
  unsigned_saturation -> VITYPE;
  unsigned_saturation -> VVTYPE;
  unsigned_saturation -> VXTYPE;
  legalize_satp64 -> legalize_satp;
  xt3 -> aes_mixcolumn_fwd;
  xt3 -> aes_mixcolumn_fwd;
  xt3 -> aes_mixcolumn_fwd;
  xt3 -> aes_mixcolumn_fwd;
  riscv_f32ToF16 -> F_UN_RM_TYPE_H____FCVT_H_S;
  riscv_f32ToF16 -> VFNUNARY0;
  riscv_f32ToF16 -> VFNUNARY0;
  riscv_f64ToF32 -> F_UN_RM_TYPE_D____FCVT_S_D;
  riscv_f64ToF32 -> VFNUNARY0;
  riscv_f64ToF32 -> VFNUNARY0;
  legalize_sedeleg -> writeCSR;
  translate_TLB_miss -> translate;
  exception_delegatee -> exception_handler;
  handle_mem_exception -> AMO;
  handle_mem_exception -> AMO;
  handle_mem_exception -> BTYPE;
  handle_mem_exception -> EBREAK;
  handle_mem_exception -> LOAD;
  handle_mem_exception -> LOAD;
  handle_mem_exception -> LOADRES;
  handle_mem_exception -> LOADRES;
  handle_mem_exception -> LOAD_FP;
  handle_mem_exception -> LOAD_FP;
  handle_mem_exception -> RISCV_JAL;
  handle_mem_exception -> RISCV_JALR;
  handle_mem_exception -> STORE;
  handle_mem_exception -> STORE;
  handle_mem_exception -> STORECON;
  handle_mem_exception -> STORECON;
  handle_mem_exception -> STORE_FP;
  handle_mem_exception -> STORE_FP;
  handle_mem_exception -> process_fload16;
  handle_mem_exception -> process_fload32;
  handle_mem_exception -> process_fload64;
  handle_mem_exception -> process_fstore;
  handle_mem_exception -> process_vlre;
  handle_mem_exception -> process_vlre;
  handle_mem_exception -> process_vlseg;
  handle_mem_exception -> process_vlseg;
  handle_mem_exception -> process_vlsegff;
  handle_mem_exception -> process_vlsegff;
  handle_mem_exception -> process_vlsseg;
  handle_mem_exception -> process_vlsseg;
  handle_mem_exception -> process_vlxseg;
  handle_mem_exception -> process_vlxseg;
  handle_mem_exception -> process_vm;
  handle_mem_exception -> process_vm;
  handle_mem_exception -> process_vsre;
  handle_mem_exception -> process_vsre;
  handle_mem_exception -> process_vsseg;
  handle_mem_exception -> process_vsseg;
  handle_mem_exception -> process_vssseg;
  handle_mem_exception -> process_vssseg;
  handle_mem_exception -> process_vsxseg;
  handle_mem_exception -> process_vsxseg;
  f_is_pos_subnorm_H -> F_UN_TYPE_H____FCLASS_H;
  f_is_pos_subnorm_H -> f_is_pos_subnorm;
  f_is_pos_inf_H -> F_UN_TYPE_H____FCLASS_H;
  f_is_pos_inf_H -> f_is_pos_inf;
  f_is_neg_inf -> fp_class;
  ext_check_phys_mem_read -> checked_mem_read;
  write_ram -> phys_mem_write;
  lower_mip -> readCSR;
  f_is_pos_norm_H -> F_UN_TYPE_H____FCLASS_H;
  f_is_pos_norm_H -> f_is_pos_norm;
  get_mtvec -> readCSR;
  riscv_f16MulAdd -> F_MADD_TYPE_H;
  riscv_f16MulAdd -> fp_muladd;
  riscv_f16MulAdd -> fp_mulsub;
  riscv_f16MulAdd -> fp_nmuladd;
  riscv_f16MulAdd -> fp_nmulsub;
  legalize_scounteren -> writeCSR;
  fmake_D -> F_BIN_TYPE_D____FSGNJN_D;
  fmake_D -> F_BIN_TYPE_D____FSGNJX_D;
  fmake_D -> F_BIN_TYPE_D____FSGNJ_D;
  fmake_D -> negate_D;
  get_config_print_mem -> phys_mem_read;
  get_config_print_mem -> phys_mem_write;
  riscv_f32MulAdd -> F_MADD_TYPE_S;
  riscv_f32MulAdd -> fp_muladd;
  riscv_f32MulAdd -> fp_mulsub;
  riscv_f32MulAdd -> fp_nmuladd;
  riscv_f32MulAdd -> fp_nmulsub;
  illegal_variable_width -> NISTYPE;
  illegal_variable_width -> NITYPE;
  illegal_variable_width -> NVSTYPE;
  illegal_variable_width -> NVTYPE;
  illegal_variable_width -> NXSTYPE;
  illegal_variable_width -> NXTYPE;
  illegal_variable_width -> VEXT2TYPE;
  illegal_variable_width -> VEXT4TYPE;
  illegal_variable_width -> VEXT8TYPE;
  illegal_variable_width -> WMVVTYPE;
  illegal_variable_width -> WMVXTYPE;
  illegal_variable_width -> WVTYPE;
  illegal_variable_width -> WVVTYPE;
  illegal_variable_width -> WVXTYPE;
  illegal_variable_width -> WXTYPE;
  legalize_tvec -> set_mtvec;
  legalize_tvec -> set_stvec;
  get_scalar -> MASKTYPEX;
  get_scalar -> MOVETYPEX;
  get_scalar -> MVXMATYPE;
  get_scalar -> MVXTYPE;
  get_scalar -> NXSTYPE;
  get_scalar -> NXTYPE;
  get_scalar -> VMVSX;
  get_scalar -> VXCMPTYPE;
  get_scalar -> VXMCTYPE;
  get_scalar -> VXMSTYPE;
  get_scalar -> VXMTYPE;
  get_scalar -> VXTYPE;
  get_scalar -> WMVXTYPE;
  get_scalar -> WVXTYPE;
  get_scalar -> WXTYPE;
  get_scalar -> process_vlsseg;
  get_scalar -> process_vssseg;
  mem_write_value_meta -> mem_write_value;
  is_aligned_addr -> mem_read_priv_meta;
  is_aligned_addr -> mem_write_ea;
  is_aligned_addr -> mem_write_value_priv_meta;
  illegal_fp_vd_masked -> VFMERGE;
  riscv_i32ToF64 -> F_UN_RM_TYPE_D____FCVT_D_W;
  riscv_i32ToF64 -> VFWUNARY0;
  illegal_fp_reduction_widen -> process_rfvv_widen;
  fregval_into_freg -> wF;
  read_kind_of_flags -> phys_mem_read;
  wX -> wX_bits;
  negate_S -> F_MADD_TYPE_S;
  negate_S -> F_MADD_TYPE_S;
  negate_S -> negate_fp;
  f_is_pos_subnorm -> fp_class;
  fsplit_D -> F_BIN_TYPE_D____FSGNJN_D;
  fsplit_D -> F_BIN_TYPE_D____FSGNJN_D;
  fsplit_D -> F_BIN_TYPE_D____FSGNJX_D;
  fsplit_D -> F_BIN_TYPE_D____FSGNJX_D;
  fsplit_D -> F_BIN_TYPE_D____FSGNJ_D;
  fsplit_D -> F_BIN_TYPE_D____FSGNJ_D;
  fsplit_D -> f_is_NaN_D;
  fsplit_D -> f_is_QNaN_D;
  fsplit_D -> f_is_SNaN_D;
  fsplit_D -> f_is_neg_inf_D;
  fsplit_D -> f_is_neg_norm_D;
  fsplit_D -> f_is_neg_subnorm_D;
  fsplit_D -> f_is_neg_zero_D;
  fsplit_D -> f_is_pos_inf_D;
  fsplit_D -> f_is_pos_norm_D;
  fsplit_D -> f_is_pos_subnorm_D;
  fsplit_D -> f_is_pos_zero_D;
  fsplit_D -> fcvtmod_helper;
  fsplit_D -> fle_D;
  fsplit_D -> fle_D;
  fsplit_D -> negate_D;
  RTYPEW -> C_ADDW;
  RTYPEW -> C_SUBW;
  offset_of_va -> pt_walk;
  riscv_f16Le_quiet -> RISCV_FLEQ_H;
  fsplit_H -> F_BIN_TYPE_H____FSGNJN_H;
  fsplit_H -> F_BIN_TYPE_H____FSGNJN_H;
  fsplit_H -> F_BIN_TYPE_H____FSGNJX_H;
  fsplit_H -> F_BIN_TYPE_H____FSGNJX_H;
  fsplit_H -> F_BIN_TYPE_H____FSGNJ_H;
  fsplit_H -> F_BIN_TYPE_H____FSGNJ_H;
  fsplit_H -> f_is_NaN_H;
  fsplit_H -> f_is_QNaN_H;
  fsplit_H -> f_is_SNaN_H;
  fsplit_H -> f_is_neg_inf_H;
  fsplit_H -> f_is_neg_norm_H;
  fsplit_H -> f_is_neg_subnorm_H;
  fsplit_H -> f_is_neg_zero_H;
  fsplit_H -> f_is_pos_inf_H;
  fsplit_H -> f_is_pos_norm_H;
  fsplit_H -> f_is_pos_subnorm_H;
  fsplit_H -> f_is_pos_zero_H;
  fsplit_H -> fle_H;
  fsplit_H -> fle_H;
  fsplit_H -> negate_H;
  riscv_f16Div -> F_BIN_RM_TYPE_H;
  riscv_f16Div -> fp_div;
  ext_control_check_pc -> BTYPE;
  ext_control_check_pc -> RISCV_JAL;
  wF_S -> RISCV_FLI_S;
  wF_S -> RISCV_FMAXM_S;
  wF_S -> RISCV_FMINM_S;
  wF_S -> RISCV_FROUNDNX_S;
  wF_S -> RISCV_FROUND_S;
  wF_S -> VFMVFS;
  wF_S -> wF_or_X_S;
  dirty_v_context -> wV;
  f_is_SNaN -> fp_class;
  riscv_f32Recip7 -> VFUNARY1;
  riscv_f64Lt -> F_BIN_TYPE_D____FLT_D;
  riscv_f64Lt -> fp_ge;
  riscv_f64Lt -> fp_lt;
  check_misaligned -> LOAD;
  check_misaligned -> LOAD_FP;
  check_misaligned -> STORE;
  check_misaligned -> STORE_FP;
  check_misaligned -> process_vlre;
  check_misaligned -> process_vlseg;
  check_misaligned -> process_vlsegff;
  check_misaligned -> process_vlsseg;
  check_misaligned -> process_vlxseg;
  check_misaligned -> process_vm;
  check_misaligned -> process_vsre;
  check_misaligned -> process_vsseg;
  check_misaligned -> process_vssseg;
  check_misaligned -> process_vsxseg;
  riscv_f32Le_quiet -> RISCV_FLEQ_S;
  riscv_ui32ToF64 -> F_UN_RM_TYPE_D____FCVT_D_WU;
  riscv_ui32ToF64 -> VFWUNARY0;
  legalize_xepc -> set_xret_target;
  htif_store -> mmio_write;
  riscv_f16Le -> F_BIN_TYPE_H____FLE_H;
  riscv_f16Le -> fp_gt;
  riscv_f16Le -> fp_le;
  rF_bits -> F_UN_TYPE_D____FMV_X_D;
  rF_bits -> F_UN_TYPE_H____FMV_X_H;
  rF_bits -> F_UN_TYPE_S____FMV_X_W;
  rF_bits -> STORE_FP;
  rF_bits -> rF_D;
  rF_bits -> rF_H;
  rF_bits -> rF_S;
  check_PTE_permission -> pt_walk;
  check_PTE_permission -> translate_TLB_hit;
  architecture -> SFENCE_VMA;
  architecture -> cur_Architecture;
  architecture -> translationMode;
  clint_load -> mmio_read;
  riscv_f32ToI64 -> F_UN_RM_TYPE_S____FCVT_L_S;
  riscv_f32ToI64 -> VFWUNARY0;
  riscv_f32ToI64 -> VFWUNARY0;
  rotate_bits_left -> AES32DSI;
  rotate_bits_left -> AES32DSMI;
  rotate_bits_left -> AES32ESI;
  rotate_bits_left -> AES32ESMI;
  rotate_bits_left -> SM4ED;
  rotate_bits_left -> SM4KS;
  rotate_bits_left -> ZBB_RTYPE;
  rotate_bits_left -> ZBB_RTYPEW;
  process_vsseg -> VSSEGTYPE;
  pmpWriteCfg -> pmpWriteCfgReg;
  satp_to_PT_base -> translateAddr;
  aes_mixcolumn_inv -> AES64DSM;
  aes_mixcolumn_inv -> AES64IM;
  pt_walk -> translate_TLB_miss;
  translationMode -> translateAddr;
  riscv_f16ToUi16 -> VFUNARY0;
  riscv_f16ToUi16 -> VFUNARY0;
  fmake_H -> F_BIN_TYPE_H____FSGNJN_H;
  fmake_H -> F_BIN_TYPE_H____FSGNJX_H;
  fmake_H -> F_BIN_TYPE_H____FSGNJ_H;
  fmake_H -> negate_H;
  riscv_f32Div -> F_BIN_RM_TYPE_S;
  riscv_f32Div -> fp_div;
  satp64Mode_of_bits -> legalize_satp64;
  satp64Mode_of_bits -> translationMode;
  f_is_neg_zero_D -> F_BIN_TYPE_D____FMAX_D;
  f_is_neg_zero_D -> F_BIN_TYPE_D____FMAX_D;
  f_is_neg_zero_D -> F_BIN_TYPE_D____FMIN_D;
  f_is_neg_zero_D -> F_BIN_TYPE_D____FMIN_D;
  f_is_neg_zero_D -> F_UN_TYPE_D____FCLASS_D;
  f_is_neg_zero_D -> RISCV_FMAXM_D;
  f_is_neg_zero_D -> RISCV_FMAXM_D;
  f_is_neg_zero_D -> RISCV_FMINM_D;
  f_is_neg_zero_D -> RISCV_FMINM_D;
  f_is_neg_zero_D -> f_is_neg_zero;
  f_is_neg_zero_D -> fle_D;
  f_is_neg_zero_D -> fle_D;
  sbox_lookup -> aes_sbox_fwd;
  sbox_lookup -> aes_sbox_inv;
  sbox_lookup -> sm4_sbox;
  fcvtmod_helper -> RISCV_FCVTMOD_W_D;
  f_is_QNaN -> fp_class;
  illegal_vd_unmasked -> MMTYPE;
  illegal_vd_unmasked -> MOVETYPEI;
  illegal_vd_unmasked -> MOVETYPEV;
  illegal_vd_unmasked -> MOVETYPEX;
  illegal_vd_unmasked -> MVVCOMPRESS;
  illegal_vd_unmasked -> VCPOP_M;
  illegal_vd_unmasked -> VFIRST_M;
  illegal_vd_unmasked -> VICMPTYPE;
  illegal_vd_unmasked -> VIMCTYPE;
  illegal_vd_unmasked -> VIMTYPE;
  illegal_vd_unmasked -> VMTYPE;
  illegal_vd_unmasked -> VMVSX;
  illegal_vd_unmasked -> VMVXS;
  illegal_vd_unmasked -> VVCMPTYPE;
  illegal_vd_unmasked -> VVMCTYPE;
  illegal_vd_unmasked -> VVMTYPE;
  illegal_vd_unmasked -> VXCMPTYPE;
  illegal_vd_unmasked -> VXMCTYPE;
  illegal_vd_unmasked -> VXMTYPE;
  riscv_f16ToF64 -> F_UN_RM_TYPE_H____FCVT_D_H;
  
  }
