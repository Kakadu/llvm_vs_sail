(* This file was auto generated *)

let enums =
  let ans = Hashtbl.create 150 in
  Hashtbl.add ans "fvvfunct6" ["FVV_VMUL"; "FVV_VDIV"; "FVV_VSGNJX"; "FVV_VSGNJN"; "FVV_VSGNJ"; "FVV_VMAX"; "FVV_VMIN"; "FVV_VSUB"; "FVV_VADD"];
  Hashtbl.add ans "ropw" ["RISCV_SRAW"; "RISCV_SRLW"; "RISCV_SLLW"; "RISCV_SUBW"; "RISCV_ADDW"];
  Hashtbl.add ans "fwvffunct6" ["FWVF_VMUL"; "FWVF_VSUB"; "FWVF_VADD"];
  Hashtbl.add ans "f_bin_op_S" ["FLE_S"; "FLT_S"; "FEQ_S"; "FMAX_S"; "FMIN_S"; "FSGNJX_S"; "FSGNJN_S"; "FSGNJ_S"];
  Hashtbl.add ans "pmpAddrMatch" ["PMP_Match"; "PMP_PartialMatch"; "PMP_NoMatch"];
  Hashtbl.add ans "agtype" ["AGNOSTIC"; "UNDISTURBED"];
  Hashtbl.add ans "f_madd_op_H" ["FNMADD_H"; "FNMSUB_H"; "FMSUB_H"; "FMADD_H"];
  Hashtbl.add ans "f_un_rm_op_D" ["FCVT_D_LU"; "FCVT_D_L"; "FCVT_LU_D"; "FCVT_L_D"; "FCVT_D_S"; "FCVT_S_D"; "FCVT_D_WU"; "FCVT_D_W"; "FCVT_WU_D"; "FCVT_W_D"; "FSQRT_D"];
  Hashtbl.add ans "vfnunary0" ["FNV_CVT_RTZ_X_F"; "FNV_CVT_RTZ_XU_F"; "FNV_CVT_ROD_F_F"; "FNV_CVT_F_F"; "FNV_CVT_F_X"; "FNV_CVT_F_XU"; "FNV_CVT_X_F"; "FNV_CVT_XU_F"];
  Hashtbl.add ans "amoop" ["AMOMAXU"; "AMOMINU"; "AMOMAX"; "AMOMIN"; "AMOOR"; "AMOAND"; "AMOXOR"; "AMOADD"; "AMOSWAP"];
  Hashtbl.add ans "csrop" ["CSRRC"; "CSRRS"; "CSRRW"];
  Hashtbl.add ans "fwvvfunct6" ["FWVV_VMUL"; "FWVV_VSUB"; "FWVV_VADD"];
  Hashtbl.add ans "f_un_rm_op_H" ["FCVT_H_LU"; "FCVT_H_L"; "FCVT_LU_H"; "FCVT_L_H"; "FCVT_D_H"; "FCVT_S_H"; "FCVT_H_D"; "FCVT_H_S"; "FCVT_H_WU"; "FCVT_H_W"; "FCVT_WU_H"; "FCVT_W_H"; "FSQRT_H"];
  Hashtbl.add ans "mvvfunct6" ["MVV_VREM"; "MVV_VREMU"; "MVV_VDIV"; "MVV_VDIVU"; "MVV_VMULHSU"; "MVV_VMULHU"; "MVV_VMULH"; "MVV_VMUL"; "MVV_VASUB"; "MVV_VASUBU"; "MVV_VAADD"; "MVV_VAADDU"];
  Hashtbl.add ans "Access_strength" ["AS_acq_rcpc"; "AS_rel_or_acq"; "AS_normal"];
  Hashtbl.add ans "vxmfunct6" ["VXM_VMSBC"; "VXM_VMADC"];
  Hashtbl.add ans "wvfunct6" ["WV_VSUBU"; "WV_VADDU"; "WV_VSUB"; "WV_VADD"];
  Hashtbl.add ans "brop_zbs" ["RISCV_BSET"; "RISCV_BINV"; "RISCV_BEXT"; "RISCV_BCLR"];
  Hashtbl.add ans "wmvxfunct6" ["WMVX_VWMACCSU"; "WMVX_VWMACCUS"; "WMVX_VWMACC"; "WMVX_VWMACCU"];
  Hashtbl.add ans "nisfunct6" ["NIS_VNSRA"; "NIS_VNSRL"];
  Hashtbl.add ans "vvmcfunct6" ["VVMC_VMSBC"; "VVMC_VMADC"];
  Hashtbl.add ans "vvfunct6" ["VV_VSSRA"; "VV_VSSRL"; "VV_VSRA"; "VV_VSRL"; "VV_VSMUL"; "VV_VSLL"; "VV_VSSUB"; "VV_VSSUBU"; "VV_VSADD"; "VV_VSADDU"; "VV_VRGATHEREI16"; "VV_VRGATHER"; "VV_VXOR"; "VV_VOR"; "VV_VAND"; "VV_VMAX"; "VV_VMAXU"; "VV_VMIN"; "VV_VMINU"; "VV_VSUB"; "VV_VADD"];
  Hashtbl.add ans "f_un_op_D" ["FMV_D_X"; "FMV_X_D"; "FCLASS_D"];
  Hashtbl.add ans "vfwunary0" ["FWV_CVT_RTZ_X_F"; "FWV_CVT_RTZ_XU_F"; "FWV_CVT_F_F"; "FWV_CVT_F_X"; "FWV_CVT_F_XU"; "FWV_CVT_X_F"; "FWV_CVT_XU_F"];
  Hashtbl.add ans "sop" ["RISCV_SRAI"; "RISCV_SRLI"; "RISCV_SLLI"];
  Hashtbl.add ans "Access_variety" ["AV_atomic_rmw"; "AV_exclusive"; "AV_plain"];
  Hashtbl.add ans "f_un_rm_op_S" ["FCVT_S_LU"; "FCVT_S_L"; "FCVT_LU_S"; "FCVT_L_S"; "FCVT_S_WU"; "FCVT_S_W"; "FCVT_WU_S"; "FCVT_W_S"; "FSQRT_S"];
  Hashtbl.add ans "bop" ["RISCV_BGEU"; "RISCV_BLTU"; "RISCV_BGE"; "RISCV_BLT"; "RISCV_BNE"; "RISCV_BEQ"];
  Hashtbl.add ans "rop" ["RISCV_AND"; "RISCV_OR"; "RISCV_SRA"; "RISCV_SRL"; "RISCV_XOR"; "RISCV_SLTU"; "RISCV_SLT"; "RISCV_SLL"; "RISCV_SUB"; "RISCV_ADD"];
  Hashtbl.add ans "nifunct6" ["NI_VNCLIP"; "NI_VNCLIPU"];
  Hashtbl.add ans "extension" ["Ext_V"; "Ext_Zicond"; "Ext_Zbkx"; "Ext_Zksed"; "Ext_Zksh"; "Ext_Zknd"; "Ext_Zkne"; "Ext_Zknh"; "Ext_Zfa"; "Ext_Zhinx"; "Ext_Zcb"; "Ext_Zbs"; "Ext_Zbkc"; "Ext_Zbc"; "Ext_Zbkb"; "Ext_Zbb"; "Ext_Zba"; "Ext_B"; "Ext_Svinval"; "Ext_Zcd"; "Ext_Zdinx"; "Ext_Zcf"; "Ext_Zfh"; "Ext_Zmmul"; "Ext_M"; "Ext_Zaamo"; "Ext_Zalrsc"; "Ext_Zabha"; "Ext_Zca"; "Ext_C"; "Ext_Zkr"; "Ext_Zfinx"; "Ext_D"; "Ext_F"; "Ext_S"; "Ext_U"; "Ext_N"];
  Hashtbl.add ans "TrapVectorMode" ["TV_Reserved"; "TV_Vector"; "TV_Direct"];
  Hashtbl.add ans "fwvvmafunct6" ["FWVV_VNMSAC"; "FWVV_VMSAC"; "FWVV_VNMACC"; "FWVV_VMACC"];
  Hashtbl.add ans "wxfunct6" ["WX_VSUBU"; "WX_VADDU"; "WX_VSUB"; "WX_VADD"];
  Hashtbl.add ans "vimsfunct6" ["VIMS_VADC"];
  Hashtbl.add ans "maskfunct3" ["VX_VMERGE"; "VI_VMERGE"; "VV_VMERGE"];
  Hashtbl.add ans "fwvfunct6" ["FWV_VSUB"; "FWV_VADD"];
  Hashtbl.add ans "vxmcfunct6" ["VXMC_VMSBC"; "VXMC_VMADC"];
  Hashtbl.add ans "brop_zba" ["RISCV_SH3ADD"; "RISCV_SH2ADD"; "RISCV_SH1ADD"];
  Hashtbl.add ans "rmvvfunct6" ["MVV_VREDMAX"; "MVV_VREDMAXU"; "MVV_VREDMIN"; "MVV_VREDMINU"; "MVV_VREDXOR"; "MVV_VREDOR"; "MVV_VREDAND"; "MVV_VREDSUM"];
  Hashtbl.add ans "barrier_kind" ["Barrier_RISCV_i"; "Barrier_RISCV_tso"; "Barrier_RISCV_w_r"; "Barrier_RISCV_r_w"; "Barrier_RISCV_rw_r"; "Barrier_RISCV_w_rw"; "Barrier_RISCV_w_w"; "Barrier_RISCV_rw_w"; "Barrier_RISCV_r_r"; "Barrier_RISCV_r_rw"; "Barrier_RISCV_rw_rw"];
  Hashtbl.add ans "PmpAddrMatchType" ["NAPOT"; "NA4"; "TOR"; "OFF"];
  Hashtbl.add ans "f_un_op_S" ["FMV_W_X"; "FMV_X_W"; "FCLASS_S"];
  Hashtbl.add ans "iop" ["RISCV_ANDI"; "RISCV_ORI"; "RISCV_XORI"; "RISCV_SLTIU"; "RISCV_SLTI"; "RISCV_ADDI"];
  Hashtbl.add ans "fwffunct6" ["FWF_VSUB"; "FWF_VADD"];
  Hashtbl.add ans "bropw_zba" ["RISCV_SH3ADDUW"; "RISCV_SH2ADDUW"; "RISCV_SH1ADDUW"; "RISCV_ADDUW"];
  Hashtbl.add ans "f_bin_rm_op_S" ["FDIV_S"; "FMUL_S"; "FSUB_S"; "FADD_S"];
  Hashtbl.add ans "vxfunct6" ["VX_VSSRA"; "VX_VSSRL"; "VX_VSRA"; "VX_VSRL"; "VX_VSMUL"; "VX_VSLL"; "VX_VSSUB"; "VX_VSSUBU"; "VX_VSADD"; "VX_VSADDU"; "VX_VXOR"; "VX_VOR"; "VX_VAND"; "VX_VMAX"; "VX_VMAXU"; "VX_VMIN"; "VX_VMINU"; "VX_VRSUB"; "VX_VSUB"; "VX_VADD"];
  Hashtbl.add ans "rounding_mode" ["RM_DYN"; "RM_RMM"; "RM_RUP"; "RM_RDN"; "RM_RTZ"; "RM_RNE"];
  Hashtbl.add ans "vvmsfunct6" ["VVMS_VSBC"; "VVMS_VADC"];
  Hashtbl.add ans "vext2funct6" ["VEXT2_SVF2"; "VEXT2_ZVF2"];
  Hashtbl.add ans "f_madd_op_S" ["FNMADD_S"; "FNMSUB_S"; "FMSUB_S"; "FMADD_S"];
  Hashtbl.add ans "seed_opst" ["DEAD"; "WAIT"; "ES16"; "BIST"];
  Hashtbl.add ans "fvfmfunct6" ["VFM_VMFGE"; "VFM_VMFGT"; "VFM_VMFNE"; "VFM_VMFLT"; "VFM_VMFLE"; "VFM_VMFEQ"];
  Hashtbl.add ans "wmvvfunct6" ["WMVV_VWMACCSU"; "WMVV_VWMACC"; "WMVV_VWMACCU"];
  Hashtbl.add ans "wvvfunct6" ["WVV_VWMULSU"; "WVV_VWMULU"; "WVV_VWMUL"; "WVV_VSUBU"; "WVV_VADDU"; "WVV_VSUB"; "WVV_VADD"];
  Hashtbl.add ans "uop" ["RISCV_AUIPC"; "RISCV_LUI"];
  Hashtbl.add ans "fvffunct6" ["VF_VSLIDE1DOWN"; "VF_VSLIDE1UP"; "VF_VRSUB"; "VF_VMUL"; "VF_VRDIV"; "VF_VDIV"; "VF_VSGNJX"; "VF_VSGNJN"; "VF_VSGNJ"; "VF_VMAX"; "VF_VMIN"; "VF_VSUB"; "VF_VADD"];
  Hashtbl.add ans "vlewidth" ["VLE64"; "VLE32"; "VLE16"; "VLE8"];
  Hashtbl.add ans "fvvmfunct6" ["FVVM_VMFNE"; "FVVM_VMFLT"; "FVVM_VMFLE"; "FVVM_VMFEQ"];
  Hashtbl.add ans "visgfunct6" ["VI_VRGATHER"; "VI_VSLIDEDOWN"; "VI_VSLIDEUP"];
  Hashtbl.add ans "vmlsop" ["VSM"; "VLM"];
  Hashtbl.add ans "f_bin_rm_op_D" ["FDIV_D"; "FMUL_D"; "FSUB_D"; "FADD_D"];
  Hashtbl.add ans "nxsfunct6" ["NXS_VNSRA"; "NXS_VNSRL"];
  Hashtbl.add ans "extop_zbb" ["RISCV_ZEXTH"; "RISCV_SEXTH"; "RISCV_SEXTB"];
  Hashtbl.add ans "zicondop" ["RISCV_CZERO_NEZ"; "RISCV_CZERO_EQZ"];
  Hashtbl.add ans "f_bin_op_H" ["FLE_H"; "FLT_H"; "FEQ_H"; "FMAX_H"; "FMIN_H"; "FSGNJX_H"; "FSGNJN_H"; "FSGNJ_H"];
  Hashtbl.add ans "vvcmpfunct6" ["VVCMP_VMSLE"; "VVCMP_VMSLEU"; "VVCMP_VMSLT"; "VVCMP_VMSLTU"; "VVCMP_VMSNE"; "VVCMP_VMSEQ"];
  Hashtbl.add ans "nxfunct6" ["NX_VNCLIP"; "NX_VNCLIPU"];
  Hashtbl.add ans "nvsfunct6" ["NVS_VNSRA"; "NVS_VNSRL"];
  Hashtbl.add ans "vxmsfunct6" ["VXMS_VSBC"; "VXMS_VADC"];
  Hashtbl.add ans "nvfunct6" ["NV_VNCLIP"; "NV_VNCLIPU"];
  Hashtbl.add ans "mvxmafunct6" ["MVX_VNMSUB"; "MVX_VMADD"; "MVX_VNMSAC"; "MVX_VMACC"];
  Hashtbl.add ans "brop_zbb" ["RISCV_ROR"; "RISCV_ROL"; "RISCV_MINU"; "RISCV_MIN"; "RISCV_MAXU"; "RISCV_MAX"; "RISCV_XNOR"; "RISCV_ORN"; "RISCV_ANDN"];
  Hashtbl.add ans "vfunary0" ["FV_CVT_RTZ_X_F"; "FV_CVT_RTZ_XU_F"; "FV_CVT_F_X"; "FV_CVT_F_XU"; "FV_CVT_X_F"; "FV_CVT_XU_F"];
  Hashtbl.add ans "vxcmpfunct6" ["VXCMP_VMSGT"; "VXCMP_VMSGTU"; "VXCMP_VMSLE"; "VXCMP_VMSLEU"; "VXCMP_VMSLT"; "VXCMP_VMSLTU"; "VXCMP_VMSNE"; "VXCMP_VMSEQ"];
  Hashtbl.add ans "read_kind" ["Read_RISCV_reserved_strong_acquire"; "Read_RISCV_reserved_acquire"; "Read_RISCV_reserved"; "Read_RISCV_strong_acquire"; "Read_RISCV_acquire"; "Read_ifetch"; "Read_plain"];
  Hashtbl.add ans "ExtStatus" ["Dirty"; "Clean"; "Initial"; "Off"];
  Hashtbl.add ans "SATPMode" ["Sv48"; "Sv39"; "Sv32"; "Sbare"];
  Hashtbl.add ans "fvfmafunct6" ["VF_VNMSAC"; "VF_VMSAC"; "VF_VNMACC"; "VF_VMACC"; "VF_VNMSUB"; "VF_VMSUB"; "VF_VNMADD"; "VF_VMADD"];
  Hashtbl.add ans "InterruptType" ["I_M_External"; "I_S_External"; "I_U_External"; "I_M_Timer"; "I_S_Timer"; "I_U_Timer"; "I_M_Software"; "I_S_Software"; "I_U_Software"];
  Hashtbl.add ans "pmpMatch" ["PMP_Fail"; "PMP_Continue"; "PMP_Success"];
  Hashtbl.add ans "f_madd_op_D" ["FNMADD_D"; "FNMSUB_D"; "FMSUB_D"; "FMADD_D"];
  Hashtbl.add ans "vext8funct6" ["VEXT8_SVF8"; "VEXT8_ZVF8"];
  Hashtbl.add ans "mvxfunct6" ["MVX_VREM"; "MVX_VREMU"; "MVX_VDIV"; "MVX_VDIVU"; "MVX_VMULHSU"; "MVX_VMULHU"; "MVX_VMULH"; "MVX_VMUL"; "MVX_VSLIDE1DOWN"; "MVX_VSLIDE1UP"; "MVX_VASUB"; "MVX_VASUBU"; "MVX_VAADD"; "MVX_VAADDU"];
  Hashtbl.add ans "Architecture" ["RV128"; "RV64"; "RV32"];
  Hashtbl.add ans "f_bin_rm_op_H" ["FDIV_H"; "FMUL_H"; "FSUB_H"; "FADD_H"];
  Hashtbl.add ans "Privilege" ["Machine"; "Supervisor"; "User"];
  Hashtbl.add ans "bropw_zbb" ["RISCV_RORW"; "RISCV_ROLW"];
  Hashtbl.add ans "vimfunct6" ["VIM_VMADC"];
  Hashtbl.add ans "rfvvfunct6" ["FVV_VFWREDUSUM"; "FVV_VFWREDOSUM"; "FVV_VFREDMIN"; "FVV_VFREDMAX"; "FVV_VFREDUSUM"; "FVV_VFREDOSUM"];
  Hashtbl.add ans "word_width" ["DOUBLE"; "WORD"; "HALF"; "BYTE"];
  Hashtbl.add ans "sopw" ["RISCV_SRAIW"; "RISCV_SRLIW"; "RISCV_SLLIW"];
  Hashtbl.add ans "biop_zbs" ["RISCV_BSETI"; "RISCV_BINVI"; "RISCV_BEXTI"; "RISCV_BCLRI"];
  Hashtbl.add ans "f_bin_op_D" ["FLE_D"; "FLT_D"; "FEQ_D"; "FMAX_D"; "FMIN_D"; "FSGNJX_D"; "FSGNJN_D"; "FSGNJ_D"];
  Hashtbl.add ans "f_un_op_H" ["FMV_H_X"; "FMV_X_H"; "FCLASS_H"];
  Hashtbl.add ans "Retired" ["RETIRE_FAIL"; "RETIRE_SUCCESS"];
  Hashtbl.add ans "write_kind" ["Write_RISCV_conditional_strong_release"; "Write_RISCV_conditional_release"; "Write_RISCV_conditional"; "Write_RISCV_strong_release"; "Write_RISCV_release"; "Write_plain"];
  Hashtbl.add ans "vvmfunct6" ["VVM_VMSBC"; "VVM_VMADC"];
  Hashtbl.add ans "mmfunct6" ["MM_VMXNOR"; "MM_VMORN"; "MM_VMNOR"; "MM_VMOR"; "MM_VMXOR"; "MM_VMANDN"; "MM_VMNAND"; "MM_VMAND"];
  Hashtbl.add ans "vext4funct6" ["VEXT4_SVF4"; "VEXT4_ZVF4"];
  Hashtbl.add ans "rivvfunct6" ["IVV_VWREDSUM"; "IVV_VWREDSUMU"];
  Hashtbl.add ans "vimcfunct6" ["VIMC_VMADC"];
  Hashtbl.add ans "vicmpfunct6" ["VICMP_VMSGT"; "VICMP_VMSGTU"; "VICMP_VMSLE"; "VICMP_VMSLEU"; "VICMP_VMSNE"; "VICMP_VMSEQ"];
  Hashtbl.add ans "fvvmafunct6" ["FVV_VNMSAC"; "FVV_VMSAC"; "FVV_VNMACC"; "FVV_VMACC"; "FVV_VNMSUB"; "FVV_VMSUB"; "FVV_VNMADD"; "FVV_VMADD"];
  Hashtbl.add ans "mvvmafunct6" ["MVV_VNMSUB"; "MVV_VMADD"; "MVV_VNMSAC"; "MVV_VMACC"];
  Hashtbl.add ans "vxsgfunct6" ["VX_VRGATHER"; "VX_VSLIDEDOWN"; "VX_VSLIDEUP"];
  Hashtbl.add ans "brop_zbkb" ["RISCV_PACKH"; "RISCV_PACK"];
  Hashtbl.add ans "vifunct6" ["VI_VSSRA"; "VI_VSSRL"; "VI_VSRA"; "VI_VSRL"; "VI_VSLL"; "VI_VSADD"; "VI_VSADDU"; "VI_VXOR"; "VI_VOR"; "VI_VAND"; "VI_VRSUB"; "VI_VADD"];
  Hashtbl.add ans "wvxfunct6" ["WVX_VWMULSU"; "WVX_VWMULU"; "WVX_VWMUL"; "WVX_VSUBU"; "WVX_VADDU"; "WVX_VSUB"; "WVX_VADD"];
  Hashtbl.add ans "fwvfmafunct6" ["FWVF_VNMSAC"; "FWVF_VMSAC"; "FWVF_VNMACC"; "FWVF_VMACC"];
  Hashtbl.add ans "vfunary1" ["FVV_VCLASS"; "FVV_VREC7"; "FVV_VRSQRT7"; "FVV_VSQRT"];
  ans
   
let find_opt = Hashtbl.find_opt enums
let find_exn = Hashtbl.find enums
let mem = Hashtbl.mem enums 
