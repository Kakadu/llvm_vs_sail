(rule
 (targets ./RISCV.td.json)
 (deps llvm19/RISCV.tar.xz)
 ;  (mode
 ;   (promote (until-clean)))
 (action
  (run tar -xvf %{deps})))

(rule
 (targets script.jq.online)
 (deps script.jq)
 (action
  (pipe-stdout
   (with-stdin-from
    %{deps}
    (run sed "/^#/d"))
   (with-stdout-to
    %{targets}
    (run tr "'\\n'" " ")))))

(rule
 (targets script_key_asm.jq.online)
 (deps script_key_asm.jq)
 (action
  (pipe-stdout
   (with-stdin-from
    %{deps}
    (run sed "/^#/d"))
   (with-stdout-to
    %{targets}
    (run tr "'\\n'" " ")))))

(rule
 (targets ./RISCV.instructions.json)
 (deps
  (:riscv ./RISCV.td.json)
  (:script script.jq.online))
 (mode
  (promote (until-clean)))
 (action
  (progn
   (with-stdout-to
    %{targets}
    (run sh -c "jq -f %{script}  %{riscv} | jq ."))
   (run ls -lh %{targets})
   ;
   )))

(rule
 (targets ./RISCV.instructions.key.asm.json)
 (deps
  (:riscv ./RISCV.td.json)
  (:script script_key_asm.jq.online))
 (mode
  (promote (until-clean)))
 (action
  (progn
   (with-stdout-to
    %{targets}
    (run sh -c "jq -f %{script}  %{riscv} | jq ."))
   (run ls -lh %{targets})
   ;
   )))

(executable
 (name dissect)
 (modules dissect)
 (libraries yojson))

(rule
 (targets allkeys.txt.json allkeys.txt)
 (deps RISCV.instructions.json)
 (mode
  (promote (until-clean)))
 (action
  (run ./dissect.exe %{deps} -o allkeys.txt -get-keys)))

(rule
 (targets allmnemonics.txt.json allmnemonics.txt)
 (deps RISCV.instructions.key.asm.json)
 (mode
  (promote (until-clean)))
 (action
  (run ./dissect.exe %{deps} -o allmnemonics.txt -get-keys)))
